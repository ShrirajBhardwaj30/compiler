Terminals unused in grammar

   QUES
   COLON
   WHITESPACE
   IFDEF
   IFNDEF
   SYN_ERROR
   PRINT
   LTGT


Grammar

    0 $accept: super_block $end

    1 super_block: start_block

    2 start_block: defination_block start_block
    3            | block
    4            | comment_block defination_block start_block

    5 comment_block: COMMENT
    6              | MULTI_COMMENT

    7 defination_block: DEFINE IDENT const_block

    8 const_block: STRING
    9            | NUM
   10            | CHARACTER

   11 block: function_def_block block
   12      | general_block
   13      | comment_block function_def_block block

   14 general_block: general_stmt general_block
   15              | loop_block general_block
   16              | if_else_block general_block
   17              | comment_block general_block
   18              | %empty

   19 if_else_block: IF OP if_condition CP OCB general_block CCB
   20              | IF OP if_condition CP OCB general_block CCB ELSE OCB general_block CCB
   21              | IF OP if_condition CP OCB general_block CCB ELSE if_else_block

   22 if_condition: conditional_expr

   23 loop_block: for_loop_block
   24           | while_loop_block
   25           | do_while_loop_block

   26 while_loop_block: WHILE OP while_condition CP OCB general_block CCB

   27 while_condition: conditional_expr

   28 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition CP TERMINATOR

   29 do_while_condition: conditional_expr

   30 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB

   31 for_initialization: function_call_block COMMA for_initialization
   32                   | assignment_block COMMA for_initialization
   33                   | ass_var_block arith_unary_op COMMA for_initialization
   34                   | arith_unary_op ass_var_block COMMA for_initialization
   35                   | assignment_block TERMINATOR
   36                   | ass_var_block arith_unary_op TERMINATOR
   37                   | arith_unary_op ass_var_block TERMINATOR
   38                   | function_call_block TERMINATOR
   39                   | TERMINATOR

   40 for_condition: conditional_expr

   41 for_update: function_call_block COMMA for_update
   42           | assignment_block COMMA for_update
   43           | ass_var_block arith_unary_op COMMA for_update
   44           | arith_unary_op ass_var_block COMMA for_update
   45           | function_call_block
   46           | assignment_block
   47           | ass_var_block arith_unary_op
   48           | arith_unary_op ass_var_block
   49           | %empty

   50 function_def_block: FUNCTION IDENT OP argument_list_block CP OCB general_block CCB

   51 argument_list_block: data_type var_block COMMA argument_list_block
   52                    | data_type var_block
   53                    | %empty

   54 general_stmt: declaration_block TERMINATOR
   55             | assignment_block TERMINATOR
   56             | expr TERMINATOR

   57 function_call_block: IDENT OP ass_var_list CP

   58 declaration_block: data_type var_list

   59 var_list: var_block COMMA var_list
   60         | var_block
   61         | array_block COMMA var_list
   62         | array_block

   63 ass_var_list: ass_var_block COMMA ass_var_list
   64             | ass_var_block
   65             | const_block COMMA ass_var_list
   66             | const_block

   67 data_type: INT
   68          | FLOAT
   69          | DOUBLE
   70          | CHAR
   71          | LONG

   72 var_block: VAR
   73          | POINTER

   74 array_block: var_block OB expr CB

   75 ass_var_block: var_block
   76              | DREF
   77              | var_block OB expr CB

   78 assignment_block: ass_var_block ASSIGN conditional_expr
   79                 | ass_var_block arith_assgn_op conditional_expr
   80                 | ass_var_block bit_assgn_op conditional_expr
   81                 | ass_var_block ASSIGN assignment_block
   82                 | ass_var_block arith_assgn_op assignment_block
   83                 | ass_var_block bit_assgn_op assignment_block
   84                 | OP assignment_block CP

   85 expr: ass_var_block arith_binary_op expr
   86     | ass_var_block arith_unary_op expr
   87     | ass_var_block bit_binary_op expr
   88     | bit_unary_op ass_var_block
   89     | arith_unary_op ass_var_block expr
   90     | ass_var_block
   91     | const_block
   92     | function_call_block
   93     | OP conditional_expr CP arith_binary_op expr
   94     | OP conditional_expr CP bit_binary_op expr
   95     | OP conditional_expr CP
   96     | const_block arith_binary_op expr
   97     | const_block bit_binary_op expr
   98     | function_call_block arith_binary_op expr
   99     | function_call_block bit_binary_op expr
  100     | bit_unary_op const_block
  101     | %empty

  102 conditional_expr: expr arith_condition_op conditional_expr
  103                 | expr bit_condition_op conditional_expr
  104                 | expr
  105                 | fixed_condition
  106                 | bit_unary_condition_op expr

  107 arith_condition_op: EQ
  108                   | NOTEQ
  109                   | GT
  110                   | LT
  111                   | GE
  112                   | LE

  113 bit_condition_op: AND
  114                 | OR

  115 bit_unary_condition_op: NOT_1

  116 fixed_condition: TRUE_1
  117                | FALSE_1

  118 arith_binary_op: ADD
  119                | SUB
  120                | MULT
  121                | DIV
  122                | EXP
  123                | MOD

  124 arith_unary_op: INC
  125               | DEC

  126 bit_binary_op: BIN_AND
  127              | BIN_OR
  128              | BIN_XOR
  129              | BIN_LEFT
  130              | BIN_RIGHT

  131 bit_unary_op: BIN_NOT

  132 arith_assgn_op: ADD_ASSIGN
  133               | SUB_ASSIGN
  134               | MULT_ASSIGN
  135               | DIV_ASSIGN
  136               | MOD_ASSIGN
  137               | LEFT_ASSIGN
  138               | RIGHT_ASSIGN

  139 bit_assgn_op: BIN_AND_ASSIGN
  140             | BIN_IOR_ASSIGN
  141             | BIN_XOR_ASSIGN


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 19 20 21
ELSE (259) 20 21
WHILE (260) 26 28
DO (261) 28
FOR (262) 30
AND (263) 113
OR (264) 114
NOT_1 (265) 115
TRUE_1 (266) 116
FALSE_1 (267) 117
INT (268) 67
LONG (269) 71
CHAR (270) 70
FLOAT (271) 68
DOUBLE (272) 69
ADD (273) 118
SUB (274) 119
MULT (275) 120
DIV (276) 121
EXP (277) 122
MOD (278) 123
INC (279) 124
DEC (280) 125
QUES (281)
BIN_NOT (282) 131
BIN_AND (283) 126
BIN_OR (284) 127
BIN_XOR (285) 128
BIN_LEFT (286) 129
BIN_RIGHT (287) 130
BIN_AND_ASSIGN (288) 139
BIN_IOR_ASSIGN (289) 140
BIN_XOR_ASSIGN (290) 141
ADD_ASSIGN (291) 132
SUB_ASSIGN (292) 133
MULT_ASSIGN (293) 134
DIV_ASSIGN (294) 135
MOD_ASSIGN (295) 136
LEFT_ASSIGN (296) 137
RIGHT_ASSIGN (297) 138
NUM (298) 9
IDENT (299) 7 50 57
VAR (300) 72
POINTER (301) 73
DREF (302) 76
ASSIGN (303) 78 81
TERMINATOR (304) 28 30 35 36 37 38 39 54 55 56
COLON (305)
STRING (306) 8
CHARACTER (307) 10
OP (308) 19 20 21 26 28 30 50 57 84 93 94 95
CP (309) 19 20 21 26 28 30 50 57 84 93 94 95
CB (310) 74 77
OB (311) 74 77
OCB (312) 19 20 21 26 28 30 50
CCB (313) 19 20 21 26 28 30 50
EQ (314) 107
NOTEQ (315) 108
GT (316) 109
LT (317) 110
GE (318) 111
LE (319) 112
COMMENT (320) 5
MULTI_COMMENT (321) 6
WHITESPACE (322)
DEFINE (323) 7
IFDEF (324)
IFNDEF (325)
FUNCTION (326) 50
COMMA (327) 31 32 33 34 41 42 43 44 51 59 61 63 65
SYN_ERROR (328)
PRINT (329)
LTGT (330)


Nonterminals, with rules where they appear

$accept (76)
    on left: 0
super_block (77)
    on left: 1, on right: 0
start_block (78)
    on left: 2 3 4, on right: 1 2 4
comment_block (79)
    on left: 5 6, on right: 4 13 17
defination_block (80)
    on left: 7, on right: 2 4
const_block (81)
    on left: 8 9 10, on right: 7 65 66 91 96 97 100
block (82)
    on left: 11 12 13, on right: 3 11 13
general_block (83)
    on left: 14 15 16 17 18, on right: 12 14 15 16 17 19 20 21 26 28
    30 50
if_else_block (84)
    on left: 19 20 21, on right: 16 21
if_condition (85)
    on left: 22, on right: 19 20 21
loop_block (86)
    on left: 23 24 25, on right: 15
while_loop_block (87)
    on left: 26, on right: 24
while_condition (88)
    on left: 27, on right: 26
do_while_loop_block (89)
    on left: 28, on right: 25
do_while_condition (90)
    on left: 29, on right: 28
for_loop_block (91)
    on left: 30, on right: 23
for_initialization (92)
    on left: 31 32 33 34 35 36 37 38 39, on right: 30 31 32 33 34
for_condition (93)
    on left: 40, on right: 30
for_update (94)
    on left: 41 42 43 44 45 46 47 48 49, on right: 30 41 42 43 44
function_def_block (95)
    on left: 50, on right: 11 13
argument_list_block (96)
    on left: 51 52 53, on right: 50 51
general_stmt (97)
    on left: 54 55 56, on right: 14
function_call_block (98)
    on left: 57, on right: 31 38 41 45 92 98 99
declaration_block (99)
    on left: 58, on right: 54
var_list (100)
    on left: 59 60 61 62, on right: 58 59 61
ass_var_list (101)
    on left: 63 64 65 66, on right: 57 63 65
data_type (102)
    on left: 67 68 69 70 71, on right: 51 52 58
var_block (103)
    on left: 72 73, on right: 51 52 59 60 74 75 77
array_block (104)
    on left: 74, on right: 61 62
ass_var_block (105)
    on left: 75 76 77, on right: 33 34 36 37 43 44 47 48 63 64 78 79
    80 81 82 83 85 86 87 88 89 90
assignment_block (106)
    on left: 78 79 80 81 82 83 84, on right: 32 35 42 46 55 81 82 83
    84
expr (107)
    on left: 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101,
    on right: 56 74 77 85 86 87 89 93 94 96 97 98 99 102 103 104 106
conditional_expr (108)
    on left: 102 103 104 105 106, on right: 22 27 29 40 78 79 80 93
    94 95 102 103
arith_condition_op (109)
    on left: 107 108 109 110 111 112, on right: 102
bit_condition_op (110)
    on left: 113 114, on right: 103
bit_unary_condition_op (111)
    on left: 115, on right: 106
fixed_condition (112)
    on left: 116 117, on right: 105
arith_binary_op (113)
    on left: 118 119 120 121 122 123, on right: 85 93 96 98
arith_unary_op (114)
    on left: 124 125, on right: 33 34 36 37 43 44 47 48 86 89
bit_binary_op (115)
    on left: 126 127 128 129 130, on right: 87 94 97 99
bit_unary_op (116)
    on left: 131, on right: 88 100
arith_assgn_op (117)
    on left: 132 133 134 135 136 137 138, on right: 79 82
bit_assgn_op (118)
    on left: 139 140 141, on right: 80 83


State 0

    0 $accept: . super_block $end

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22
    DEFINE         shift, and go to state 23
    FUNCTION       shift, and go to state 24

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    super_block          go to state 25
    start_block          go to state 26
    comment_block        go to state 27
    defination_block     go to state 28
    const_block          go to state 29
    block                go to state 30
    general_block        go to state 31
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    function_def_block   go to state 37
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 1

   19 if_else_block: IF . OP if_condition CP OCB general_block CCB
   20              | IF . OP if_condition CP OCB general_block CCB ELSE OCB general_block CCB
   21              | IF . OP if_condition CP OCB general_block CCB ELSE if_else_block

    OP  shift, and go to state 48


State 2

   26 while_loop_block: WHILE . OP while_condition CP OCB general_block CCB

    OP  shift, and go to state 49


State 3

   28 do_while_loop_block: DO . OCB general_block CCB WHILE OP do_while_condition CP TERMINATOR

    OCB  shift, and go to state 50


State 4

   30 for_loop_block: FOR . OP for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB

    OP  shift, and go to state 51


State 5

   67 data_type: INT .

    $default  reduce using rule 67 (data_type)


State 6

   71 data_type: LONG .

    $default  reduce using rule 71 (data_type)


State 7

   70 data_type: CHAR .

    $default  reduce using rule 70 (data_type)


State 8

   68 data_type: FLOAT .

    $default  reduce using rule 68 (data_type)


State 9

   69 data_type: DOUBLE .

    $default  reduce using rule 69 (data_type)


State 10

  124 arith_unary_op: INC .

    $default  reduce using rule 124 (arith_unary_op)


State 11

  125 arith_unary_op: DEC .

    $default  reduce using rule 125 (arith_unary_op)


State 12

  131 bit_unary_op: BIN_NOT .

    $default  reduce using rule 131 (bit_unary_op)


State 13

    9 const_block: NUM .

    $default  reduce using rule 9 (const_block)


State 14

   57 function_call_block: IDENT . OP ass_var_list CP

    OP  shift, and go to state 52


State 15

   72 var_block: VAR .

    $default  reduce using rule 72 (var_block)


State 16

   73 var_block: POINTER .

    $default  reduce using rule 73 (var_block)


State 17

   76 ass_var_block: DREF .

    $default  reduce using rule 76 (ass_var_block)


State 18

    8 const_block: STRING .

    $default  reduce using rule 8 (const_block)


State 19

   10 const_block: CHARACTER .

    $default  reduce using rule 10 (const_block)


State 20

   84 assignment_block: OP . assignment_block CP
   93 expr: OP . conditional_expr CP arith_binary_op expr
   94     | OP . conditional_expr CP bit_binary_op expr
   95     | OP . conditional_expr CP

    NOT_1      shift, and go to state 53
    TRUE_1     shift, and go to state 54
    FALSE_1    shift, and go to state 55
    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 20

    $default  reduce using rule 101 (expr)

    const_block             go to state 29
    function_call_block     go to state 39
    var_block               go to state 42
    ass_var_block           go to state 43
    assignment_block        go to state 56
    expr                    go to state 57
    conditional_expr        go to state 58
    bit_unary_condition_op  go to state 59
    fixed_condition         go to state 60
    arith_unary_op          go to state 46
    bit_unary_op            go to state 47


State 21

    5 comment_block: COMMENT .

    $default  reduce using rule 5 (comment_block)


State 22

    6 comment_block: MULTI_COMMENT .

    $default  reduce using rule 6 (comment_block)


State 23

    7 defination_block: DEFINE . IDENT const_block

    IDENT  shift, and go to state 61


State 24

   50 function_def_block: FUNCTION . IDENT OP argument_list_block CP OCB general_block CCB

    IDENT  shift, and go to state 62


State 25

    0 $accept: super_block . $end

    $end  shift, and go to state 63


State 26

    1 super_block: start_block .

    $default  reduce using rule 1 (super_block)


State 27

    4 start_block: comment_block . defination_block start_block
   13 block: comment_block . function_def_block block
   17 general_block: comment_block . general_block

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22
    DEFINE         shift, and go to state 23
    FUNCTION       shift, and go to state 24

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    comment_block        go to state 64
    defination_block     go to state 65
    const_block          go to state 29
    general_block        go to state 66
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    function_def_block   go to state 67
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 28

    2 start_block: defination_block . start_block

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22
    DEFINE         shift, and go to state 23
    FUNCTION       shift, and go to state 24

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    start_block          go to state 68
    comment_block        go to state 27
    defination_block     go to state 28
    const_block          go to state 29
    block                go to state 30
    general_block        go to state 31
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    function_def_block   go to state 37
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 29

   91 expr: const_block .
   96     | const_block . arith_binary_op expr
   97     | const_block . bit_binary_op expr

    ADD        shift, and go to state 69
    SUB        shift, and go to state 70
    MULT       shift, and go to state 71
    DIV        shift, and go to state 72
    EXP        shift, and go to state 73
    MOD        shift, and go to state 74
    BIN_AND    shift, and go to state 75
    BIN_OR     shift, and go to state 76
    BIN_XOR    shift, and go to state 77
    BIN_LEFT   shift, and go to state 78
    BIN_RIGHT  shift, and go to state 79

    $default  reduce using rule 91 (expr)

    arith_binary_op  go to state 80
    bit_binary_op    go to state 81


State 30

    3 start_block: block .

    $default  reduce using rule 3 (start_block)


State 31

   12 block: general_block .

    $default  reduce using rule 12 (block)


State 32

   16 general_block: if_else_block . general_block

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    comment_block        go to state 64
    const_block          go to state 29
    general_block        go to state 82
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 33

   15 general_block: loop_block . general_block

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    comment_block        go to state 64
    const_block          go to state 29
    general_block        go to state 83
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 34

   24 loop_block: while_loop_block .

    $default  reduce using rule 24 (loop_block)


State 35

   25 loop_block: do_while_loop_block .

    $default  reduce using rule 25 (loop_block)


State 36

   23 loop_block: for_loop_block .

    $default  reduce using rule 23 (loop_block)


State 37

   11 block: function_def_block . block

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22
    FUNCTION       shift, and go to state 24

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    comment_block        go to state 84
    const_block          go to state 29
    block                go to state 85
    general_block        go to state 31
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    function_def_block   go to state 37
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 38

   14 general_block: general_stmt . general_block

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    comment_block        go to state 64
    const_block          go to state 29
    general_block        go to state 86
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 39

   92 expr: function_call_block .
   98     | function_call_block . arith_binary_op expr
   99     | function_call_block . bit_binary_op expr

    ADD        shift, and go to state 69
    SUB        shift, and go to state 70
    MULT       shift, and go to state 71
    DIV        shift, and go to state 72
    EXP        shift, and go to state 73
    MOD        shift, and go to state 74
    BIN_AND    shift, and go to state 75
    BIN_OR     shift, and go to state 76
    BIN_XOR    shift, and go to state 77
    BIN_LEFT   shift, and go to state 78
    BIN_RIGHT  shift, and go to state 79

    $default  reduce using rule 92 (expr)

    arith_binary_op  go to state 87
    bit_binary_op    go to state 88


State 40

   54 general_stmt: declaration_block . TERMINATOR

    TERMINATOR  shift, and go to state 89


State 41

   58 declaration_block: data_type . var_list

    VAR      shift, and go to state 15
    POINTER  shift, and go to state 16

    var_list     go to state 90
    var_block    go to state 91
    array_block  go to state 92


State 42

   75 ass_var_block: var_block .
   77              | var_block . OB expr CB

    OB  shift, and go to state 93

    $default  reduce using rule 75 (ass_var_block)


State 43

   78 assignment_block: ass_var_block . ASSIGN conditional_expr
   79                 | ass_var_block . arith_assgn_op conditional_expr
   80                 | ass_var_block . bit_assgn_op conditional_expr
   81                 | ass_var_block . ASSIGN assignment_block
   82                 | ass_var_block . arith_assgn_op assignment_block
   83                 | ass_var_block . bit_assgn_op assignment_block
   85 expr: ass_var_block . arith_binary_op expr
   86     | ass_var_block . arith_unary_op expr
   87     | ass_var_block . bit_binary_op expr
   90     | ass_var_block .

    ADD             shift, and go to state 69
    SUB             shift, and go to state 70
    MULT            shift, and go to state 71
    DIV             shift, and go to state 72
    EXP             shift, and go to state 73
    MOD             shift, and go to state 74
    INC             shift, and go to state 10
    DEC             shift, and go to state 11
    BIN_AND         shift, and go to state 75
    BIN_OR          shift, and go to state 76
    BIN_XOR         shift, and go to state 77
    BIN_LEFT        shift, and go to state 78
    BIN_RIGHT       shift, and go to state 79
    BIN_AND_ASSIGN  shift, and go to state 94
    BIN_IOR_ASSIGN  shift, and go to state 95
    BIN_XOR_ASSIGN  shift, and go to state 96
    ADD_ASSIGN      shift, and go to state 97
    SUB_ASSIGN      shift, and go to state 98
    MULT_ASSIGN     shift, and go to state 99
    DIV_ASSIGN      shift, and go to state 100
    MOD_ASSIGN      shift, and go to state 101
    LEFT_ASSIGN     shift, and go to state 102
    RIGHT_ASSIGN    shift, and go to state 103
    ASSIGN          shift, and go to state 104

    $default  reduce using rule 90 (expr)

    arith_binary_op  go to state 105
    arith_unary_op   go to state 106
    bit_binary_op    go to state 107
    arith_assgn_op   go to state 108
    bit_assgn_op     go to state 109


State 44

   55 general_stmt: assignment_block . TERMINATOR

    TERMINATOR  shift, and go to state 110


State 45

   56 general_stmt: expr . TERMINATOR

    TERMINATOR  shift, and go to state 111


State 46

   89 expr: arith_unary_op . ass_var_block expr

    VAR      shift, and go to state 15
    POINTER  shift, and go to state 16
    DREF     shift, and go to state 17

    var_block      go to state 42
    ass_var_block  go to state 112


State 47

   88 expr: bit_unary_op . ass_var_block
  100     | bit_unary_op . const_block

    NUM        shift, and go to state 13
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19

    const_block    go to state 113
    var_block      go to state 42
    ass_var_block  go to state 114


State 48

   19 if_else_block: IF OP . if_condition CP OCB general_block CCB
   20              | IF OP . if_condition CP OCB general_block CCB ELSE OCB general_block CCB
   21              | IF OP . if_condition CP OCB general_block CCB ELSE if_else_block

    NOT_1      shift, and go to state 53
    TRUE_1     shift, and go to state 54
    FALSE_1    shift, and go to state 55
    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block             go to state 29
    if_condition            go to state 116
    function_call_block     go to state 39
    var_block               go to state 42
    ass_var_block           go to state 117
    expr                    go to state 57
    conditional_expr        go to state 118
    bit_unary_condition_op  go to state 59
    fixed_condition         go to state 60
    arith_unary_op          go to state 46
    bit_unary_op            go to state 47


State 49

   26 while_loop_block: WHILE OP . while_condition CP OCB general_block CCB

    NOT_1      shift, and go to state 53
    TRUE_1     shift, and go to state 54
    FALSE_1    shift, and go to state 55
    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block             go to state 29
    while_condition         go to state 119
    function_call_block     go to state 39
    var_block               go to state 42
    ass_var_block           go to state 117
    expr                    go to state 57
    conditional_expr        go to state 120
    bit_unary_condition_op  go to state 59
    fixed_condition         go to state 60
    arith_unary_op          go to state 46
    bit_unary_op            go to state 47


State 50

   28 do_while_loop_block: DO OCB . general_block CCB WHILE OP do_while_condition CP TERMINATOR

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    comment_block        go to state 64
    const_block          go to state 29
    general_block        go to state 121
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 51

   30 for_loop_block: FOR OP . for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB

    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    IDENT       shift, and go to state 14
    VAR         shift, and go to state 15
    POINTER     shift, and go to state 16
    DREF        shift, and go to state 17
    TERMINATOR  shift, and go to state 122
    OP          shift, and go to state 123

    for_initialization   go to state 124
    function_call_block  go to state 125
    var_block            go to state 42
    ass_var_block        go to state 126
    assignment_block     go to state 127
    arith_unary_op       go to state 128


State 52

   57 function_call_block: IDENT OP . ass_var_list CP

    NUM        shift, and go to state 13
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19

    const_block    go to state 129
    ass_var_list   go to state 130
    var_block      go to state 42
    ass_var_block  go to state 131


State 53

  115 bit_unary_condition_op: NOT_1 .

    $default  reduce using rule 115 (bit_unary_condition_op)


State 54

  116 fixed_condition: TRUE_1 .

    $default  reduce using rule 116 (fixed_condition)


State 55

  117 fixed_condition: FALSE_1 .

    $default  reduce using rule 117 (fixed_condition)


State 56

   84 assignment_block: OP assignment_block . CP

    CP  shift, and go to state 132


State 57

  102 conditional_expr: expr . arith_condition_op conditional_expr
  103                 | expr . bit_condition_op conditional_expr
  104                 | expr .

    AND    shift, and go to state 133
    OR     shift, and go to state 134
    EQ     shift, and go to state 135
    NOTEQ  shift, and go to state 136
    GT     shift, and go to state 137
    LT     shift, and go to state 138
    GE     shift, and go to state 139
    LE     shift, and go to state 140

    $default  reduce using rule 104 (conditional_expr)

    arith_condition_op  go to state 141
    bit_condition_op    go to state 142


State 58

   93 expr: OP conditional_expr . CP arith_binary_op expr
   94     | OP conditional_expr . CP bit_binary_op expr
   95     | OP conditional_expr . CP

    CP  shift, and go to state 143


State 59

  106 conditional_expr: bit_unary_condition_op . expr

    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block          go to state 29
    function_call_block  go to state 39
    var_block            go to state 42
    ass_var_block        go to state 117
    expr                 go to state 144
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 60

  105 conditional_expr: fixed_condition .

    $default  reduce using rule 105 (conditional_expr)


State 61

    7 defination_block: DEFINE IDENT . const_block

    NUM        shift, and go to state 13
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19

    const_block  go to state 145


State 62

   50 function_def_block: FUNCTION IDENT . OP argument_list_block CP OCB general_block CCB

    OP  shift, and go to state 146


State 63

    0 $accept: super_block $end .

    $default  accept


State 64

   17 general_block: comment_block . general_block

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    comment_block        go to state 64
    const_block          go to state 29
    general_block        go to state 66
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 65

    4 start_block: comment_block defination_block . start_block

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22
    DEFINE         shift, and go to state 23
    FUNCTION       shift, and go to state 24

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    start_block          go to state 147
    comment_block        go to state 27
    defination_block     go to state 28
    const_block          go to state 29
    block                go to state 30
    general_block        go to state 31
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    function_def_block   go to state 37
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 66

   17 general_block: comment_block general_block .

    $default  reduce using rule 17 (general_block)


State 67

   13 block: comment_block function_def_block . block

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22
    FUNCTION       shift, and go to state 24

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    comment_block        go to state 84
    const_block          go to state 29
    block                go to state 148
    general_block        go to state 31
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    function_def_block   go to state 37
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 68

    2 start_block: defination_block start_block .

    $default  reduce using rule 2 (start_block)


State 69

  118 arith_binary_op: ADD .

    $default  reduce using rule 118 (arith_binary_op)


State 70

  119 arith_binary_op: SUB .

    $default  reduce using rule 119 (arith_binary_op)


State 71

  120 arith_binary_op: MULT .

    $default  reduce using rule 120 (arith_binary_op)


State 72

  121 arith_binary_op: DIV .

    $default  reduce using rule 121 (arith_binary_op)


State 73

  122 arith_binary_op: EXP .

    $default  reduce using rule 122 (arith_binary_op)


State 74

  123 arith_binary_op: MOD .

    $default  reduce using rule 123 (arith_binary_op)


State 75

  126 bit_binary_op: BIN_AND .

    $default  reduce using rule 126 (bit_binary_op)


State 76

  127 bit_binary_op: BIN_OR .

    $default  reduce using rule 127 (bit_binary_op)


State 77

  128 bit_binary_op: BIN_XOR .

    $default  reduce using rule 128 (bit_binary_op)


State 78

  129 bit_binary_op: BIN_LEFT .

    $default  reduce using rule 129 (bit_binary_op)


State 79

  130 bit_binary_op: BIN_RIGHT .

    $default  reduce using rule 130 (bit_binary_op)


State 80

   96 expr: const_block arith_binary_op . expr

    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block          go to state 29
    function_call_block  go to state 39
    var_block            go to state 42
    ass_var_block        go to state 117
    expr                 go to state 149
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 81

   97 expr: const_block bit_binary_op . expr

    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block          go to state 29
    function_call_block  go to state 39
    var_block            go to state 42
    ass_var_block        go to state 117
    expr                 go to state 150
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 82

   16 general_block: if_else_block general_block .

    $default  reduce using rule 16 (general_block)


State 83

   15 general_block: loop_block general_block .

    $default  reduce using rule 15 (general_block)


State 84

   13 block: comment_block . function_def_block block
   17 general_block: comment_block . general_block

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22
    FUNCTION       shift, and go to state 24

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    comment_block        go to state 64
    const_block          go to state 29
    general_block        go to state 66
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    function_def_block   go to state 67
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 85

   11 block: function_def_block block .

    $default  reduce using rule 11 (block)


State 86

   14 general_block: general_stmt general_block .

    $default  reduce using rule 14 (general_block)


State 87

   98 expr: function_call_block arith_binary_op . expr

    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block          go to state 29
    function_call_block  go to state 39
    var_block            go to state 42
    ass_var_block        go to state 117
    expr                 go to state 151
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 88

   99 expr: function_call_block bit_binary_op . expr

    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block          go to state 29
    function_call_block  go to state 39
    var_block            go to state 42
    ass_var_block        go to state 117
    expr                 go to state 152
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 89

   54 general_stmt: declaration_block TERMINATOR .

    $default  reduce using rule 54 (general_stmt)


State 90

   58 declaration_block: data_type var_list .

    $default  reduce using rule 58 (declaration_block)


State 91

   59 var_list: var_block . COMMA var_list
   60         | var_block .
   74 array_block: var_block . OB expr CB

    OB     shift, and go to state 153
    COMMA  shift, and go to state 154

    $default  reduce using rule 60 (var_list)


State 92

   61 var_list: array_block . COMMA var_list
   62         | array_block .

    COMMA  shift, and go to state 155

    $default  reduce using rule 62 (var_list)


State 93

   77 ass_var_block: var_block OB . expr CB

    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block          go to state 29
    function_call_block  go to state 39
    var_block            go to state 42
    ass_var_block        go to state 117
    expr                 go to state 156
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 94

  139 bit_assgn_op: BIN_AND_ASSIGN .

    $default  reduce using rule 139 (bit_assgn_op)


State 95

  140 bit_assgn_op: BIN_IOR_ASSIGN .

    $default  reduce using rule 140 (bit_assgn_op)


State 96

  141 bit_assgn_op: BIN_XOR_ASSIGN .

    $default  reduce using rule 141 (bit_assgn_op)


State 97

  132 arith_assgn_op: ADD_ASSIGN .

    $default  reduce using rule 132 (arith_assgn_op)


State 98

  133 arith_assgn_op: SUB_ASSIGN .

    $default  reduce using rule 133 (arith_assgn_op)


State 99

  134 arith_assgn_op: MULT_ASSIGN .

    $default  reduce using rule 134 (arith_assgn_op)


State 100

  135 arith_assgn_op: DIV_ASSIGN .

    $default  reduce using rule 135 (arith_assgn_op)


State 101

  136 arith_assgn_op: MOD_ASSIGN .

    $default  reduce using rule 136 (arith_assgn_op)


State 102

  137 arith_assgn_op: LEFT_ASSIGN .

    $default  reduce using rule 137 (arith_assgn_op)


State 103

  138 arith_assgn_op: RIGHT_ASSIGN .

    $default  reduce using rule 138 (arith_assgn_op)


State 104

   78 assignment_block: ass_var_block ASSIGN . conditional_expr
   81                 | ass_var_block ASSIGN . assignment_block

    NOT_1      shift, and go to state 53
    TRUE_1     shift, and go to state 54
    FALSE_1    shift, and go to state 55
    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 20

    $default  reduce using rule 101 (expr)

    const_block             go to state 29
    function_call_block     go to state 39
    var_block               go to state 42
    ass_var_block           go to state 43
    assignment_block        go to state 157
    expr                    go to state 57
    conditional_expr        go to state 158
    bit_unary_condition_op  go to state 59
    fixed_condition         go to state 60
    arith_unary_op          go to state 46
    bit_unary_op            go to state 47


State 105

   85 expr: ass_var_block arith_binary_op . expr

    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block          go to state 29
    function_call_block  go to state 39
    var_block            go to state 42
    ass_var_block        go to state 117
    expr                 go to state 159
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 106

   86 expr: ass_var_block arith_unary_op . expr

    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block          go to state 29
    function_call_block  go to state 39
    var_block            go to state 42
    ass_var_block        go to state 117
    expr                 go to state 160
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 107

   87 expr: ass_var_block bit_binary_op . expr

    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block          go to state 29
    function_call_block  go to state 39
    var_block            go to state 42
    ass_var_block        go to state 117
    expr                 go to state 161
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 108

   79 assignment_block: ass_var_block arith_assgn_op . conditional_expr
   82                 | ass_var_block arith_assgn_op . assignment_block

    NOT_1      shift, and go to state 53
    TRUE_1     shift, and go to state 54
    FALSE_1    shift, and go to state 55
    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 20

    $default  reduce using rule 101 (expr)

    const_block             go to state 29
    function_call_block     go to state 39
    var_block               go to state 42
    ass_var_block           go to state 43
    assignment_block        go to state 162
    expr                    go to state 57
    conditional_expr        go to state 163
    bit_unary_condition_op  go to state 59
    fixed_condition         go to state 60
    arith_unary_op          go to state 46
    bit_unary_op            go to state 47


State 109

   80 assignment_block: ass_var_block bit_assgn_op . conditional_expr
   83                 | ass_var_block bit_assgn_op . assignment_block

    NOT_1      shift, and go to state 53
    TRUE_1     shift, and go to state 54
    FALSE_1    shift, and go to state 55
    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 20

    $default  reduce using rule 101 (expr)

    const_block             go to state 29
    function_call_block     go to state 39
    var_block               go to state 42
    ass_var_block           go to state 43
    assignment_block        go to state 164
    expr                    go to state 57
    conditional_expr        go to state 165
    bit_unary_condition_op  go to state 59
    fixed_condition         go to state 60
    arith_unary_op          go to state 46
    bit_unary_op            go to state 47


State 110

   55 general_stmt: assignment_block TERMINATOR .

    $default  reduce using rule 55 (general_stmt)


State 111

   56 general_stmt: expr TERMINATOR .

    $default  reduce using rule 56 (general_stmt)


State 112

   89 expr: arith_unary_op ass_var_block . expr

    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block          go to state 29
    function_call_block  go to state 39
    var_block            go to state 42
    ass_var_block        go to state 117
    expr                 go to state 166
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 113

  100 expr: bit_unary_op const_block .

    $default  reduce using rule 100 (expr)


State 114

   88 expr: bit_unary_op ass_var_block .

    $default  reduce using rule 88 (expr)


State 115

   93 expr: OP . conditional_expr CP arith_binary_op expr
   94     | OP . conditional_expr CP bit_binary_op expr
   95     | OP . conditional_expr CP

    NOT_1      shift, and go to state 53
    TRUE_1     shift, and go to state 54
    FALSE_1    shift, and go to state 55
    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block             go to state 29
    function_call_block     go to state 39
    var_block               go to state 42
    ass_var_block           go to state 117
    expr                    go to state 57
    conditional_expr        go to state 58
    bit_unary_condition_op  go to state 59
    fixed_condition         go to state 60
    arith_unary_op          go to state 46
    bit_unary_op            go to state 47


State 116

   19 if_else_block: IF OP if_condition . CP OCB general_block CCB
   20              | IF OP if_condition . CP OCB general_block CCB ELSE OCB general_block CCB
   21              | IF OP if_condition . CP OCB general_block CCB ELSE if_else_block

    CP  shift, and go to state 167


State 117

   85 expr: ass_var_block . arith_binary_op expr
   86     | ass_var_block . arith_unary_op expr
   87     | ass_var_block . bit_binary_op expr
   90     | ass_var_block .

    ADD        shift, and go to state 69
    SUB        shift, and go to state 70
    MULT       shift, and go to state 71
    DIV        shift, and go to state 72
    EXP        shift, and go to state 73
    MOD        shift, and go to state 74
    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_AND    shift, and go to state 75
    BIN_OR     shift, and go to state 76
    BIN_XOR    shift, and go to state 77
    BIN_LEFT   shift, and go to state 78
    BIN_RIGHT  shift, and go to state 79

    $default  reduce using rule 90 (expr)

    arith_binary_op  go to state 105
    arith_unary_op   go to state 106
    bit_binary_op    go to state 107


State 118

   22 if_condition: conditional_expr .

    $default  reduce using rule 22 (if_condition)


State 119

   26 while_loop_block: WHILE OP while_condition . CP OCB general_block CCB

    CP  shift, and go to state 168


State 120

   27 while_condition: conditional_expr .

    $default  reduce using rule 27 (while_condition)


State 121

   28 do_while_loop_block: DO OCB general_block . CCB WHILE OP do_while_condition CP TERMINATOR

    CCB  shift, and go to state 169


State 122

   39 for_initialization: TERMINATOR .

    $default  reduce using rule 39 (for_initialization)


State 123

   84 assignment_block: OP . assignment_block CP

    VAR      shift, and go to state 15
    POINTER  shift, and go to state 16
    DREF     shift, and go to state 17
    OP       shift, and go to state 123

    var_block         go to state 42
    ass_var_block     go to state 170
    assignment_block  go to state 56


State 124

   30 for_loop_block: FOR OP for_initialization . for_condition TERMINATOR for_update CP OCB general_block CCB

    NOT_1      shift, and go to state 53
    TRUE_1     shift, and go to state 54
    FALSE_1    shift, and go to state 55
    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block             go to state 29
    for_condition           go to state 171
    function_call_block     go to state 39
    var_block               go to state 42
    ass_var_block           go to state 117
    expr                    go to state 57
    conditional_expr        go to state 172
    bit_unary_condition_op  go to state 59
    fixed_condition         go to state 60
    arith_unary_op          go to state 46
    bit_unary_op            go to state 47


State 125

   31 for_initialization: function_call_block . COMMA for_initialization
   38                   | function_call_block . TERMINATOR

    TERMINATOR  shift, and go to state 173
    COMMA       shift, and go to state 174


State 126

   33 for_initialization: ass_var_block . arith_unary_op COMMA for_initialization
   36                   | ass_var_block . arith_unary_op TERMINATOR
   78 assignment_block: ass_var_block . ASSIGN conditional_expr
   79                 | ass_var_block . arith_assgn_op conditional_expr
   80                 | ass_var_block . bit_assgn_op conditional_expr
   81                 | ass_var_block . ASSIGN assignment_block
   82                 | ass_var_block . arith_assgn_op assignment_block
   83                 | ass_var_block . bit_assgn_op assignment_block

    INC             shift, and go to state 10
    DEC             shift, and go to state 11
    BIN_AND_ASSIGN  shift, and go to state 94
    BIN_IOR_ASSIGN  shift, and go to state 95
    BIN_XOR_ASSIGN  shift, and go to state 96
    ADD_ASSIGN      shift, and go to state 97
    SUB_ASSIGN      shift, and go to state 98
    MULT_ASSIGN     shift, and go to state 99
    DIV_ASSIGN      shift, and go to state 100
    MOD_ASSIGN      shift, and go to state 101
    LEFT_ASSIGN     shift, and go to state 102
    RIGHT_ASSIGN    shift, and go to state 103
    ASSIGN          shift, and go to state 104

    arith_unary_op  go to state 175
    arith_assgn_op  go to state 108
    bit_assgn_op    go to state 109


State 127

   32 for_initialization: assignment_block . COMMA for_initialization
   35                   | assignment_block . TERMINATOR

    TERMINATOR  shift, and go to state 176
    COMMA       shift, and go to state 177


State 128

   34 for_initialization: arith_unary_op . ass_var_block COMMA for_initialization
   37                   | arith_unary_op . ass_var_block TERMINATOR

    VAR      shift, and go to state 15
    POINTER  shift, and go to state 16
    DREF     shift, and go to state 17

    var_block      go to state 42
    ass_var_block  go to state 178


State 129

   65 ass_var_list: const_block . COMMA ass_var_list
   66             | const_block .

    COMMA  shift, and go to state 179

    $default  reduce using rule 66 (ass_var_list)


State 130

   57 function_call_block: IDENT OP ass_var_list . CP

    CP  shift, and go to state 180


State 131

   63 ass_var_list: ass_var_block . COMMA ass_var_list
   64             | ass_var_block .

    COMMA  shift, and go to state 181

    $default  reduce using rule 64 (ass_var_list)


State 132

   84 assignment_block: OP assignment_block CP .

    $default  reduce using rule 84 (assignment_block)


State 133

  113 bit_condition_op: AND .

    $default  reduce using rule 113 (bit_condition_op)


State 134

  114 bit_condition_op: OR .

    $default  reduce using rule 114 (bit_condition_op)


State 135

  107 arith_condition_op: EQ .

    $default  reduce using rule 107 (arith_condition_op)


State 136

  108 arith_condition_op: NOTEQ .

    $default  reduce using rule 108 (arith_condition_op)


State 137

  109 arith_condition_op: GT .

    $default  reduce using rule 109 (arith_condition_op)


State 138

  110 arith_condition_op: LT .

    $default  reduce using rule 110 (arith_condition_op)


State 139

  111 arith_condition_op: GE .

    $default  reduce using rule 111 (arith_condition_op)


State 140

  112 arith_condition_op: LE .

    $default  reduce using rule 112 (arith_condition_op)


State 141

  102 conditional_expr: expr arith_condition_op . conditional_expr

    NOT_1      shift, and go to state 53
    TRUE_1     shift, and go to state 54
    FALSE_1    shift, and go to state 55
    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block             go to state 29
    function_call_block     go to state 39
    var_block               go to state 42
    ass_var_block           go to state 117
    expr                    go to state 57
    conditional_expr        go to state 182
    bit_unary_condition_op  go to state 59
    fixed_condition         go to state 60
    arith_unary_op          go to state 46
    bit_unary_op            go to state 47


State 142

  103 conditional_expr: expr bit_condition_op . conditional_expr

    NOT_1      shift, and go to state 53
    TRUE_1     shift, and go to state 54
    FALSE_1    shift, and go to state 55
    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block             go to state 29
    function_call_block     go to state 39
    var_block               go to state 42
    ass_var_block           go to state 117
    expr                    go to state 57
    conditional_expr        go to state 183
    bit_unary_condition_op  go to state 59
    fixed_condition         go to state 60
    arith_unary_op          go to state 46
    bit_unary_op            go to state 47


State 143

   93 expr: OP conditional_expr CP . arith_binary_op expr
   94     | OP conditional_expr CP . bit_binary_op expr
   95     | OP conditional_expr CP .

    ADD        shift, and go to state 69
    SUB        shift, and go to state 70
    MULT       shift, and go to state 71
    DIV        shift, and go to state 72
    EXP        shift, and go to state 73
    MOD        shift, and go to state 74
    BIN_AND    shift, and go to state 75
    BIN_OR     shift, and go to state 76
    BIN_XOR    shift, and go to state 77
    BIN_LEFT   shift, and go to state 78
    BIN_RIGHT  shift, and go to state 79

    $default  reduce using rule 95 (expr)

    arith_binary_op  go to state 184
    bit_binary_op    go to state 185


State 144

  106 conditional_expr: bit_unary_condition_op expr .

    $default  reduce using rule 106 (conditional_expr)


State 145

    7 defination_block: DEFINE IDENT const_block .

    $default  reduce using rule 7 (defination_block)


State 146

   50 function_def_block: FUNCTION IDENT OP . argument_list_block CP OCB general_block CCB

    INT     shift, and go to state 5
    LONG    shift, and go to state 6
    CHAR    shift, and go to state 7
    FLOAT   shift, and go to state 8
    DOUBLE  shift, and go to state 9

    $default  reduce using rule 53 (argument_list_block)

    argument_list_block  go to state 186
    data_type            go to state 187


State 147

    4 start_block: comment_block defination_block start_block .

    $default  reduce using rule 4 (start_block)


State 148

   13 block: comment_block function_def_block block .

    $default  reduce using rule 13 (block)


State 149

   96 expr: const_block arith_binary_op expr .

    $default  reduce using rule 96 (expr)


State 150

   97 expr: const_block bit_binary_op expr .

    $default  reduce using rule 97 (expr)


State 151

   98 expr: function_call_block arith_binary_op expr .

    $default  reduce using rule 98 (expr)


State 152

   99 expr: function_call_block bit_binary_op expr .

    $default  reduce using rule 99 (expr)


State 153

   74 array_block: var_block OB . expr CB

    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block          go to state 29
    function_call_block  go to state 39
    var_block            go to state 42
    ass_var_block        go to state 117
    expr                 go to state 188
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 154

   59 var_list: var_block COMMA . var_list

    VAR      shift, and go to state 15
    POINTER  shift, and go to state 16

    var_list     go to state 189
    var_block    go to state 91
    array_block  go to state 92


State 155

   61 var_list: array_block COMMA . var_list

    VAR      shift, and go to state 15
    POINTER  shift, and go to state 16

    var_list     go to state 190
    var_block    go to state 91
    array_block  go to state 92


State 156

   77 ass_var_block: var_block OB expr . CB

    CB  shift, and go to state 191


State 157

   81 assignment_block: ass_var_block ASSIGN assignment_block .

    $default  reduce using rule 81 (assignment_block)


State 158

   78 assignment_block: ass_var_block ASSIGN conditional_expr .

    $default  reduce using rule 78 (assignment_block)


State 159

   85 expr: ass_var_block arith_binary_op expr .

    $default  reduce using rule 85 (expr)


State 160

   86 expr: ass_var_block arith_unary_op expr .

    $default  reduce using rule 86 (expr)


State 161

   87 expr: ass_var_block bit_binary_op expr .

    $default  reduce using rule 87 (expr)


State 162

   82 assignment_block: ass_var_block arith_assgn_op assignment_block .

    $default  reduce using rule 82 (assignment_block)


State 163

   79 assignment_block: ass_var_block arith_assgn_op conditional_expr .

    $default  reduce using rule 79 (assignment_block)


State 164

   83 assignment_block: ass_var_block bit_assgn_op assignment_block .

    $default  reduce using rule 83 (assignment_block)


State 165

   80 assignment_block: ass_var_block bit_assgn_op conditional_expr .

    $default  reduce using rule 80 (assignment_block)


State 166

   89 expr: arith_unary_op ass_var_block expr .

    $default  reduce using rule 89 (expr)


State 167

   19 if_else_block: IF OP if_condition CP . OCB general_block CCB
   20              | IF OP if_condition CP . OCB general_block CCB ELSE OCB general_block CCB
   21              | IF OP if_condition CP . OCB general_block CCB ELSE if_else_block

    OCB  shift, and go to state 192


State 168

   26 while_loop_block: WHILE OP while_condition CP . OCB general_block CCB

    OCB  shift, and go to state 193


State 169

   28 do_while_loop_block: DO OCB general_block CCB . WHILE OP do_while_condition CP TERMINATOR

    WHILE  shift, and go to state 194


State 170

   78 assignment_block: ass_var_block . ASSIGN conditional_expr
   79                 | ass_var_block . arith_assgn_op conditional_expr
   80                 | ass_var_block . bit_assgn_op conditional_expr
   81                 | ass_var_block . ASSIGN assignment_block
   82                 | ass_var_block . arith_assgn_op assignment_block
   83                 | ass_var_block . bit_assgn_op assignment_block

    BIN_AND_ASSIGN  shift, and go to state 94
    BIN_IOR_ASSIGN  shift, and go to state 95
    BIN_XOR_ASSIGN  shift, and go to state 96
    ADD_ASSIGN      shift, and go to state 97
    SUB_ASSIGN      shift, and go to state 98
    MULT_ASSIGN     shift, and go to state 99
    DIV_ASSIGN      shift, and go to state 100
    MOD_ASSIGN      shift, and go to state 101
    LEFT_ASSIGN     shift, and go to state 102
    RIGHT_ASSIGN    shift, and go to state 103
    ASSIGN          shift, and go to state 104

    arith_assgn_op  go to state 108
    bit_assgn_op    go to state 109


State 171

   30 for_loop_block: FOR OP for_initialization for_condition . TERMINATOR for_update CP OCB general_block CCB

    TERMINATOR  shift, and go to state 195


State 172

   40 for_condition: conditional_expr .

    $default  reduce using rule 40 (for_condition)


State 173

   38 for_initialization: function_call_block TERMINATOR .

    $default  reduce using rule 38 (for_initialization)


State 174

   31 for_initialization: function_call_block COMMA . for_initialization

    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    IDENT       shift, and go to state 14
    VAR         shift, and go to state 15
    POINTER     shift, and go to state 16
    DREF        shift, and go to state 17
    TERMINATOR  shift, and go to state 122
    OP          shift, and go to state 123

    for_initialization   go to state 196
    function_call_block  go to state 125
    var_block            go to state 42
    ass_var_block        go to state 126
    assignment_block     go to state 127
    arith_unary_op       go to state 128


State 175

   33 for_initialization: ass_var_block arith_unary_op . COMMA for_initialization
   36                   | ass_var_block arith_unary_op . TERMINATOR

    TERMINATOR  shift, and go to state 197
    COMMA       shift, and go to state 198


State 176

   35 for_initialization: assignment_block TERMINATOR .

    $default  reduce using rule 35 (for_initialization)


State 177

   32 for_initialization: assignment_block COMMA . for_initialization

    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    IDENT       shift, and go to state 14
    VAR         shift, and go to state 15
    POINTER     shift, and go to state 16
    DREF        shift, and go to state 17
    TERMINATOR  shift, and go to state 122
    OP          shift, and go to state 123

    for_initialization   go to state 199
    function_call_block  go to state 125
    var_block            go to state 42
    ass_var_block        go to state 126
    assignment_block     go to state 127
    arith_unary_op       go to state 128


State 178

   34 for_initialization: arith_unary_op ass_var_block . COMMA for_initialization
   37                   | arith_unary_op ass_var_block . TERMINATOR

    TERMINATOR  shift, and go to state 200
    COMMA       shift, and go to state 201


State 179

   65 ass_var_list: const_block COMMA . ass_var_list

    NUM        shift, and go to state 13
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19

    const_block    go to state 129
    ass_var_list   go to state 202
    var_block      go to state 42
    ass_var_block  go to state 131


State 180

   57 function_call_block: IDENT OP ass_var_list CP .

    $default  reduce using rule 57 (function_call_block)


State 181

   63 ass_var_list: ass_var_block COMMA . ass_var_list

    NUM        shift, and go to state 13
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19

    const_block    go to state 129
    ass_var_list   go to state 203
    var_block      go to state 42
    ass_var_block  go to state 131


State 182

  102 conditional_expr: expr arith_condition_op conditional_expr .

    $default  reduce using rule 102 (conditional_expr)


State 183

  103 conditional_expr: expr bit_condition_op conditional_expr .

    $default  reduce using rule 103 (conditional_expr)


State 184

   93 expr: OP conditional_expr CP arith_binary_op . expr

    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block          go to state 29
    function_call_block  go to state 39
    var_block            go to state 42
    ass_var_block        go to state 117
    expr                 go to state 204
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 185

   94 expr: OP conditional_expr CP bit_binary_op . expr

    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block          go to state 29
    function_call_block  go to state 39
    var_block            go to state 42
    ass_var_block        go to state 117
    expr                 go to state 205
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 186

   50 function_def_block: FUNCTION IDENT OP argument_list_block . CP OCB general_block CCB

    CP  shift, and go to state 206


State 187

   51 argument_list_block: data_type . var_block COMMA argument_list_block
   52                    | data_type . var_block

    VAR      shift, and go to state 15
    POINTER  shift, and go to state 16

    var_block  go to state 207


State 188

   74 array_block: var_block OB expr . CB

    CB  shift, and go to state 208


State 189

   59 var_list: var_block COMMA var_list .

    $default  reduce using rule 59 (var_list)


State 190

   61 var_list: array_block COMMA var_list .

    $default  reduce using rule 61 (var_list)


State 191

   77 ass_var_block: var_block OB expr CB .

    $default  reduce using rule 77 (ass_var_block)


State 192

   19 if_else_block: IF OP if_condition CP OCB . general_block CCB
   20              | IF OP if_condition CP OCB . general_block CCB ELSE OCB general_block CCB
   21              | IF OP if_condition CP OCB . general_block CCB ELSE if_else_block

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    comment_block        go to state 64
    const_block          go to state 29
    general_block        go to state 209
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 193

   26 while_loop_block: WHILE OP while_condition CP OCB . general_block CCB

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    comment_block        go to state 64
    const_block          go to state 29
    general_block        go to state 210
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 194

   28 do_while_loop_block: DO OCB general_block CCB WHILE . OP do_while_condition CP TERMINATOR

    OP  shift, and go to state 211


State 195

   30 for_loop_block: FOR OP for_initialization for_condition TERMINATOR . for_update CP OCB general_block CCB

    INC      shift, and go to state 10
    DEC      shift, and go to state 11
    IDENT    shift, and go to state 14
    VAR      shift, and go to state 15
    POINTER  shift, and go to state 16
    DREF     shift, and go to state 17
    OP       shift, and go to state 123

    $default  reduce using rule 49 (for_update)

    for_update           go to state 212
    function_call_block  go to state 213
    var_block            go to state 42
    ass_var_block        go to state 214
    assignment_block     go to state 215
    arith_unary_op       go to state 216


State 196

   31 for_initialization: function_call_block COMMA for_initialization .

    $default  reduce using rule 31 (for_initialization)


State 197

   36 for_initialization: ass_var_block arith_unary_op TERMINATOR .

    $default  reduce using rule 36 (for_initialization)


State 198

   33 for_initialization: ass_var_block arith_unary_op COMMA . for_initialization

    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    IDENT       shift, and go to state 14
    VAR         shift, and go to state 15
    POINTER     shift, and go to state 16
    DREF        shift, and go to state 17
    TERMINATOR  shift, and go to state 122
    OP          shift, and go to state 123

    for_initialization   go to state 217
    function_call_block  go to state 125
    var_block            go to state 42
    ass_var_block        go to state 126
    assignment_block     go to state 127
    arith_unary_op       go to state 128


State 199

   32 for_initialization: assignment_block COMMA for_initialization .

    $default  reduce using rule 32 (for_initialization)


State 200

   37 for_initialization: arith_unary_op ass_var_block TERMINATOR .

    $default  reduce using rule 37 (for_initialization)


State 201

   34 for_initialization: arith_unary_op ass_var_block COMMA . for_initialization

    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    IDENT       shift, and go to state 14
    VAR         shift, and go to state 15
    POINTER     shift, and go to state 16
    DREF        shift, and go to state 17
    TERMINATOR  shift, and go to state 122
    OP          shift, and go to state 123

    for_initialization   go to state 218
    function_call_block  go to state 125
    var_block            go to state 42
    ass_var_block        go to state 126
    assignment_block     go to state 127
    arith_unary_op       go to state 128


State 202

   65 ass_var_list: const_block COMMA ass_var_list .

    $default  reduce using rule 65 (ass_var_list)


State 203

   63 ass_var_list: ass_var_block COMMA ass_var_list .

    $default  reduce using rule 63 (ass_var_list)


State 204

   93 expr: OP conditional_expr CP arith_binary_op expr .

    $default  reduce using rule 93 (expr)


State 205

   94 expr: OP conditional_expr CP bit_binary_op expr .

    $default  reduce using rule 94 (expr)


State 206

   50 function_def_block: FUNCTION IDENT OP argument_list_block CP . OCB general_block CCB

    OCB  shift, and go to state 219


State 207

   51 argument_list_block: data_type var_block . COMMA argument_list_block
   52                    | data_type var_block .

    COMMA  shift, and go to state 220

    $default  reduce using rule 52 (argument_list_block)


State 208

   74 array_block: var_block OB expr CB .

    $default  reduce using rule 74 (array_block)


State 209

   19 if_else_block: IF OP if_condition CP OCB general_block . CCB
   20              | IF OP if_condition CP OCB general_block . CCB ELSE OCB general_block CCB
   21              | IF OP if_condition CP OCB general_block . CCB ELSE if_else_block

    CCB  shift, and go to state 221


State 210

   26 while_loop_block: WHILE OP while_condition CP OCB general_block . CCB

    CCB  shift, and go to state 222


State 211

   28 do_while_loop_block: DO OCB general_block CCB WHILE OP . do_while_condition CP TERMINATOR

    NOT_1      shift, and go to state 53
    TRUE_1     shift, and go to state 54
    FALSE_1    shift, and go to state 55
    INC        shift, and go to state 10
    DEC        shift, and go to state 11
    BIN_NOT    shift, and go to state 12
    NUM        shift, and go to state 13
    IDENT      shift, and go to state 14
    VAR        shift, and go to state 15
    POINTER    shift, and go to state 16
    DREF       shift, and go to state 17
    STRING     shift, and go to state 18
    CHARACTER  shift, and go to state 19
    OP         shift, and go to state 115

    $default  reduce using rule 101 (expr)

    const_block             go to state 29
    do_while_condition      go to state 223
    function_call_block     go to state 39
    var_block               go to state 42
    ass_var_block           go to state 117
    expr                    go to state 57
    conditional_expr        go to state 224
    bit_unary_condition_op  go to state 59
    fixed_condition         go to state 60
    arith_unary_op          go to state 46
    bit_unary_op            go to state 47


State 212

   30 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update . CP OCB general_block CCB

    CP  shift, and go to state 225


State 213

   41 for_update: function_call_block . COMMA for_update
   45           | function_call_block .

    COMMA  shift, and go to state 226

    $default  reduce using rule 45 (for_update)


State 214

   43 for_update: ass_var_block . arith_unary_op COMMA for_update
   47           | ass_var_block . arith_unary_op
   78 assignment_block: ass_var_block . ASSIGN conditional_expr
   79                 | ass_var_block . arith_assgn_op conditional_expr
   80                 | ass_var_block . bit_assgn_op conditional_expr
   81                 | ass_var_block . ASSIGN assignment_block
   82                 | ass_var_block . arith_assgn_op assignment_block
   83                 | ass_var_block . bit_assgn_op assignment_block

    INC             shift, and go to state 10
    DEC             shift, and go to state 11
    BIN_AND_ASSIGN  shift, and go to state 94
    BIN_IOR_ASSIGN  shift, and go to state 95
    BIN_XOR_ASSIGN  shift, and go to state 96
    ADD_ASSIGN      shift, and go to state 97
    SUB_ASSIGN      shift, and go to state 98
    MULT_ASSIGN     shift, and go to state 99
    DIV_ASSIGN      shift, and go to state 100
    MOD_ASSIGN      shift, and go to state 101
    LEFT_ASSIGN     shift, and go to state 102
    RIGHT_ASSIGN    shift, and go to state 103
    ASSIGN          shift, and go to state 104

    arith_unary_op  go to state 227
    arith_assgn_op  go to state 108
    bit_assgn_op    go to state 109


State 215

   42 for_update: assignment_block . COMMA for_update
   46           | assignment_block .

    COMMA  shift, and go to state 228

    $default  reduce using rule 46 (for_update)


State 216

   44 for_update: arith_unary_op . ass_var_block COMMA for_update
   48           | arith_unary_op . ass_var_block

    VAR      shift, and go to state 15
    POINTER  shift, and go to state 16
    DREF     shift, and go to state 17

    var_block      go to state 42
    ass_var_block  go to state 229


State 217

   33 for_initialization: ass_var_block arith_unary_op COMMA for_initialization .

    $default  reduce using rule 33 (for_initialization)


State 218

   34 for_initialization: arith_unary_op ass_var_block COMMA for_initialization .

    $default  reduce using rule 34 (for_initialization)


State 219

   50 function_def_block: FUNCTION IDENT OP argument_list_block CP OCB . general_block CCB

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    comment_block        go to state 64
    const_block          go to state 29
    general_block        go to state 230
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 220

   51 argument_list_block: data_type var_block COMMA . argument_list_block

    INT     shift, and go to state 5
    LONG    shift, and go to state 6
    CHAR    shift, and go to state 7
    FLOAT   shift, and go to state 8
    DOUBLE  shift, and go to state 9

    $default  reduce using rule 53 (argument_list_block)

    argument_list_block  go to state 231
    data_type            go to state 187


State 221

   19 if_else_block: IF OP if_condition CP OCB general_block CCB .
   20              | IF OP if_condition CP OCB general_block CCB . ELSE OCB general_block CCB
   21              | IF OP if_condition CP OCB general_block CCB . ELSE if_else_block

    ELSE  shift, and go to state 232

    $default  reduce using rule 19 (if_else_block)


State 222

   26 while_loop_block: WHILE OP while_condition CP OCB general_block CCB .

    $default  reduce using rule 26 (while_loop_block)


State 223

   28 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition . CP TERMINATOR

    CP  shift, and go to state 233


State 224

   29 do_while_condition: conditional_expr .

    $default  reduce using rule 29 (do_while_condition)


State 225

   30 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP . OCB general_block CCB

    OCB  shift, and go to state 234


State 226

   41 for_update: function_call_block COMMA . for_update

    INC      shift, and go to state 10
    DEC      shift, and go to state 11
    IDENT    shift, and go to state 14
    VAR      shift, and go to state 15
    POINTER  shift, and go to state 16
    DREF     shift, and go to state 17
    OP       shift, and go to state 123

    $default  reduce using rule 49 (for_update)

    for_update           go to state 235
    function_call_block  go to state 213
    var_block            go to state 42
    ass_var_block        go to state 214
    assignment_block     go to state 215
    arith_unary_op       go to state 216


State 227

   43 for_update: ass_var_block arith_unary_op . COMMA for_update
   47           | ass_var_block arith_unary_op .

    COMMA  shift, and go to state 236

    $default  reduce using rule 47 (for_update)


State 228

   42 for_update: assignment_block COMMA . for_update

    INC      shift, and go to state 10
    DEC      shift, and go to state 11
    IDENT    shift, and go to state 14
    VAR      shift, and go to state 15
    POINTER  shift, and go to state 16
    DREF     shift, and go to state 17
    OP       shift, and go to state 123

    $default  reduce using rule 49 (for_update)

    for_update           go to state 237
    function_call_block  go to state 213
    var_block            go to state 42
    ass_var_block        go to state 214
    assignment_block     go to state 215
    arith_unary_op       go to state 216


State 229

   44 for_update: arith_unary_op ass_var_block . COMMA for_update
   48           | arith_unary_op ass_var_block .

    COMMA  shift, and go to state 238

    $default  reduce using rule 48 (for_update)


State 230

   50 function_def_block: FUNCTION IDENT OP argument_list_block CP OCB general_block . CCB

    CCB  shift, and go to state 239


State 231

   51 argument_list_block: data_type var_block COMMA argument_list_block .

    $default  reduce using rule 51 (argument_list_block)


State 232

   20 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE . OCB general_block CCB
   21              | IF OP if_condition CP OCB general_block CCB ELSE . if_else_block

    IF   shift, and go to state 1
    OCB  shift, and go to state 240

    if_else_block  go to state 241


State 233

   28 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition CP . TERMINATOR

    TERMINATOR  shift, and go to state 242


State 234

   30 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB . general_block CCB

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    comment_block        go to state 64
    const_block          go to state 29
    general_block        go to state 243
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 235

   41 for_update: function_call_block COMMA for_update .

    $default  reduce using rule 41 (for_update)


State 236

   43 for_update: ass_var_block arith_unary_op COMMA . for_update

    INC      shift, and go to state 10
    DEC      shift, and go to state 11
    IDENT    shift, and go to state 14
    VAR      shift, and go to state 15
    POINTER  shift, and go to state 16
    DREF     shift, and go to state 17
    OP       shift, and go to state 123

    $default  reduce using rule 49 (for_update)

    for_update           go to state 244
    function_call_block  go to state 213
    var_block            go to state 42
    ass_var_block        go to state 214
    assignment_block     go to state 215
    arith_unary_op       go to state 216


State 237

   42 for_update: assignment_block COMMA for_update .

    $default  reduce using rule 42 (for_update)


State 238

   44 for_update: arith_unary_op ass_var_block COMMA . for_update

    INC      shift, and go to state 10
    DEC      shift, and go to state 11
    IDENT    shift, and go to state 14
    VAR      shift, and go to state 15
    POINTER  shift, and go to state 16
    DREF     shift, and go to state 17
    OP       shift, and go to state 123

    $default  reduce using rule 49 (for_update)

    for_update           go to state 245
    function_call_block  go to state 213
    var_block            go to state 42
    ass_var_block        go to state 214
    assignment_block     go to state 215
    arith_unary_op       go to state 216


State 239

   50 function_def_block: FUNCTION IDENT OP argument_list_block CP OCB general_block CCB .

    $default  reduce using rule 50 (function_def_block)


State 240

   20 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE OCB . general_block CCB

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    DO             shift, and go to state 3
    FOR            shift, and go to state 4
    INT            shift, and go to state 5
    LONG           shift, and go to state 6
    CHAR           shift, and go to state 7
    FLOAT          shift, and go to state 8
    DOUBLE         shift, and go to state 9
    INC            shift, and go to state 10
    DEC            shift, and go to state 11
    BIN_NOT        shift, and go to state 12
    NUM            shift, and go to state 13
    IDENT          shift, and go to state 14
    VAR            shift, and go to state 15
    POINTER        shift, and go to state 16
    DREF           shift, and go to state 17
    STRING         shift, and go to state 18
    CHARACTER      shift, and go to state 19
    OP             shift, and go to state 20
    COMMENT        shift, and go to state 21
    MULTI_COMMENT  shift, and go to state 22

    TERMINATOR  reduce using rule 101 (expr)
    $default    reduce using rule 18 (general_block)

    comment_block        go to state 64
    const_block          go to state 29
    general_block        go to state 246
    if_else_block        go to state 32
    loop_block           go to state 33
    while_loop_block     go to state 34
    do_while_loop_block  go to state 35
    for_loop_block       go to state 36
    general_stmt         go to state 38
    function_call_block  go to state 39
    declaration_block    go to state 40
    data_type            go to state 41
    var_block            go to state 42
    ass_var_block        go to state 43
    assignment_block     go to state 44
    expr                 go to state 45
    arith_unary_op       go to state 46
    bit_unary_op         go to state 47


State 241

   21 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE if_else_block .

    $default  reduce using rule 21 (if_else_block)


State 242

   28 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition CP TERMINATOR .

    $default  reduce using rule 28 (do_while_loop_block)


State 243

   30 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB general_block . CCB

    CCB  shift, and go to state 247


State 244

   43 for_update: ass_var_block arith_unary_op COMMA for_update .

    $default  reduce using rule 43 (for_update)


State 245

   44 for_update: arith_unary_op ass_var_block COMMA for_update .

    $default  reduce using rule 44 (for_update)


State 246

   20 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE OCB general_block . CCB

    CCB  shift, and go to state 248


State 247

   30 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB .

    $default  reduce using rule 30 (for_loop_block)


State 248

   20 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE OCB general_block CCB .

    $default  reduce using rule 20 (if_else_block)
