Grammar

    0 $accept: super_block $end

    1 super_block: start_block

    2 start_block: defination_block start_block
    3            | block
    4            | comment_block defination_block start_block

    5 comment_block: COMMENT
    6              | MULTI_COMMENT

    7 defination_block: DEFINE IDENT const_block
    8                 | IFDEF IDENT OCB start_block CCB
    9                 | IFNDEF IDENT OCB start_block CCB

   10 const_block: STRING
   11            | NUM
   12            | CHARACTER

   13 block: function_def_block block
   14      | general_block
   15      | comment_block function_def_block block

   16 general_block: general_stmt general_block
   17              | loop_block general_block
   18              | if_else_block general_block
   19              | comment_block general_block
   20              | error start_block
   21              | %empty

   22 if_else_block: IF OP if_condition CP OCB general_block CCB
   23              | IF OP if_condition CP OCB general_block CCB ELSE OCB general_block CCB
   24              | IF OP if_condition CP OCB general_block CCB ELSE if_else_block

   25 if_condition: conditional_expr

   26 loop_block: for_loop_block
   27           | while_loop_block
   28           | do_while_loop_block

   29 while_loop_block: WHILE OP while_condition CP OCB general_block CCB

   30 while_condition: conditional_expr

   31 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition CP TERMINATOR

   32 do_while_condition: conditional_expr

   33 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB

   34 for_initialization: function_call_block COMMA for_initialization
   35                   | assignment_block COMMA for_initialization
   36                   | ass_var_block arith_unary_op COMMA for_initialization
   37                   | arith_unary_op ass_var_block COMMA for_initialization
   38                   | assignment_block TERMINATOR
   39                   | ass_var_block arith_unary_op TERMINATOR
   40                   | arith_unary_op ass_var_block TERMINATOR
   41                   | function_call_block TERMINATOR
   42                   | TERMINATOR

   43 for_condition: conditional_expr

   44 for_update: function_call_block COMMA for_update
   45           | assignment_block COMMA for_update
   46           | ass_var_block arith_unary_op COMMA for_update
   47           | arith_unary_op ass_var_block COMMA for_update
   48           | function_call_block
   49           | assignment_block
   50           | ass_var_block arith_unary_op
   51           | arith_unary_op ass_var_block
   52           | %empty

   53 function_def_block: FUNCTION ident OP argument_list_block CP OCB general_block CCB

   54 ident: IDENT

   55 argument_list_block: data_type var_block COMMA argument_list_block
   56                    | data_type var_block
   57                    | %empty

   58 general_stmt: declaration_block TERMINATOR
   59             | assignment_block TERMINATOR
   60             | conditional_expr TERMINATOR
   61             | PRINT conditional_expr TERMINATOR
   62             | SCAN ass_var_block TERMINATOR
   63             | RETURN conditional_expr TERMINATOR

   64 function_call_block: IDENT OP function_var_list CP

   65 function_var_list: conditional_expr COMMA function_var_list
   66                  | conditional_expr

   67 declaration_block: data_type var_list

   68 var_list: var_block COMMA var_list
   69         | var_block
   70         | array_block COMMA var_list
   71         | array_block

   72 data_type: INT
   73          | FLOAT
   74          | DOUBLE
   75          | CHAR
   76          | LONG

   77 var_block: VAR
   78          | POINTER

   79 array_block: var_block OB num CB

   80 num: NUM

   81 ass_var_block: var_block
   82              | DREF
   83              | var_block OB conditional_expr CB

   84 assignment_block: ass_var_block ASSIGN conditional_expr
   85                 | ass_var_block arith_assgn_op conditional_expr
   86                 | ass_var_block bit_assgn_op conditional_expr
   87                 | ass_var_block ASSIGN assignment_block
   88                 | ass_var_block arith_assgn_op assignment_block
   89                 | ass_var_block bit_assgn_op assignment_block
   90                 | OP assignment_block CP

   91 expr: ass_var_block arith_binary_op expr
   92     | ass_var_block bit_binary_op expr
   93     | bit_unary_op ass_var_block
   94     | ass_var_block
   95     | const_block
   96     | function_call_block
   97     | OP conditional_expr CP arith_binary_op expr
   98     | OP conditional_expr CP bit_binary_op expr
   99     | OP conditional_expr CP
  100     | const_block arith_binary_op expr
  101     | const_block bit_binary_op expr
  102     | function_call_block arith_binary_op expr
  103     | function_call_block bit_binary_op expr
  104     | bit_unary_op const_block
  105     | %empty

  106 conditional_expr: expr arith_condition_op conditional_expr
  107                 | expr bit_condition_op conditional_expr
  108                 | expr
  109                 | fixed_condition
  110                 | bit_unary_condition_op expr

  111 arith_condition_op: EQ
  112                   | NOTEQ
  113                   | GT
  114                   | LT
  115                   | GE
  116                   | LE
  117                   | LTGT

  118 bit_condition_op: AND
  119                 | OR

  120 bit_unary_condition_op: NOT_1

  121 fixed_condition: TRUE_1
  122                | FALSE_1

  123 arith_binary_op: ADD
  124                | SUB
  125                | MULT
  126                | DIV
  127                | EXP
  128                | MOD

  129 arith_unary_op: INC
  130               | DEC

  131 bit_binary_op: BIN_AND
  132              | BIN_OR
  133              | BIN_XOR
  134              | BIN_LEFT
  135              | BIN_RIGHT

  136 bit_unary_op: BIN_NOT

  137 arith_assgn_op: ADD_ASSIGN
  138               | SUB_ASSIGN
  139               | MULT_ASSIGN
  140               | DIV_ASSIGN
  141               | MOD_ASSIGN
  142               | LEFT_ASSIGN
  143               | RIGHT_ASSIGN

  144 bit_assgn_op: BIN_AND_ASSIGN
  145             | BIN_IOR_ASSIGN
  146             | BIN_XOR_ASSIGN


Terminals, with rules where they appear

$end (0) 0
error (256) 20
IF (258) 22 23 24
ELSE (259) 23 24
WHILE (260) 29 31
DO (261) 31
FOR (262) 33
AND (263) 118
OR (264) 119
NOT_1 (265) 120
TRUE_1 (266) 121
FALSE_1 (267) 122
INT (268) 72
LONG (269) 76
CHAR (270) 75
FLOAT (271) 73
DOUBLE (272) 74
ADD (273) 123
SUB (274) 124
MULT (275) 125
DIV (276) 126
EXP (277) 127
MOD (278) 128
INC (279) 129
DEC (280) 130
BIN_NOT (281) 136
BIN_AND (282) 131
BIN_OR (283) 132
BIN_XOR (284) 133
BIN_LEFT (285) 134
BIN_RIGHT (286) 135
BIN_AND_ASSIGN (287) 144
BIN_IOR_ASSIGN (288) 145
BIN_XOR_ASSIGN (289) 146
ADD_ASSIGN (290) 137
SUB_ASSIGN (291) 138
MULT_ASSIGN (292) 139
DIV_ASSIGN (293) 140
MOD_ASSIGN (294) 141
LEFT_ASSIGN (295) 142
RIGHT_ASSIGN (296) 143
NUM (297) 11 80
IDENT (298) 7 8 9 54 64
VAR (299) 77
POINTER (300) 78
DREF (301) 82
ASSIGN (302) 84 87
TERMINATOR (303) 31 33 38 39 40 41 42 58 59 60 61 62 63
STRING (304) 10
CHARACTER (305) 12
OP (306) 22 23 24 29 31 33 53 64 90 97 98 99
CP (307) 22 23 24 29 31 33 53 64 90 97 98 99
CB (308) 79 83
OB (309) 79 83
OCB (310) 8 9 22 23 24 29 31 33 53
CCB (311) 8 9 22 23 24 29 31 33 53
EQ (312) 111
NOTEQ (313) 112
GT (314) 113
LT (315) 114
GE (316) 115
LE (317) 116
COMMENT (318) 5
MULTI_COMMENT (319) 6
DEFINE (320) 7
IFDEF (321) 8
IFNDEF (322) 9
FUNCTION (323) 53
COMMA (324) 34 35 36 37 44 45 46 47 55 65 68 70
PRINT (325) 61
SCAN (326) 62
RETURN (327) 63
LTGT (328) 117


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
super_block (75)
    on left: 1, on right: 0
start_block (76)
    on left: 2 3 4, on right: 1 2 4 8 9 20
comment_block (77)
    on left: 5 6, on right: 4 15 19
defination_block (78)
    on left: 7 8 9, on right: 2 4
const_block (79)
    on left: 10 11 12, on right: 7 95 100 101 104
block (80)
    on left: 13 14 15, on right: 3 13 15
general_block (81)
    on left: 16 17 18 19 20 21, on right: 14 16 17 18 19 22 23 24 29
    31 33 53
if_else_block (82)
    on left: 22 23 24, on right: 18 24
if_condition (83)
    on left: 25, on right: 22 23 24
loop_block (84)
    on left: 26 27 28, on right: 17
while_loop_block (85)
    on left: 29, on right: 27
while_condition (86)
    on left: 30, on right: 29
do_while_loop_block (87)
    on left: 31, on right: 28
do_while_condition (88)
    on left: 32, on right: 31
for_loop_block (89)
    on left: 33, on right: 26
for_initialization (90)
    on left: 34 35 36 37 38 39 40 41 42, on right: 33 34 35 36 37
for_condition (91)
    on left: 43, on right: 33
for_update (92)
    on left: 44 45 46 47 48 49 50 51 52, on right: 33 44 45 46 47
function_def_block (93)
    on left: 53, on right: 13 15
ident (94)
    on left: 54, on right: 53
argument_list_block (95)
    on left: 55 56 57, on right: 53 55
general_stmt (96)
    on left: 58 59 60 61 62 63, on right: 16
function_call_block (97)
    on left: 64, on right: 34 41 44 48 96 102 103
function_var_list (98)
    on left: 65 66, on right: 64 65
declaration_block (99)
    on left: 67, on right: 58
var_list (100)
    on left: 68 69 70 71, on right: 67 68 70
data_type (101)
    on left: 72 73 74 75 76, on right: 55 56 67
var_block (102)
    on left: 77 78, on right: 55 56 68 69 79 81 83
array_block (103)
    on left: 79, on right: 70 71
num (104)
    on left: 80, on right: 79
ass_var_block (105)
    on left: 81 82 83, on right: 36 37 39 40 46 47 50 51 62 84 85 86
    87 88 89 91 92 93 94
assignment_block (106)
    on left: 84 85 86 87 88 89 90, on right: 35 38 45 49 59 87 88 89
    90
expr (107)
    on left: 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105, on right:
    91 92 97 98 100 101 102 103 106 107 108 110
conditional_expr (108)
    on left: 106 107 108 109 110, on right: 25 30 32 43 60 61 63 65
    66 83 84 85 86 97 98 99 106 107
arith_condition_op (109)
    on left: 111 112 113 114 115 116 117, on right: 106
bit_condition_op (110)
    on left: 118 119, on right: 107
bit_unary_condition_op (111)
    on left: 120, on right: 110
fixed_condition (112)
    on left: 121 122, on right: 109
arith_binary_op (113)
    on left: 123 124 125 126 127 128, on right: 91 97 100 102
arith_unary_op (114)
    on left: 129 130, on right: 36 37 39 40 46 47 50 51
bit_binary_op (115)
    on left: 131 132 133 134 135, on right: 92 98 101 103
bit_unary_op (116)
    on left: 136, on right: 93 104
arith_assgn_op (117)
    on left: 137 138 139 140 141 142 143, on right: 85 88
bit_assgn_op (118)
    on left: 144 145 146, on right: 86 89


State 0

    0 $accept: . super_block $end

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    DEFINE         shift, and go to state 25
    IFDEF          shift, and go to state 26
    IFNDEF         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    super_block             go to state 32
    start_block             go to state 33
    comment_block           go to state 34
    defination_block        go to state 35
    const_block             go to state 36
    block                   go to state 37
    general_block           go to state 38
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    function_def_block      go to state 44
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 1

   20 general_block: error . start_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    DEFINE         shift, and go to state 25
    IFDEF          shift, and go to state 26
    IFNDEF         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    start_block             go to state 57
    comment_block           go to state 34
    defination_block        go to state 35
    const_block             go to state 36
    block                   go to state 37
    general_block           go to state 38
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    function_def_block      go to state 44
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 2

   22 if_else_block: IF . OP if_condition CP OCB general_block CCB
   23              | IF . OP if_condition CP OCB general_block CCB ELSE OCB general_block CCB
   24              | IF . OP if_condition CP OCB general_block CCB ELSE if_else_block

    OP  shift, and go to state 58


State 3

   29 while_loop_block: WHILE . OP while_condition CP OCB general_block CCB

    OP  shift, and go to state 59


State 4

   31 do_while_loop_block: DO . OCB general_block CCB WHILE OP do_while_condition CP TERMINATOR

    OCB  shift, and go to state 60


State 5

   33 for_loop_block: FOR . OP for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB

    OP  shift, and go to state 61


State 6

  120 bit_unary_condition_op: NOT_1 .

    $default  reduce using rule 120 (bit_unary_condition_op)


State 7

  121 fixed_condition: TRUE_1 .

    $default  reduce using rule 121 (fixed_condition)


State 8

  122 fixed_condition: FALSE_1 .

    $default  reduce using rule 122 (fixed_condition)


State 9

   72 data_type: INT .

    $default  reduce using rule 72 (data_type)


State 10

   76 data_type: LONG .

    $default  reduce using rule 76 (data_type)


State 11

   75 data_type: CHAR .

    $default  reduce using rule 75 (data_type)


State 12

   73 data_type: FLOAT .

    $default  reduce using rule 73 (data_type)


State 13

   74 data_type: DOUBLE .

    $default  reduce using rule 74 (data_type)


State 14

  136 bit_unary_op: BIN_NOT .

    $default  reduce using rule 136 (bit_unary_op)


State 15

   11 const_block: NUM .

    $default  reduce using rule 11 (const_block)


State 16

   64 function_call_block: IDENT . OP function_var_list CP

    OP  shift, and go to state 62


State 17

   77 var_block: VAR .

    $default  reduce using rule 77 (var_block)


State 18

   78 var_block: POINTER .

    $default  reduce using rule 78 (var_block)


State 19

   82 ass_var_block: DREF .

    $default  reduce using rule 82 (ass_var_block)


State 20

   10 const_block: STRING .

    $default  reduce using rule 10 (const_block)


State 21

   12 const_block: CHARACTER .

    $default  reduce using rule 12 (const_block)


State 22

   90 assignment_block: OP . assignment_block CP
   97 expr: OP . conditional_expr CP arith_binary_op expr
   98     | OP . conditional_expr CP bit_binary_op expr
   99     | OP . conditional_expr CP

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 22

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    function_call_block     go to state 46
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 63
    expr                    go to state 52
    conditional_expr        go to state 64
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 23

    5 comment_block: COMMENT .

    $default  reduce using rule 5 (comment_block)


State 24

    6 comment_block: MULTI_COMMENT .

    $default  reduce using rule 6 (comment_block)


State 25

    7 defination_block: DEFINE . IDENT const_block

    IDENT  shift, and go to state 65


State 26

    8 defination_block: IFDEF . IDENT OCB start_block CCB

    IDENT  shift, and go to state 66


State 27

    9 defination_block: IFNDEF . IDENT OCB start_block CCB

    IDENT  shift, and go to state 67


State 28

   53 function_def_block: FUNCTION . ident OP argument_list_block CP OCB general_block CCB

    IDENT  shift, and go to state 68

    ident  go to state 69


State 29

   61 general_stmt: PRINT . conditional_expr TERMINATOR

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    function_call_block     go to state 46
    var_block               go to state 49
    ass_var_block           go to state 71
    expr                    go to state 52
    conditional_expr        go to state 72
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 30

   62 general_stmt: SCAN . ass_var_block TERMINATOR

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19

    var_block      go to state 49
    ass_var_block  go to state 73


State 31

   63 general_stmt: RETURN . conditional_expr TERMINATOR

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    function_call_block     go to state 46
    var_block               go to state 49
    ass_var_block           go to state 71
    expr                    go to state 52
    conditional_expr        go to state 74
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 32

    0 $accept: super_block . $end

    $end  shift, and go to state 75


State 33

    1 super_block: start_block .

    $default  reduce using rule 1 (super_block)


State 34

    4 start_block: comment_block . defination_block start_block
   15 block: comment_block . function_def_block block
   19 general_block: comment_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    DEFINE         shift, and go to state 25
    IFDEF          shift, and go to state 26
    IFNDEF         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    comment_block           go to state 76
    defination_block        go to state 77
    const_block             go to state 36
    general_block           go to state 78
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    function_def_block      go to state 79
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 35

    2 start_block: defination_block . start_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    DEFINE         shift, and go to state 25
    IFDEF          shift, and go to state 26
    IFNDEF         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    start_block             go to state 80
    comment_block           go to state 34
    defination_block        go to state 35
    const_block             go to state 36
    block                   go to state 37
    general_block           go to state 38
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    function_def_block      go to state 44
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 36

   95 expr: const_block .
  100     | const_block . arith_binary_op expr
  101     | const_block . bit_binary_op expr

    ADD        shift, and go to state 81
    SUB        shift, and go to state 82
    MULT       shift, and go to state 83
    DIV        shift, and go to state 84
    EXP        shift, and go to state 85
    MOD        shift, and go to state 86
    BIN_AND    shift, and go to state 87
    BIN_OR     shift, and go to state 88
    BIN_XOR    shift, and go to state 89
    BIN_LEFT   shift, and go to state 90
    BIN_RIGHT  shift, and go to state 91

    $default  reduce using rule 95 (expr)

    arith_binary_op  go to state 92
    bit_binary_op    go to state 93


State 37

    3 start_block: block .

    $default  reduce using rule 3 (start_block)


State 38

   14 block: general_block .

    $default  reduce using rule 14 (block)


State 39

   18 general_block: if_else_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    comment_block           go to state 76
    const_block             go to state 36
    general_block           go to state 94
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 40

   17 general_block: loop_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    comment_block           go to state 76
    const_block             go to state 36
    general_block           go to state 95
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 41

   27 loop_block: while_loop_block .

    $default  reduce using rule 27 (loop_block)


State 42

   28 loop_block: do_while_loop_block .

    $default  reduce using rule 28 (loop_block)


State 43

   26 loop_block: for_loop_block .

    $default  reduce using rule 26 (loop_block)


State 44

   13 block: function_def_block . block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    comment_block           go to state 96
    const_block             go to state 36
    block                   go to state 97
    general_block           go to state 38
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    function_def_block      go to state 44
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 45

   16 general_block: general_stmt . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    comment_block           go to state 76
    const_block             go to state 36
    general_block           go to state 98
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 46

   96 expr: function_call_block .
  102     | function_call_block . arith_binary_op expr
  103     | function_call_block . bit_binary_op expr

    ADD        shift, and go to state 81
    SUB        shift, and go to state 82
    MULT       shift, and go to state 83
    DIV        shift, and go to state 84
    EXP        shift, and go to state 85
    MOD        shift, and go to state 86
    BIN_AND    shift, and go to state 87
    BIN_OR     shift, and go to state 88
    BIN_XOR    shift, and go to state 89
    BIN_LEFT   shift, and go to state 90
    BIN_RIGHT  shift, and go to state 91

    $default  reduce using rule 96 (expr)

    arith_binary_op  go to state 99
    bit_binary_op    go to state 100


State 47

   58 general_stmt: declaration_block . TERMINATOR

    TERMINATOR  shift, and go to state 101


State 48

   67 declaration_block: data_type . var_list

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18

    var_list     go to state 102
    var_block    go to state 103
    array_block  go to state 104


State 49

   81 ass_var_block: var_block .
   83              | var_block . OB conditional_expr CB

    OB  shift, and go to state 105

    $default  reduce using rule 81 (ass_var_block)


State 50

   84 assignment_block: ass_var_block . ASSIGN conditional_expr
   85                 | ass_var_block . arith_assgn_op conditional_expr
   86                 | ass_var_block . bit_assgn_op conditional_expr
   87                 | ass_var_block . ASSIGN assignment_block
   88                 | ass_var_block . arith_assgn_op assignment_block
   89                 | ass_var_block . bit_assgn_op assignment_block
   91 expr: ass_var_block . arith_binary_op expr
   92     | ass_var_block . bit_binary_op expr
   94     | ass_var_block .

    ADD             shift, and go to state 81
    SUB             shift, and go to state 82
    MULT            shift, and go to state 83
    DIV             shift, and go to state 84
    EXP             shift, and go to state 85
    MOD             shift, and go to state 86
    BIN_AND         shift, and go to state 87
    BIN_OR          shift, and go to state 88
    BIN_XOR         shift, and go to state 89
    BIN_LEFT        shift, and go to state 90
    BIN_RIGHT       shift, and go to state 91
    BIN_AND_ASSIGN  shift, and go to state 106
    BIN_IOR_ASSIGN  shift, and go to state 107
    BIN_XOR_ASSIGN  shift, and go to state 108
    ADD_ASSIGN      shift, and go to state 109
    SUB_ASSIGN      shift, and go to state 110
    MULT_ASSIGN     shift, and go to state 111
    DIV_ASSIGN      shift, and go to state 112
    MOD_ASSIGN      shift, and go to state 113
    LEFT_ASSIGN     shift, and go to state 114
    RIGHT_ASSIGN    shift, and go to state 115
    ASSIGN          shift, and go to state 116

    $default  reduce using rule 94 (expr)

    arith_binary_op  go to state 117
    bit_binary_op    go to state 118
    arith_assgn_op   go to state 119
    bit_assgn_op     go to state 120


State 51

   59 general_stmt: assignment_block . TERMINATOR

    TERMINATOR  shift, and go to state 121


State 52

  106 conditional_expr: expr . arith_condition_op conditional_expr
  107                 | expr . bit_condition_op conditional_expr
  108                 | expr .

    AND    shift, and go to state 122
    OR     shift, and go to state 123
    EQ     shift, and go to state 124
    NOTEQ  shift, and go to state 125
    GT     shift, and go to state 126
    LT     shift, and go to state 127
    GE     shift, and go to state 128
    LE     shift, and go to state 129
    LTGT   shift, and go to state 130

    $default  reduce using rule 108 (conditional_expr)

    arith_condition_op  go to state 131
    bit_condition_op    go to state 132


State 53

   60 general_stmt: conditional_expr . TERMINATOR

    TERMINATOR  shift, and go to state 133


State 54

  110 conditional_expr: bit_unary_condition_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block          go to state 36
    function_call_block  go to state 46
    var_block            go to state 49
    ass_var_block        go to state 71
    expr                 go to state 134
    bit_unary_op         go to state 56


State 55

  109 conditional_expr: fixed_condition .

    $default  reduce using rule 109 (conditional_expr)


State 56

   93 expr: bit_unary_op . ass_var_block
  104     | bit_unary_op . const_block

    NUM        shift, and go to state 15
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21

    const_block    go to state 135
    var_block      go to state 49
    ass_var_block  go to state 136


State 57

   20 general_block: error start_block .

    $default  reduce using rule 20 (general_block)


State 58

   22 if_else_block: IF OP . if_condition CP OCB general_block CCB
   23              | IF OP . if_condition CP OCB general_block CCB ELSE OCB general_block CCB
   24              | IF OP . if_condition CP OCB general_block CCB ELSE if_else_block

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    if_condition            go to state 137
    function_call_block     go to state 46
    var_block               go to state 49
    ass_var_block           go to state 71
    expr                    go to state 52
    conditional_expr        go to state 138
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 59

   29 while_loop_block: WHILE OP . while_condition CP OCB general_block CCB

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    while_condition         go to state 139
    function_call_block     go to state 46
    var_block               go to state 49
    ass_var_block           go to state 71
    expr                    go to state 52
    conditional_expr        go to state 140
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 60

   31 do_while_loop_block: DO OCB . general_block CCB WHILE OP do_while_condition CP TERMINATOR

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    comment_block           go to state 76
    const_block             go to state 36
    general_block           go to state 141
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 61

   33 for_loop_block: FOR OP . for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB

    INC         shift, and go to state 142
    DEC         shift, and go to state 143
    IDENT       shift, and go to state 16
    VAR         shift, and go to state 17
    POINTER     shift, and go to state 18
    DREF        shift, and go to state 19
    TERMINATOR  shift, and go to state 144
    OP          shift, and go to state 145

    for_initialization   go to state 146
    function_call_block  go to state 147
    var_block            go to state 49
    ass_var_block        go to state 148
    assignment_block     go to state 149
    arith_unary_op       go to state 150


State 62

   64 function_call_block: IDENT OP . function_var_list CP

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    function_call_block     go to state 46
    function_var_list       go to state 151
    var_block               go to state 49
    ass_var_block           go to state 71
    expr                    go to state 52
    conditional_expr        go to state 152
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 63

   90 assignment_block: OP assignment_block . CP

    CP  shift, and go to state 153


State 64

   97 expr: OP conditional_expr . CP arith_binary_op expr
   98     | OP conditional_expr . CP bit_binary_op expr
   99     | OP conditional_expr . CP

    CP  shift, and go to state 154


State 65

    7 defination_block: DEFINE IDENT . const_block

    NUM        shift, and go to state 15
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21

    const_block  go to state 155


State 66

    8 defination_block: IFDEF IDENT . OCB start_block CCB

    OCB  shift, and go to state 156


State 67

    9 defination_block: IFNDEF IDENT . OCB start_block CCB

    OCB  shift, and go to state 157


State 68

   54 ident: IDENT .

    $default  reduce using rule 54 (ident)


State 69

   53 function_def_block: FUNCTION ident . OP argument_list_block CP OCB general_block CCB

    OP  shift, and go to state 158


State 70

   97 expr: OP . conditional_expr CP arith_binary_op expr
   98     | OP . conditional_expr CP bit_binary_op expr
   99     | OP . conditional_expr CP

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    function_call_block     go to state 46
    var_block               go to state 49
    ass_var_block           go to state 71
    expr                    go to state 52
    conditional_expr        go to state 64
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 71

   91 expr: ass_var_block . arith_binary_op expr
   92     | ass_var_block . bit_binary_op expr
   94     | ass_var_block .

    ADD        shift, and go to state 81
    SUB        shift, and go to state 82
    MULT       shift, and go to state 83
    DIV        shift, and go to state 84
    EXP        shift, and go to state 85
    MOD        shift, and go to state 86
    BIN_AND    shift, and go to state 87
    BIN_OR     shift, and go to state 88
    BIN_XOR    shift, and go to state 89
    BIN_LEFT   shift, and go to state 90
    BIN_RIGHT  shift, and go to state 91

    $default  reduce using rule 94 (expr)

    arith_binary_op  go to state 117
    bit_binary_op    go to state 118


State 72

   61 general_stmt: PRINT conditional_expr . TERMINATOR

    TERMINATOR  shift, and go to state 159


State 73

   62 general_stmt: SCAN ass_var_block . TERMINATOR

    TERMINATOR  shift, and go to state 160


State 74

   63 general_stmt: RETURN conditional_expr . TERMINATOR

    TERMINATOR  shift, and go to state 161


State 75

    0 $accept: super_block $end .

    $default  accept


State 76

   19 general_block: comment_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    comment_block           go to state 76
    const_block             go to state 36
    general_block           go to state 78
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 77

    4 start_block: comment_block defination_block . start_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    DEFINE         shift, and go to state 25
    IFDEF          shift, and go to state 26
    IFNDEF         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    start_block             go to state 162
    comment_block           go to state 34
    defination_block        go to state 35
    const_block             go to state 36
    block                   go to state 37
    general_block           go to state 38
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    function_def_block      go to state 44
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 78

   19 general_block: comment_block general_block .

    $default  reduce using rule 19 (general_block)


State 79

   15 block: comment_block function_def_block . block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    comment_block           go to state 96
    const_block             go to state 36
    block                   go to state 163
    general_block           go to state 38
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    function_def_block      go to state 44
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 80

    2 start_block: defination_block start_block .

    $default  reduce using rule 2 (start_block)


State 81

  123 arith_binary_op: ADD .

    $default  reduce using rule 123 (arith_binary_op)


State 82

  124 arith_binary_op: SUB .

    $default  reduce using rule 124 (arith_binary_op)


State 83

  125 arith_binary_op: MULT .

    $default  reduce using rule 125 (arith_binary_op)


State 84

  126 arith_binary_op: DIV .

    $default  reduce using rule 126 (arith_binary_op)


State 85

  127 arith_binary_op: EXP .

    $default  reduce using rule 127 (arith_binary_op)


State 86

  128 arith_binary_op: MOD .

    $default  reduce using rule 128 (arith_binary_op)


State 87

  131 bit_binary_op: BIN_AND .

    $default  reduce using rule 131 (bit_binary_op)


State 88

  132 bit_binary_op: BIN_OR .

    $default  reduce using rule 132 (bit_binary_op)


State 89

  133 bit_binary_op: BIN_XOR .

    $default  reduce using rule 133 (bit_binary_op)


State 90

  134 bit_binary_op: BIN_LEFT .

    $default  reduce using rule 134 (bit_binary_op)


State 91

  135 bit_binary_op: BIN_RIGHT .

    $default  reduce using rule 135 (bit_binary_op)


State 92

  100 expr: const_block arith_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block          go to state 36
    function_call_block  go to state 46
    var_block            go to state 49
    ass_var_block        go to state 71
    expr                 go to state 164
    bit_unary_op         go to state 56


State 93

  101 expr: const_block bit_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block          go to state 36
    function_call_block  go to state 46
    var_block            go to state 49
    ass_var_block        go to state 71
    expr                 go to state 165
    bit_unary_op         go to state 56


State 94

   18 general_block: if_else_block general_block .

    $default  reduce using rule 18 (general_block)


State 95

   17 general_block: loop_block general_block .

    $default  reduce using rule 17 (general_block)


State 96

   15 block: comment_block . function_def_block block
   19 general_block: comment_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    comment_block           go to state 76
    const_block             go to state 36
    general_block           go to state 78
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    function_def_block      go to state 79
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 97

   13 block: function_def_block block .

    $default  reduce using rule 13 (block)


State 98

   16 general_block: general_stmt general_block .

    $default  reduce using rule 16 (general_block)


State 99

  102 expr: function_call_block arith_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block          go to state 36
    function_call_block  go to state 46
    var_block            go to state 49
    ass_var_block        go to state 71
    expr                 go to state 166
    bit_unary_op         go to state 56


State 100

  103 expr: function_call_block bit_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block          go to state 36
    function_call_block  go to state 46
    var_block            go to state 49
    ass_var_block        go to state 71
    expr                 go to state 167
    bit_unary_op         go to state 56


State 101

   58 general_stmt: declaration_block TERMINATOR .

    $default  reduce using rule 58 (general_stmt)


State 102

   67 declaration_block: data_type var_list .

    $default  reduce using rule 67 (declaration_block)


State 103

   68 var_list: var_block . COMMA var_list
   69         | var_block .
   79 array_block: var_block . OB num CB

    OB     shift, and go to state 168
    COMMA  shift, and go to state 169

    $default  reduce using rule 69 (var_list)


State 104

   70 var_list: array_block . COMMA var_list
   71         | array_block .

    COMMA  shift, and go to state 170

    $default  reduce using rule 71 (var_list)


State 105

   83 ass_var_block: var_block OB . conditional_expr CB

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    function_call_block     go to state 46
    var_block               go to state 49
    ass_var_block           go to state 71
    expr                    go to state 52
    conditional_expr        go to state 171
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 106

  144 bit_assgn_op: BIN_AND_ASSIGN .

    $default  reduce using rule 144 (bit_assgn_op)


State 107

  145 bit_assgn_op: BIN_IOR_ASSIGN .

    $default  reduce using rule 145 (bit_assgn_op)


State 108

  146 bit_assgn_op: BIN_XOR_ASSIGN .

    $default  reduce using rule 146 (bit_assgn_op)


State 109

  137 arith_assgn_op: ADD_ASSIGN .

    $default  reduce using rule 137 (arith_assgn_op)


State 110

  138 arith_assgn_op: SUB_ASSIGN .

    $default  reduce using rule 138 (arith_assgn_op)


State 111

  139 arith_assgn_op: MULT_ASSIGN .

    $default  reduce using rule 139 (arith_assgn_op)


State 112

  140 arith_assgn_op: DIV_ASSIGN .

    $default  reduce using rule 140 (arith_assgn_op)


State 113

  141 arith_assgn_op: MOD_ASSIGN .

    $default  reduce using rule 141 (arith_assgn_op)


State 114

  142 arith_assgn_op: LEFT_ASSIGN .

    $default  reduce using rule 142 (arith_assgn_op)


State 115

  143 arith_assgn_op: RIGHT_ASSIGN .

    $default  reduce using rule 143 (arith_assgn_op)


State 116

   84 assignment_block: ass_var_block ASSIGN . conditional_expr
   87                 | ass_var_block ASSIGN . assignment_block

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 22

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    function_call_block     go to state 46
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 172
    expr                    go to state 52
    conditional_expr        go to state 173
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 117

   91 expr: ass_var_block arith_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block          go to state 36
    function_call_block  go to state 46
    var_block            go to state 49
    ass_var_block        go to state 71
    expr                 go to state 174
    bit_unary_op         go to state 56


State 118

   92 expr: ass_var_block bit_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block          go to state 36
    function_call_block  go to state 46
    var_block            go to state 49
    ass_var_block        go to state 71
    expr                 go to state 175
    bit_unary_op         go to state 56


State 119

   85 assignment_block: ass_var_block arith_assgn_op . conditional_expr
   88                 | ass_var_block arith_assgn_op . assignment_block

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 22

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    function_call_block     go to state 46
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 176
    expr                    go to state 52
    conditional_expr        go to state 177
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 120

   86 assignment_block: ass_var_block bit_assgn_op . conditional_expr
   89                 | ass_var_block bit_assgn_op . assignment_block

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 22

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    function_call_block     go to state 46
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 178
    expr                    go to state 52
    conditional_expr        go to state 179
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 121

   59 general_stmt: assignment_block TERMINATOR .

    $default  reduce using rule 59 (general_stmt)


State 122

  118 bit_condition_op: AND .

    $default  reduce using rule 118 (bit_condition_op)


State 123

  119 bit_condition_op: OR .

    $default  reduce using rule 119 (bit_condition_op)


State 124

  111 arith_condition_op: EQ .

    $default  reduce using rule 111 (arith_condition_op)


State 125

  112 arith_condition_op: NOTEQ .

    $default  reduce using rule 112 (arith_condition_op)


State 126

  113 arith_condition_op: GT .

    $default  reduce using rule 113 (arith_condition_op)


State 127

  114 arith_condition_op: LT .

    $default  reduce using rule 114 (arith_condition_op)


State 128

  115 arith_condition_op: GE .

    $default  reduce using rule 115 (arith_condition_op)


State 129

  116 arith_condition_op: LE .

    $default  reduce using rule 116 (arith_condition_op)


State 130

  117 arith_condition_op: LTGT .

    $default  reduce using rule 117 (arith_condition_op)


State 131

  106 conditional_expr: expr arith_condition_op . conditional_expr

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    function_call_block     go to state 46
    var_block               go to state 49
    ass_var_block           go to state 71
    expr                    go to state 52
    conditional_expr        go to state 180
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 132

  107 conditional_expr: expr bit_condition_op . conditional_expr

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    function_call_block     go to state 46
    var_block               go to state 49
    ass_var_block           go to state 71
    expr                    go to state 52
    conditional_expr        go to state 181
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 133

   60 general_stmt: conditional_expr TERMINATOR .

    $default  reduce using rule 60 (general_stmt)


State 134

  110 conditional_expr: bit_unary_condition_op expr .

    $default  reduce using rule 110 (conditional_expr)


State 135

  104 expr: bit_unary_op const_block .

    $default  reduce using rule 104 (expr)


State 136

   93 expr: bit_unary_op ass_var_block .

    $default  reduce using rule 93 (expr)


State 137

   22 if_else_block: IF OP if_condition . CP OCB general_block CCB
   23              | IF OP if_condition . CP OCB general_block CCB ELSE OCB general_block CCB
   24              | IF OP if_condition . CP OCB general_block CCB ELSE if_else_block

    CP  shift, and go to state 182


State 138

   25 if_condition: conditional_expr .

    $default  reduce using rule 25 (if_condition)


State 139

   29 while_loop_block: WHILE OP while_condition . CP OCB general_block CCB

    CP  shift, and go to state 183


State 140

   30 while_condition: conditional_expr .

    $default  reduce using rule 30 (while_condition)


State 141

   31 do_while_loop_block: DO OCB general_block . CCB WHILE OP do_while_condition CP TERMINATOR

    CCB  shift, and go to state 184


State 142

  129 arith_unary_op: INC .

    $default  reduce using rule 129 (arith_unary_op)


State 143

  130 arith_unary_op: DEC .

    $default  reduce using rule 130 (arith_unary_op)


State 144

   42 for_initialization: TERMINATOR .

    $default  reduce using rule 42 (for_initialization)


State 145

   90 assignment_block: OP . assignment_block CP

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19
    OP       shift, and go to state 145

    var_block         go to state 49
    ass_var_block     go to state 185
    assignment_block  go to state 63


State 146

   33 for_loop_block: FOR OP for_initialization . for_condition TERMINATOR for_update CP OCB general_block CCB

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    for_condition           go to state 186
    function_call_block     go to state 46
    var_block               go to state 49
    ass_var_block           go to state 71
    expr                    go to state 52
    conditional_expr        go to state 187
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 147

   34 for_initialization: function_call_block . COMMA for_initialization
   41                   | function_call_block . TERMINATOR

    TERMINATOR  shift, and go to state 188
    COMMA       shift, and go to state 189


State 148

   36 for_initialization: ass_var_block . arith_unary_op COMMA for_initialization
   39                   | ass_var_block . arith_unary_op TERMINATOR
   84 assignment_block: ass_var_block . ASSIGN conditional_expr
   85                 | ass_var_block . arith_assgn_op conditional_expr
   86                 | ass_var_block . bit_assgn_op conditional_expr
   87                 | ass_var_block . ASSIGN assignment_block
   88                 | ass_var_block . arith_assgn_op assignment_block
   89                 | ass_var_block . bit_assgn_op assignment_block

    INC             shift, and go to state 142
    DEC             shift, and go to state 143
    BIN_AND_ASSIGN  shift, and go to state 106
    BIN_IOR_ASSIGN  shift, and go to state 107
    BIN_XOR_ASSIGN  shift, and go to state 108
    ADD_ASSIGN      shift, and go to state 109
    SUB_ASSIGN      shift, and go to state 110
    MULT_ASSIGN     shift, and go to state 111
    DIV_ASSIGN      shift, and go to state 112
    MOD_ASSIGN      shift, and go to state 113
    LEFT_ASSIGN     shift, and go to state 114
    RIGHT_ASSIGN    shift, and go to state 115
    ASSIGN          shift, and go to state 116

    arith_unary_op  go to state 190
    arith_assgn_op  go to state 119
    bit_assgn_op    go to state 120


State 149

   35 for_initialization: assignment_block . COMMA for_initialization
   38                   | assignment_block . TERMINATOR

    TERMINATOR  shift, and go to state 191
    COMMA       shift, and go to state 192


State 150

   37 for_initialization: arith_unary_op . ass_var_block COMMA for_initialization
   40                   | arith_unary_op . ass_var_block TERMINATOR

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19

    var_block      go to state 49
    ass_var_block  go to state 193


State 151

   64 function_call_block: IDENT OP function_var_list . CP

    CP  shift, and go to state 194


State 152

   65 function_var_list: conditional_expr . COMMA function_var_list
   66                  | conditional_expr .

    COMMA  shift, and go to state 195

    $default  reduce using rule 66 (function_var_list)


State 153

   90 assignment_block: OP assignment_block CP .

    $default  reduce using rule 90 (assignment_block)


State 154

   97 expr: OP conditional_expr CP . arith_binary_op expr
   98     | OP conditional_expr CP . bit_binary_op expr
   99     | OP conditional_expr CP .

    ADD        shift, and go to state 81
    SUB        shift, and go to state 82
    MULT       shift, and go to state 83
    DIV        shift, and go to state 84
    EXP        shift, and go to state 85
    MOD        shift, and go to state 86
    BIN_AND    shift, and go to state 87
    BIN_OR     shift, and go to state 88
    BIN_XOR    shift, and go to state 89
    BIN_LEFT   shift, and go to state 90
    BIN_RIGHT  shift, and go to state 91

    $default  reduce using rule 99 (expr)

    arith_binary_op  go to state 196
    bit_binary_op    go to state 197


State 155

    7 defination_block: DEFINE IDENT const_block .

    $default  reduce using rule 7 (defination_block)


State 156

    8 defination_block: IFDEF IDENT OCB . start_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    DEFINE         shift, and go to state 25
    IFDEF          shift, and go to state 26
    IFNDEF         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    start_block             go to state 198
    comment_block           go to state 34
    defination_block        go to state 35
    const_block             go to state 36
    block                   go to state 37
    general_block           go to state 38
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    function_def_block      go to state 44
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 157

    9 defination_block: IFNDEF IDENT OCB . start_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    DEFINE         shift, and go to state 25
    IFDEF          shift, and go to state 26
    IFNDEF         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    start_block             go to state 199
    comment_block           go to state 34
    defination_block        go to state 35
    const_block             go to state 36
    block                   go to state 37
    general_block           go to state 38
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    function_def_block      go to state 44
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 158

   53 function_def_block: FUNCTION ident OP . argument_list_block CP OCB general_block CCB

    INT     shift, and go to state 9
    LONG    shift, and go to state 10
    CHAR    shift, and go to state 11
    FLOAT   shift, and go to state 12
    DOUBLE  shift, and go to state 13

    $default  reduce using rule 57 (argument_list_block)

    argument_list_block  go to state 200
    data_type            go to state 201


State 159

   61 general_stmt: PRINT conditional_expr TERMINATOR .

    $default  reduce using rule 61 (general_stmt)


State 160

   62 general_stmt: SCAN ass_var_block TERMINATOR .

    $default  reduce using rule 62 (general_stmt)


State 161

   63 general_stmt: RETURN conditional_expr TERMINATOR .

    $default  reduce using rule 63 (general_stmt)


State 162

    4 start_block: comment_block defination_block start_block .

    $default  reduce using rule 4 (start_block)


State 163

   15 block: comment_block function_def_block block .

    $default  reduce using rule 15 (block)


State 164

  100 expr: const_block arith_binary_op expr .

    $default  reduce using rule 100 (expr)


State 165

  101 expr: const_block bit_binary_op expr .

    $default  reduce using rule 101 (expr)


State 166

  102 expr: function_call_block arith_binary_op expr .

    $default  reduce using rule 102 (expr)


State 167

  103 expr: function_call_block bit_binary_op expr .

    $default  reduce using rule 103 (expr)


State 168

   79 array_block: var_block OB . num CB

    NUM  shift, and go to state 202

    num  go to state 203


State 169

   68 var_list: var_block COMMA . var_list

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18

    var_list     go to state 204
    var_block    go to state 103
    array_block  go to state 104


State 170

   70 var_list: array_block COMMA . var_list

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18

    var_list     go to state 205
    var_block    go to state 103
    array_block  go to state 104


State 171

   83 ass_var_block: var_block OB conditional_expr . CB

    CB  shift, and go to state 206


State 172

   87 assignment_block: ass_var_block ASSIGN assignment_block .

    $default  reduce using rule 87 (assignment_block)


State 173

   84 assignment_block: ass_var_block ASSIGN conditional_expr .

    $default  reduce using rule 84 (assignment_block)


State 174

   91 expr: ass_var_block arith_binary_op expr .

    $default  reduce using rule 91 (expr)


State 175

   92 expr: ass_var_block bit_binary_op expr .

    $default  reduce using rule 92 (expr)


State 176

   88 assignment_block: ass_var_block arith_assgn_op assignment_block .

    $default  reduce using rule 88 (assignment_block)


State 177

   85 assignment_block: ass_var_block arith_assgn_op conditional_expr .

    $default  reduce using rule 85 (assignment_block)


State 178

   89 assignment_block: ass_var_block bit_assgn_op assignment_block .

    $default  reduce using rule 89 (assignment_block)


State 179

   86 assignment_block: ass_var_block bit_assgn_op conditional_expr .

    $default  reduce using rule 86 (assignment_block)


State 180

  106 conditional_expr: expr arith_condition_op conditional_expr .

    $default  reduce using rule 106 (conditional_expr)


State 181

  107 conditional_expr: expr bit_condition_op conditional_expr .

    $default  reduce using rule 107 (conditional_expr)


State 182

   22 if_else_block: IF OP if_condition CP . OCB general_block CCB
   23              | IF OP if_condition CP . OCB general_block CCB ELSE OCB general_block CCB
   24              | IF OP if_condition CP . OCB general_block CCB ELSE if_else_block

    OCB  shift, and go to state 207


State 183

   29 while_loop_block: WHILE OP while_condition CP . OCB general_block CCB

    OCB  shift, and go to state 208


State 184

   31 do_while_loop_block: DO OCB general_block CCB . WHILE OP do_while_condition CP TERMINATOR

    WHILE  shift, and go to state 209


State 185

   84 assignment_block: ass_var_block . ASSIGN conditional_expr
   85                 | ass_var_block . arith_assgn_op conditional_expr
   86                 | ass_var_block . bit_assgn_op conditional_expr
   87                 | ass_var_block . ASSIGN assignment_block
   88                 | ass_var_block . arith_assgn_op assignment_block
   89                 | ass_var_block . bit_assgn_op assignment_block

    BIN_AND_ASSIGN  shift, and go to state 106
    BIN_IOR_ASSIGN  shift, and go to state 107
    BIN_XOR_ASSIGN  shift, and go to state 108
    ADD_ASSIGN      shift, and go to state 109
    SUB_ASSIGN      shift, and go to state 110
    MULT_ASSIGN     shift, and go to state 111
    DIV_ASSIGN      shift, and go to state 112
    MOD_ASSIGN      shift, and go to state 113
    LEFT_ASSIGN     shift, and go to state 114
    RIGHT_ASSIGN    shift, and go to state 115
    ASSIGN          shift, and go to state 116

    arith_assgn_op  go to state 119
    bit_assgn_op    go to state 120


State 186

   33 for_loop_block: FOR OP for_initialization for_condition . TERMINATOR for_update CP OCB general_block CCB

    TERMINATOR  shift, and go to state 210


State 187

   43 for_condition: conditional_expr .

    $default  reduce using rule 43 (for_condition)


State 188

   41 for_initialization: function_call_block TERMINATOR .

    $default  reduce using rule 41 (for_initialization)


State 189

   34 for_initialization: function_call_block COMMA . for_initialization

    INC         shift, and go to state 142
    DEC         shift, and go to state 143
    IDENT       shift, and go to state 16
    VAR         shift, and go to state 17
    POINTER     shift, and go to state 18
    DREF        shift, and go to state 19
    TERMINATOR  shift, and go to state 144
    OP          shift, and go to state 145

    for_initialization   go to state 211
    function_call_block  go to state 147
    var_block            go to state 49
    ass_var_block        go to state 148
    assignment_block     go to state 149
    arith_unary_op       go to state 150


State 190

   36 for_initialization: ass_var_block arith_unary_op . COMMA for_initialization
   39                   | ass_var_block arith_unary_op . TERMINATOR

    TERMINATOR  shift, and go to state 212
    COMMA       shift, and go to state 213


State 191

   38 for_initialization: assignment_block TERMINATOR .

    $default  reduce using rule 38 (for_initialization)


State 192

   35 for_initialization: assignment_block COMMA . for_initialization

    INC         shift, and go to state 142
    DEC         shift, and go to state 143
    IDENT       shift, and go to state 16
    VAR         shift, and go to state 17
    POINTER     shift, and go to state 18
    DREF        shift, and go to state 19
    TERMINATOR  shift, and go to state 144
    OP          shift, and go to state 145

    for_initialization   go to state 214
    function_call_block  go to state 147
    var_block            go to state 49
    ass_var_block        go to state 148
    assignment_block     go to state 149
    arith_unary_op       go to state 150


State 193

   37 for_initialization: arith_unary_op ass_var_block . COMMA for_initialization
   40                   | arith_unary_op ass_var_block . TERMINATOR

    TERMINATOR  shift, and go to state 215
    COMMA       shift, and go to state 216


State 194

   64 function_call_block: IDENT OP function_var_list CP .

    $default  reduce using rule 64 (function_call_block)


State 195

   65 function_var_list: conditional_expr COMMA . function_var_list

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    function_call_block     go to state 46
    function_var_list       go to state 217
    var_block               go to state 49
    ass_var_block           go to state 71
    expr                    go to state 52
    conditional_expr        go to state 152
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 196

   97 expr: OP conditional_expr CP arith_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block          go to state 36
    function_call_block  go to state 46
    var_block            go to state 49
    ass_var_block        go to state 71
    expr                 go to state 218
    bit_unary_op         go to state 56


State 197

   98 expr: OP conditional_expr CP bit_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block          go to state 36
    function_call_block  go to state 46
    var_block            go to state 49
    ass_var_block        go to state 71
    expr                 go to state 219
    bit_unary_op         go to state 56


State 198

    8 defination_block: IFDEF IDENT OCB start_block . CCB

    CCB  shift, and go to state 220


State 199

    9 defination_block: IFNDEF IDENT OCB start_block . CCB

    CCB  shift, and go to state 221


State 200

   53 function_def_block: FUNCTION ident OP argument_list_block . CP OCB general_block CCB

    CP  shift, and go to state 222


State 201

   55 argument_list_block: data_type . var_block COMMA argument_list_block
   56                    | data_type . var_block

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18

    var_block  go to state 223


State 202

   80 num: NUM .

    $default  reduce using rule 80 (num)


State 203

   79 array_block: var_block OB num . CB

    CB  shift, and go to state 224


State 204

   68 var_list: var_block COMMA var_list .

    $default  reduce using rule 68 (var_list)


State 205

   70 var_list: array_block COMMA var_list .

    $default  reduce using rule 70 (var_list)


State 206

   83 ass_var_block: var_block OB conditional_expr CB .

    $default  reduce using rule 83 (ass_var_block)


State 207

   22 if_else_block: IF OP if_condition CP OCB . general_block CCB
   23              | IF OP if_condition CP OCB . general_block CCB ELSE OCB general_block CCB
   24              | IF OP if_condition CP OCB . general_block CCB ELSE if_else_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    comment_block           go to state 76
    const_block             go to state 36
    general_block           go to state 225
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 208

   29 while_loop_block: WHILE OP while_condition CP OCB . general_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    comment_block           go to state 76
    const_block             go to state 36
    general_block           go to state 226
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 209

   31 do_while_loop_block: DO OCB general_block CCB WHILE . OP do_while_condition CP TERMINATOR

    OP  shift, and go to state 227


State 210

   33 for_loop_block: FOR OP for_initialization for_condition TERMINATOR . for_update CP OCB general_block CCB

    INC      shift, and go to state 142
    DEC      shift, and go to state 143
    IDENT    shift, and go to state 16
    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19
    OP       shift, and go to state 145

    $default  reduce using rule 52 (for_update)

    for_update           go to state 228
    function_call_block  go to state 229
    var_block            go to state 49
    ass_var_block        go to state 230
    assignment_block     go to state 231
    arith_unary_op       go to state 232


State 211

   34 for_initialization: function_call_block COMMA for_initialization .

    $default  reduce using rule 34 (for_initialization)


State 212

   39 for_initialization: ass_var_block arith_unary_op TERMINATOR .

    $default  reduce using rule 39 (for_initialization)


State 213

   36 for_initialization: ass_var_block arith_unary_op COMMA . for_initialization

    INC         shift, and go to state 142
    DEC         shift, and go to state 143
    IDENT       shift, and go to state 16
    VAR         shift, and go to state 17
    POINTER     shift, and go to state 18
    DREF        shift, and go to state 19
    TERMINATOR  shift, and go to state 144
    OP          shift, and go to state 145

    for_initialization   go to state 233
    function_call_block  go to state 147
    var_block            go to state 49
    ass_var_block        go to state 148
    assignment_block     go to state 149
    arith_unary_op       go to state 150


State 214

   35 for_initialization: assignment_block COMMA for_initialization .

    $default  reduce using rule 35 (for_initialization)


State 215

   40 for_initialization: arith_unary_op ass_var_block TERMINATOR .

    $default  reduce using rule 40 (for_initialization)


State 216

   37 for_initialization: arith_unary_op ass_var_block COMMA . for_initialization

    INC         shift, and go to state 142
    DEC         shift, and go to state 143
    IDENT       shift, and go to state 16
    VAR         shift, and go to state 17
    POINTER     shift, and go to state 18
    DREF        shift, and go to state 19
    TERMINATOR  shift, and go to state 144
    OP          shift, and go to state 145

    for_initialization   go to state 234
    function_call_block  go to state 147
    var_block            go to state 49
    ass_var_block        go to state 148
    assignment_block     go to state 149
    arith_unary_op       go to state 150


State 217

   65 function_var_list: conditional_expr COMMA function_var_list .

    $default  reduce using rule 65 (function_var_list)


State 218

   97 expr: OP conditional_expr CP arith_binary_op expr .

    $default  reduce using rule 97 (expr)


State 219

   98 expr: OP conditional_expr CP bit_binary_op expr .

    $default  reduce using rule 98 (expr)


State 220

    8 defination_block: IFDEF IDENT OCB start_block CCB .

    $default  reduce using rule 8 (defination_block)


State 221

    9 defination_block: IFNDEF IDENT OCB start_block CCB .

    $default  reduce using rule 9 (defination_block)


State 222

   53 function_def_block: FUNCTION ident OP argument_list_block CP . OCB general_block CCB

    OCB  shift, and go to state 235


State 223

   55 argument_list_block: data_type var_block . COMMA argument_list_block
   56                    | data_type var_block .

    COMMA  shift, and go to state 236

    $default  reduce using rule 56 (argument_list_block)


State 224

   79 array_block: var_block OB num CB .

    $default  reduce using rule 79 (array_block)


State 225

   22 if_else_block: IF OP if_condition CP OCB general_block . CCB
   23              | IF OP if_condition CP OCB general_block . CCB ELSE OCB general_block CCB
   24              | IF OP if_condition CP OCB general_block . CCB ELSE if_else_block

    CCB  shift, and go to state 237


State 226

   29 while_loop_block: WHILE OP while_condition CP OCB general_block . CCB

    CCB  shift, and go to state 238


State 227

   31 do_while_loop_block: DO OCB general_block CCB WHILE OP . do_while_condition CP TERMINATOR

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 70

    $default  reduce using rule 105 (expr)

    const_block             go to state 36
    do_while_condition      go to state 239
    function_call_block     go to state 46
    var_block               go to state 49
    ass_var_block           go to state 71
    expr                    go to state 52
    conditional_expr        go to state 240
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 228

   33 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update . CP OCB general_block CCB

    CP  shift, and go to state 241


State 229

   44 for_update: function_call_block . COMMA for_update
   48           | function_call_block .

    COMMA  shift, and go to state 242

    $default  reduce using rule 48 (for_update)


State 230

   46 for_update: ass_var_block . arith_unary_op COMMA for_update
   50           | ass_var_block . arith_unary_op
   84 assignment_block: ass_var_block . ASSIGN conditional_expr
   85                 | ass_var_block . arith_assgn_op conditional_expr
   86                 | ass_var_block . bit_assgn_op conditional_expr
   87                 | ass_var_block . ASSIGN assignment_block
   88                 | ass_var_block . arith_assgn_op assignment_block
   89                 | ass_var_block . bit_assgn_op assignment_block

    INC             shift, and go to state 142
    DEC             shift, and go to state 143
    BIN_AND_ASSIGN  shift, and go to state 106
    BIN_IOR_ASSIGN  shift, and go to state 107
    BIN_XOR_ASSIGN  shift, and go to state 108
    ADD_ASSIGN      shift, and go to state 109
    SUB_ASSIGN      shift, and go to state 110
    MULT_ASSIGN     shift, and go to state 111
    DIV_ASSIGN      shift, and go to state 112
    MOD_ASSIGN      shift, and go to state 113
    LEFT_ASSIGN     shift, and go to state 114
    RIGHT_ASSIGN    shift, and go to state 115
    ASSIGN          shift, and go to state 116

    arith_unary_op  go to state 243
    arith_assgn_op  go to state 119
    bit_assgn_op    go to state 120


State 231

   45 for_update: assignment_block . COMMA for_update
   49           | assignment_block .

    COMMA  shift, and go to state 244

    $default  reduce using rule 49 (for_update)


State 232

   47 for_update: arith_unary_op . ass_var_block COMMA for_update
   51           | arith_unary_op . ass_var_block

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19

    var_block      go to state 49
    ass_var_block  go to state 245


State 233

   36 for_initialization: ass_var_block arith_unary_op COMMA for_initialization .

    $default  reduce using rule 36 (for_initialization)


State 234

   37 for_initialization: arith_unary_op ass_var_block COMMA for_initialization .

    $default  reduce using rule 37 (for_initialization)


State 235

   53 function_def_block: FUNCTION ident OP argument_list_block CP OCB . general_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    comment_block           go to state 76
    const_block             go to state 36
    general_block           go to state 246
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 236

   55 argument_list_block: data_type var_block COMMA . argument_list_block

    INT     shift, and go to state 9
    LONG    shift, and go to state 10
    CHAR    shift, and go to state 11
    FLOAT   shift, and go to state 12
    DOUBLE  shift, and go to state 13

    $default  reduce using rule 57 (argument_list_block)

    argument_list_block  go to state 247
    data_type            go to state 201


State 237

   22 if_else_block: IF OP if_condition CP OCB general_block CCB .
   23              | IF OP if_condition CP OCB general_block CCB . ELSE OCB general_block CCB
   24              | IF OP if_condition CP OCB general_block CCB . ELSE if_else_block

    ELSE  shift, and go to state 248

    $default  reduce using rule 22 (if_else_block)


State 238

   29 while_loop_block: WHILE OP while_condition CP OCB general_block CCB .

    $default  reduce using rule 29 (while_loop_block)


State 239

   31 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition . CP TERMINATOR

    CP  shift, and go to state 249


State 240

   32 do_while_condition: conditional_expr .

    $default  reduce using rule 32 (do_while_condition)


State 241

   33 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP . OCB general_block CCB

    OCB  shift, and go to state 250


State 242

   44 for_update: function_call_block COMMA . for_update

    INC      shift, and go to state 142
    DEC      shift, and go to state 143
    IDENT    shift, and go to state 16
    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19
    OP       shift, and go to state 145

    $default  reduce using rule 52 (for_update)

    for_update           go to state 251
    function_call_block  go to state 229
    var_block            go to state 49
    ass_var_block        go to state 230
    assignment_block     go to state 231
    arith_unary_op       go to state 232


State 243

   46 for_update: ass_var_block arith_unary_op . COMMA for_update
   50           | ass_var_block arith_unary_op .

    COMMA  shift, and go to state 252

    $default  reduce using rule 50 (for_update)


State 244

   45 for_update: assignment_block COMMA . for_update

    INC      shift, and go to state 142
    DEC      shift, and go to state 143
    IDENT    shift, and go to state 16
    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19
    OP       shift, and go to state 145

    $default  reduce using rule 52 (for_update)

    for_update           go to state 253
    function_call_block  go to state 229
    var_block            go to state 49
    ass_var_block        go to state 230
    assignment_block     go to state 231
    arith_unary_op       go to state 232


State 245

   47 for_update: arith_unary_op ass_var_block . COMMA for_update
   51           | arith_unary_op ass_var_block .

    COMMA  shift, and go to state 254

    $default  reduce using rule 51 (for_update)


State 246

   53 function_def_block: FUNCTION ident OP argument_list_block CP OCB general_block . CCB

    CCB  shift, and go to state 255


State 247

   55 argument_list_block: data_type var_block COMMA argument_list_block .

    $default  reduce using rule 55 (argument_list_block)


State 248

   23 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE . OCB general_block CCB
   24              | IF OP if_condition CP OCB general_block CCB ELSE . if_else_block

    IF   shift, and go to state 2
    OCB  shift, and go to state 256

    if_else_block  go to state 257


State 249

   31 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition CP . TERMINATOR

    TERMINATOR  shift, and go to state 258


State 250

   33 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB . general_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    comment_block           go to state 76
    const_block             go to state 36
    general_block           go to state 259
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 251

   44 for_update: function_call_block COMMA for_update .

    $default  reduce using rule 44 (for_update)


State 252

   46 for_update: ass_var_block arith_unary_op COMMA . for_update

    INC      shift, and go to state 142
    DEC      shift, and go to state 143
    IDENT    shift, and go to state 16
    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19
    OP       shift, and go to state 145

    $default  reduce using rule 52 (for_update)

    for_update           go to state 260
    function_call_block  go to state 229
    var_block            go to state 49
    ass_var_block        go to state 230
    assignment_block     go to state 231
    arith_unary_op       go to state 232


State 253

   45 for_update: assignment_block COMMA for_update .

    $default  reduce using rule 45 (for_update)


State 254

   47 for_update: arith_unary_op ass_var_block COMMA . for_update

    INC      shift, and go to state 142
    DEC      shift, and go to state 143
    IDENT    shift, and go to state 16
    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19
    OP       shift, and go to state 145

    $default  reduce using rule 52 (for_update)

    for_update           go to state 261
    function_call_block  go to state 229
    var_block            go to state 49
    ass_var_block        go to state 230
    assignment_block     go to state 231
    arith_unary_op       go to state 232


State 255

   53 function_def_block: FUNCTION ident OP argument_list_block CP OCB general_block CCB .

    $default  reduce using rule 53 (function_def_block)


State 256

   23 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE OCB . general_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29
    SCAN           shift, and go to state 30
    RETURN         shift, and go to state 31

    AND         reduce using rule 105 (expr)
    OR          reduce using rule 105 (expr)
    TERMINATOR  reduce using rule 105 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 105 (expr)
    NOTEQ       reduce using rule 105 (expr)
    GT          reduce using rule 105 (expr)
    LT          reduce using rule 105 (expr)
    GE          reduce using rule 105 (expr)
    LE          reduce using rule 105 (expr)
    LTGT        reduce using rule 105 (expr)

    comment_block           go to state 76
    const_block             go to state 36
    general_block           go to state 262
    if_else_block           go to state 39
    loop_block              go to state 40
    while_loop_block        go to state 41
    do_while_loop_block     go to state 42
    for_loop_block          go to state 43
    general_stmt            go to state 45
    function_call_block     go to state 46
    declaration_block       go to state 47
    data_type               go to state 48
    var_block               go to state 49
    ass_var_block           go to state 50
    assignment_block        go to state 51
    expr                    go to state 52
    conditional_expr        go to state 53
    bit_unary_condition_op  go to state 54
    fixed_condition         go to state 55
    bit_unary_op            go to state 56


State 257

   24 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE if_else_block .

    $default  reduce using rule 24 (if_else_block)


State 258

   31 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition CP TERMINATOR .

    $default  reduce using rule 31 (do_while_loop_block)


State 259

   33 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB general_block . CCB

    CCB  shift, and go to state 263


State 260

   46 for_update: ass_var_block arith_unary_op COMMA for_update .

    $default  reduce using rule 46 (for_update)


State 261

   47 for_update: arith_unary_op ass_var_block COMMA for_update .

    $default  reduce using rule 47 (for_update)


State 262

   23 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE OCB general_block . CCB

    CCB  shift, and go to state 264


State 263

   33 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB .

    $default  reduce using rule 33 (for_loop_block)


State 264

   23 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE OCB general_block CCB .

    $default  reduce using rule 23 (if_else_block)
