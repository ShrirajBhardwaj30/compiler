Terminals unused in grammar

   QUES
   COLON
   WHITESPACE
   IFDEF
   IFNDEF
   SYN_ERROR


Grammar

    0 $accept: super_block $end

    1 super_block: start_block

    2 start_block: defination_block start_block
    3            | block
    4            | comment_block defination_block start_block

    5 comment_block: COMMENT
    6              | MULTI_COMMENT

    7 defination_block: DEFINE IDENT const_block

    8 const_block: STRING
    9            | NUM
   10            | CHARACTER

   11 block: function_def_block block
   12      | general_block
   13      | comment_block function_def_block block

   14 general_block: general_stmt general_block
   15              | loop_block general_block
   16              | if_else_block general_block
   17              | comment_block general_block
   18              | error start_block
   19              | %empty

   20 if_else_block: IF OP if_condition CP OCB general_block CCB
   21              | IF OP if_condition CP OCB general_block CCB ELSE OCB general_block CCB
   22              | IF OP if_condition CP OCB general_block CCB ELSE if_else_block

   23 if_condition: conditional_expr

   24 loop_block: for_loop_block
   25           | while_loop_block
   26           | do_while_loop_block

   27 while_loop_block: WHILE OP while_condition CP OCB general_block CCB

   28 while_condition: conditional_expr

   29 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition CP TERMINATOR

   30 do_while_condition: conditional_expr

   31 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB

   32 for_initialization: function_call_block COMMA for_initialization
   33                   | assignment_block COMMA for_initialization
   34                   | ass_var_block arith_unary_op COMMA for_initialization
   35                   | arith_unary_op ass_var_block COMMA for_initialization
   36                   | assignment_block TERMINATOR
   37                   | ass_var_block arith_unary_op TERMINATOR
   38                   | arith_unary_op ass_var_block TERMINATOR
   39                   | function_call_block TERMINATOR
   40                   | TERMINATOR

   41 for_condition: conditional_expr

   42 for_update: function_call_block COMMA for_update
   43           | assignment_block COMMA for_update
   44           | ass_var_block arith_unary_op COMMA for_update
   45           | arith_unary_op ass_var_block COMMA for_update
   46           | function_call_block
   47           | assignment_block
   48           | ass_var_block arith_unary_op
   49           | arith_unary_op ass_var_block
   50           | %empty

   51 function_def_block: FUNCTION IDENT OP argument_list_block CP OCB general_block CCB

   52 argument_list_block: data_type var_block COMMA argument_list_block
   53                    | data_type var_block
   54                    | %empty

   55 general_stmt: declaration_block TERMINATOR
   56             | assignment_block TERMINATOR
   57             | conditional_expr TERMINATOR
   58             | PRINT str GT str TERMINATOR

   59 str: STRING

   60 function_call_block: IDENT OP function_var_list CP

   61 function_var_list: conditional_expr COMMA function_var_list
   62                  | conditional_expr

   63 declaration_block: data_type var_list

   64 var_list: var_block COMMA var_list
   65         | var_block
   66         | array_block COMMA var_list
   67         | array_block

   68 data_type: INT
   69          | FLOAT
   70          | DOUBLE
   71          | CHAR
   72          | LONG

   73 var_block: VAR
   74          | POINTER

   75 array_block: var_block OB conditional_expr CB

   76 ass_var_block: var_block
   77              | DREF
   78              | var_block OB conditional_expr CB

   79 assignment_block: ass_var_block ASSIGN conditional_expr
   80                 | ass_var_block arith_assgn_op conditional_expr
   81                 | ass_var_block bit_assgn_op conditional_expr
   82                 | ass_var_block ASSIGN assignment_block
   83                 | ass_var_block arith_assgn_op assignment_block
   84                 | ass_var_block bit_assgn_op assignment_block
   85                 | OP assignment_block CP

   86 expr: ass_var_block arith_binary_op expr
   87     | ass_var_block arith_unary_op expr
   88     | ass_var_block bit_binary_op expr
   89     | bit_unary_op ass_var_block
   90     | arith_unary_op ass_var_block expr
   91     | ass_var_block
   92     | const_block
   93     | function_call_block
   94     | OP conditional_expr CP arith_binary_op expr
   95     | OP conditional_expr CP bit_binary_op expr
   96     | OP conditional_expr CP
   97     | const_block arith_binary_op expr
   98     | const_block bit_binary_op expr
   99     | function_call_block arith_binary_op expr
  100     | function_call_block bit_binary_op expr
  101     | bit_unary_op const_block
  102     | %empty

  103 conditional_expr: expr arith_condition_op conditional_expr
  104                 | expr bit_condition_op conditional_expr
  105                 | expr
  106                 | fixed_condition
  107                 | bit_unary_condition_op expr

  108 arith_condition_op: EQ
  109                   | NOTEQ
  110                   | GT
  111                   | LT
  112                   | GE
  113                   | LE
  114                   | LTGT

  115 bit_condition_op: AND
  116                 | OR

  117 bit_unary_condition_op: NOT

  118 fixed_condition: TRUE
  119                | FALSE

  120 arith_binary_op: ADD
  121                | SUB
  122                | MULT
  123                | DIV
  124                | EXP
  125                | MOD

  126 arith_unary_op: INC
  127               | DEC

  128 bit_binary_op: BIN_AND
  129              | BIN_OR
  130              | BIN_XOR
  131              | BIN_LEFT
  132              | BIN_RIGHT

  133 bit_unary_op: BIN_NOT

  134 arith_assgn_op: ADD_ASSIGN
  135               | SUB_ASSIGN
  136               | MULT_ASSIGN
  137               | DIV_ASSIGN
  138               | MOD_ASSIGN
  139               | LEFT_ASSIGN
  140               | RIGHT_ASSIGN

  141 bit_assgn_op: BIN_AND_ASSIGN
  142             | BIN_IOR_ASSIGN
  143             | BIN_XOR_ASSIGN


Terminals, with rules where they appear

$end (0) 0
error (256) 18
IF (258) 20 21 22
ELSE (259) 21 22
WHILE (260) 27 29
DO (261) 29
FOR (262) 31
AND (263) 115
OR (264) 116
NOT (265) 117
TRUE (266) 118
FALSE (267) 119
INT (268) 68
LONG (269) 72
CHAR (270) 71
FLOAT (271) 69
DOUBLE (272) 70
ADD (273) 120
SUB (274) 121
MULT (275) 122
DIV (276) 123
EXP (277) 124
MOD (278) 125
INC (279) 126
DEC (280) 127
QUES (281)
BIN_NOT (282) 133
BIN_AND (283) 128
BIN_OR (284) 129
BIN_XOR (285) 130
BIN_LEFT (286) 131
BIN_RIGHT (287) 132
BIN_AND_ASSIGN (288) 141
BIN_IOR_ASSIGN (289) 142
BIN_XOR_ASSIGN (290) 143
ADD_ASSIGN (291) 134
SUB_ASSIGN (292) 135
MULT_ASSIGN (293) 136
DIV_ASSIGN (294) 137
MOD_ASSIGN (295) 138
LEFT_ASSIGN (296) 139
RIGHT_ASSIGN (297) 140
NUM (298) 9
IDENT (299) 7 51 60
VAR (300) 73
POINTER (301) 74
DREF (302) 77
ASSIGN (303) 79 82
TERMINATOR (304) 29 31 36 37 38 39 40 55 56 57 58
COLON (305)
STRING (306) 8 59
CHARACTER (307) 10
OP (308) 20 21 22 27 29 31 51 60 85 94 95 96
CP (309) 20 21 22 27 29 31 51 60 85 94 95 96
CB (310) 75 78
OB (311) 75 78
OCB (312) 20 21 22 27 29 31 51
CCB (313) 20 21 22 27 29 31 51
EQ (314) 108
NOTEQ (315) 109
GT (316) 58 110
LT (317) 111
GE (318) 112
LE (319) 113
COMMENT (320) 5
MULTI_COMMENT (321) 6
WHITESPACE (322)
DEFINE (323) 7
IFDEF (324)
IFNDEF (325)
FUNCTION (326) 51
COMMA (327) 32 33 34 35 42 43 44 45 52 61 64 66
SYN_ERROR (328)
PRINT (329) 58
LTGT (330) 114


Nonterminals, with rules where they appear

$accept (76)
    on left: 0
super_block (77)
    on left: 1, on right: 0
start_block (78)
    on left: 2 3 4, on right: 1 2 4 18
comment_block (79)
    on left: 5 6, on right: 4 13 17
defination_block (80)
    on left: 7, on right: 2 4
const_block (81)
    on left: 8 9 10, on right: 7 92 97 98 101
block (82)
    on left: 11 12 13, on right: 3 11 13
general_block (83)
    on left: 14 15 16 17 18 19, on right: 12 14 15 16 17 20 21 22 27
    29 31 51
if_else_block (84)
    on left: 20 21 22, on right: 16 22
if_condition (85)
    on left: 23, on right: 20 21 22
loop_block (86)
    on left: 24 25 26, on right: 15
while_loop_block (87)
    on left: 27, on right: 25
while_condition (88)
    on left: 28, on right: 27
do_while_loop_block (89)
    on left: 29, on right: 26
do_while_condition (90)
    on left: 30, on right: 29
for_loop_block (91)
    on left: 31, on right: 24
for_initialization (92)
    on left: 32 33 34 35 36 37 38 39 40, on right: 31 32 33 34 35
for_condition (93)
    on left: 41, on right: 31
for_update (94)
    on left: 42 43 44 45 46 47 48 49 50, on right: 31 42 43 44 45
function_def_block (95)
    on left: 51, on right: 11 13
argument_list_block (96)
    on left: 52 53 54, on right: 51 52
general_stmt (97)
    on left: 55 56 57 58, on right: 14
str (98)
    on left: 59, on right: 58
function_call_block (99)
    on left: 60, on right: 32 39 42 46 93 99 100
function_var_list (100)
    on left: 61 62, on right: 60 61
declaration_block (101)
    on left: 63, on right: 55
var_list (102)
    on left: 64 65 66 67, on right: 63 64 66
data_type (103)
    on left: 68 69 70 71 72, on right: 52 53 63
var_block (104)
    on left: 73 74, on right: 52 53 64 65 75 76 78
array_block (105)
    on left: 75, on right: 66 67
ass_var_block (106)
    on left: 76 77 78, on right: 34 35 37 38 44 45 48 49 79 80 81 82
    83 84 86 87 88 89 90 91
assignment_block (107)
    on left: 79 80 81 82 83 84 85, on right: 33 36 43 47 56 82 83 84
    85
expr (108)
    on left: 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102,
    on right: 86 87 88 90 94 95 97 98 99 100 103 104 105 107
conditional_expr (109)
    on left: 103 104 105 106 107, on right: 23 28 30 41 57 61 62 75
    78 79 80 81 94 95 96 103 104
arith_condition_op (110)
    on left: 108 109 110 111 112 113 114, on right: 103
bit_condition_op (111)
    on left: 115 116, on right: 104
bit_unary_condition_op (112)
    on left: 117, on right: 107
fixed_condition (113)
    on left: 118 119, on right: 106
arith_binary_op (114)
    on left: 120 121 122 123 124 125, on right: 86 94 97 99
arith_unary_op (115)
    on left: 126 127, on right: 34 35 37 38 44 45 48 49 87 90
bit_binary_op (116)
    on left: 128 129 130 131 132, on right: 88 95 98 100
bit_unary_op (117)
    on left: 133, on right: 89 101
arith_assgn_op (118)
    on left: 134 135 136 137 138 139 140, on right: 80 83
bit_assgn_op (119)
    on left: 141 142 143, on right: 81 84


State 0

    0 $accept: . super_block $end

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    DEFINE         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 19 (general_block)
    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    super_block             go to state 30
    start_block             go to state 31
    comment_block           go to state 32
    defination_block        go to state 33
    const_block             go to state 34
    block                   go to state 35
    general_block           go to state 36
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 42
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 1

   18 general_block: error . start_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    DEFINE         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 19 (general_block)
    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    start_block             go to state 56
    comment_block           go to state 32
    defination_block        go to state 33
    const_block             go to state 34
    block                   go to state 35
    general_block           go to state 36
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 42
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 2

   20 if_else_block: IF . OP if_condition CP OCB general_block CCB
   21              | IF . OP if_condition CP OCB general_block CCB ELSE OCB general_block CCB
   22              | IF . OP if_condition CP OCB general_block CCB ELSE if_else_block

    OP  shift, and go to state 57


State 3

   27 while_loop_block: WHILE . OP while_condition CP OCB general_block CCB

    OP  shift, and go to state 58


State 4

   29 do_while_loop_block: DO . OCB general_block CCB WHILE OP do_while_condition CP TERMINATOR

    OCB  shift, and go to state 59


State 5

   31 for_loop_block: FOR . OP for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB

    OP  shift, and go to state 60


State 6

  117 bit_unary_condition_op: NOT .

    $default  reduce using rule 117 (bit_unary_condition_op)


State 7

  118 fixed_condition: TRUE .

    $default  reduce using rule 118 (fixed_condition)


State 8

  119 fixed_condition: FALSE .

    $default  reduce using rule 119 (fixed_condition)


State 9

   68 data_type: INT .

    $default  reduce using rule 68 (data_type)


State 10

   72 data_type: LONG .

    $default  reduce using rule 72 (data_type)


State 11

   71 data_type: CHAR .

    $default  reduce using rule 71 (data_type)


State 12

   69 data_type: FLOAT .

    $default  reduce using rule 69 (data_type)


State 13

   70 data_type: DOUBLE .

    $default  reduce using rule 70 (data_type)


State 14

  126 arith_unary_op: INC .

    $default  reduce using rule 126 (arith_unary_op)


State 15

  127 arith_unary_op: DEC .

    $default  reduce using rule 127 (arith_unary_op)


State 16

  133 bit_unary_op: BIN_NOT .

    $default  reduce using rule 133 (bit_unary_op)


State 17

    9 const_block: NUM .

    $default  reduce using rule 9 (const_block)


State 18

   60 function_call_block: IDENT . OP function_var_list CP

    OP  shift, and go to state 61


State 19

   73 var_block: VAR .

    $default  reduce using rule 73 (var_block)


State 20

   74 var_block: POINTER .

    $default  reduce using rule 74 (var_block)


State 21

   77 ass_var_block: DREF .

    $default  reduce using rule 77 (ass_var_block)


State 22

    8 const_block: STRING .

    $default  reduce using rule 8 (const_block)


State 23

   10 const_block: CHARACTER .

    $default  reduce using rule 10 (const_block)


State 24

   85 assignment_block: OP . assignment_block CP
   94 expr: OP . conditional_expr CP arith_binary_op expr
   95     | OP . conditional_expr CP bit_binary_op expr
   96     | OP . conditional_expr CP

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 24

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 62
    expr                    go to state 50
    conditional_expr        go to state 63
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 25

    5 comment_block: COMMENT .

    $default  reduce using rule 5 (comment_block)


State 26

    6 comment_block: MULTI_COMMENT .

    $default  reduce using rule 6 (comment_block)


State 27

    7 defination_block: DEFINE . IDENT const_block

    IDENT  shift, and go to state 64


State 28

   51 function_def_block: FUNCTION . IDENT OP argument_list_block CP OCB general_block CCB

    IDENT  shift, and go to state 65


State 29

   58 general_stmt: PRINT . str GT str TERMINATOR

    STRING  shift, and go to state 66

    str  go to state 67


State 30

    0 $accept: super_block . $end

    $end  shift, and go to state 68


State 31

    1 super_block: start_block .

    $default  reduce using rule 1 (super_block)


State 32

    4 start_block: comment_block . defination_block start_block
   13 block: comment_block . function_def_block block
   17 general_block: comment_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    DEFINE         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 19 (general_block)
    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    comment_block           go to state 69
    defination_block        go to state 70
    const_block             go to state 34
    general_block           go to state 71
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 72
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 33

    2 start_block: defination_block . start_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    DEFINE         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 19 (general_block)
    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    start_block             go to state 73
    comment_block           go to state 32
    defination_block        go to state 33
    const_block             go to state 34
    block                   go to state 35
    general_block           go to state 36
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 42
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 34

   92 expr: const_block .
   97     | const_block . arith_binary_op expr
   98     | const_block . bit_binary_op expr

    ADD        shift, and go to state 74
    SUB        shift, and go to state 75
    MULT       shift, and go to state 76
    DIV        shift, and go to state 77
    EXP        shift, and go to state 78
    MOD        shift, and go to state 79
    BIN_AND    shift, and go to state 80
    BIN_OR     shift, and go to state 81
    BIN_XOR    shift, and go to state 82
    BIN_LEFT   shift, and go to state 83
    BIN_RIGHT  shift, and go to state 84

    $default  reduce using rule 92 (expr)

    arith_binary_op  go to state 85
    bit_binary_op    go to state 86


State 35

    3 start_block: block .

    $default  reduce using rule 3 (start_block)


State 36

   12 block: general_block .

    $default  reduce using rule 12 (block)


State 37

   16 general_block: if_else_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    PRINT          shift, and go to state 29

    $end        reduce using rule 19 (general_block)
    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    comment_block           go to state 69
    const_block             go to state 34
    general_block           go to state 87
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 38

   15 general_block: loop_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    PRINT          shift, and go to state 29

    $end        reduce using rule 19 (general_block)
    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    comment_block           go to state 69
    const_block             go to state 34
    general_block           go to state 88
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 39

   25 loop_block: while_loop_block .

    $default  reduce using rule 25 (loop_block)


State 40

   26 loop_block: do_while_loop_block .

    $default  reduce using rule 26 (loop_block)


State 41

   24 loop_block: for_loop_block .

    $default  reduce using rule 24 (loop_block)


State 42

   11 block: function_def_block . block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 19 (general_block)
    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    comment_block           go to state 89
    const_block             go to state 34
    block                   go to state 90
    general_block           go to state 36
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 42
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 43

   14 general_block: general_stmt . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    PRINT          shift, and go to state 29

    $end        reduce using rule 19 (general_block)
    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    comment_block           go to state 69
    const_block             go to state 34
    general_block           go to state 91
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 44

   93 expr: function_call_block .
   99     | function_call_block . arith_binary_op expr
  100     | function_call_block . bit_binary_op expr

    ADD        shift, and go to state 74
    SUB        shift, and go to state 75
    MULT       shift, and go to state 76
    DIV        shift, and go to state 77
    EXP        shift, and go to state 78
    MOD        shift, and go to state 79
    BIN_AND    shift, and go to state 80
    BIN_OR     shift, and go to state 81
    BIN_XOR    shift, and go to state 82
    BIN_LEFT   shift, and go to state 83
    BIN_RIGHT  shift, and go to state 84

    $default  reduce using rule 93 (expr)

    arith_binary_op  go to state 92
    bit_binary_op    go to state 93


State 45

   55 general_stmt: declaration_block . TERMINATOR

    TERMINATOR  shift, and go to state 94


State 46

   63 declaration_block: data_type . var_list

    VAR      shift, and go to state 19
    POINTER  shift, and go to state 20

    var_list     go to state 95
    var_block    go to state 96
    array_block  go to state 97


State 47

   76 ass_var_block: var_block .
   78              | var_block . OB conditional_expr CB

    OB  shift, and go to state 98

    $default  reduce using rule 76 (ass_var_block)


State 48

   79 assignment_block: ass_var_block . ASSIGN conditional_expr
   80                 | ass_var_block . arith_assgn_op conditional_expr
   81                 | ass_var_block . bit_assgn_op conditional_expr
   82                 | ass_var_block . ASSIGN assignment_block
   83                 | ass_var_block . arith_assgn_op assignment_block
   84                 | ass_var_block . bit_assgn_op assignment_block
   86 expr: ass_var_block . arith_binary_op expr
   87     | ass_var_block . arith_unary_op expr
   88     | ass_var_block . bit_binary_op expr
   91     | ass_var_block .

    ADD             shift, and go to state 74
    SUB             shift, and go to state 75
    MULT            shift, and go to state 76
    DIV             shift, and go to state 77
    EXP             shift, and go to state 78
    MOD             shift, and go to state 79
    INC             shift, and go to state 14
    DEC             shift, and go to state 15
    BIN_AND         shift, and go to state 80
    BIN_OR          shift, and go to state 81
    BIN_XOR         shift, and go to state 82
    BIN_LEFT        shift, and go to state 83
    BIN_RIGHT       shift, and go to state 84
    BIN_AND_ASSIGN  shift, and go to state 99
    BIN_IOR_ASSIGN  shift, and go to state 100
    BIN_XOR_ASSIGN  shift, and go to state 101
    ADD_ASSIGN      shift, and go to state 102
    SUB_ASSIGN      shift, and go to state 103
    MULT_ASSIGN     shift, and go to state 104
    DIV_ASSIGN      shift, and go to state 105
    MOD_ASSIGN      shift, and go to state 106
    LEFT_ASSIGN     shift, and go to state 107
    RIGHT_ASSIGN    shift, and go to state 108
    ASSIGN          shift, and go to state 109

    $default  reduce using rule 91 (expr)

    arith_binary_op  go to state 110
    arith_unary_op   go to state 111
    bit_binary_op    go to state 112
    arith_assgn_op   go to state 113
    bit_assgn_op     go to state 114


State 49

   56 general_stmt: assignment_block . TERMINATOR

    TERMINATOR  shift, and go to state 115


State 50

  103 conditional_expr: expr . arith_condition_op conditional_expr
  104                 | expr . bit_condition_op conditional_expr
  105                 | expr .

    AND    shift, and go to state 116
    OR     shift, and go to state 117
    EQ     shift, and go to state 118
    NOTEQ  shift, and go to state 119
    GT     shift, and go to state 120
    LT     shift, and go to state 121
    GE     shift, and go to state 122
    LE     shift, and go to state 123
    LTGT   shift, and go to state 124

    $default  reduce using rule 105 (conditional_expr)

    arith_condition_op  go to state 125
    bit_condition_op    go to state 126


State 51

   57 general_stmt: conditional_expr . TERMINATOR

    TERMINATOR  shift, and go to state 127


State 52

  107 conditional_expr: bit_unary_condition_op . expr

    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 129
    expr                 go to state 130
    arith_unary_op       go to state 54
    bit_unary_op         go to state 55


State 53

  106 conditional_expr: fixed_condition .

    $default  reduce using rule 106 (conditional_expr)


State 54

   90 expr: arith_unary_op . ass_var_block expr

    VAR      shift, and go to state 19
    POINTER  shift, and go to state 20
    DREF     shift, and go to state 21

    var_block      go to state 47
    ass_var_block  go to state 131


State 55

   89 expr: bit_unary_op . ass_var_block
  101     | bit_unary_op . const_block

    NUM        shift, and go to state 17
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23

    const_block    go to state 132
    var_block      go to state 47
    ass_var_block  go to state 133


State 56

   18 general_block: error start_block .

    $default  reduce using rule 18 (general_block)


State 57

   20 if_else_block: IF OP . if_condition CP OCB general_block CCB
   21              | IF OP . if_condition CP OCB general_block CCB ELSE OCB general_block CCB
   22              | IF OP . if_condition CP OCB general_block CCB ELSE if_else_block

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    if_condition            go to state 134
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 129
    expr                    go to state 50
    conditional_expr        go to state 135
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 58

   27 while_loop_block: WHILE OP . while_condition CP OCB general_block CCB

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    while_condition         go to state 136
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 129
    expr                    go to state 50
    conditional_expr        go to state 137
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 59

   29 do_while_loop_block: DO OCB . general_block CCB WHILE OP do_while_condition CP TERMINATOR

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    PRINT          shift, and go to state 29

    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    comment_block           go to state 69
    const_block             go to state 34
    general_block           go to state 138
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 60

   31 for_loop_block: FOR OP . for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB

    INC         shift, and go to state 14
    DEC         shift, and go to state 15
    IDENT       shift, and go to state 18
    VAR         shift, and go to state 19
    POINTER     shift, and go to state 20
    DREF        shift, and go to state 21
    TERMINATOR  shift, and go to state 139
    OP          shift, and go to state 140

    for_initialization   go to state 141
    function_call_block  go to state 142
    var_block            go to state 47
    ass_var_block        go to state 143
    assignment_block     go to state 144
    arith_unary_op       go to state 145


State 61

   60 function_call_block: IDENT OP . function_var_list CP

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    function_var_list       go to state 146
    var_block               go to state 47
    ass_var_block           go to state 129
    expr                    go to state 50
    conditional_expr        go to state 147
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 62

   85 assignment_block: OP assignment_block . CP

    CP  shift, and go to state 148


State 63

   94 expr: OP conditional_expr . CP arith_binary_op expr
   95     | OP conditional_expr . CP bit_binary_op expr
   96     | OP conditional_expr . CP

    CP  shift, and go to state 149


State 64

    7 defination_block: DEFINE IDENT . const_block

    NUM        shift, and go to state 17
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23

    const_block  go to state 150


State 65

   51 function_def_block: FUNCTION IDENT . OP argument_list_block CP OCB general_block CCB

    OP  shift, and go to state 151


State 66

   59 str: STRING .

    $default  reduce using rule 59 (str)


State 67

   58 general_stmt: PRINT str . GT str TERMINATOR

    GT  shift, and go to state 152


State 68

    0 $accept: super_block $end .

    $default  accept


State 69

   17 general_block: comment_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    PRINT          shift, and go to state 29

    $end        reduce using rule 19 (general_block)
    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    comment_block           go to state 69
    const_block             go to state 34
    general_block           go to state 71
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 70

    4 start_block: comment_block defination_block . start_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    DEFINE         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 19 (general_block)
    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    start_block             go to state 153
    comment_block           go to state 32
    defination_block        go to state 33
    const_block             go to state 34
    block                   go to state 35
    general_block           go to state 36
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 42
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 71

   17 general_block: comment_block general_block .

    $default  reduce using rule 17 (general_block)


State 72

   13 block: comment_block function_def_block . block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 19 (general_block)
    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    comment_block           go to state 89
    const_block             go to state 34
    block                   go to state 154
    general_block           go to state 36
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 42
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 73

    2 start_block: defination_block start_block .

    $default  reduce using rule 2 (start_block)


State 74

  120 arith_binary_op: ADD .

    $default  reduce using rule 120 (arith_binary_op)


State 75

  121 arith_binary_op: SUB .

    $default  reduce using rule 121 (arith_binary_op)


State 76

  122 arith_binary_op: MULT .

    $default  reduce using rule 122 (arith_binary_op)


State 77

  123 arith_binary_op: DIV .

    $default  reduce using rule 123 (arith_binary_op)


State 78

  124 arith_binary_op: EXP .

    $default  reduce using rule 124 (arith_binary_op)


State 79

  125 arith_binary_op: MOD .

    $default  reduce using rule 125 (arith_binary_op)


State 80

  128 bit_binary_op: BIN_AND .

    $default  reduce using rule 128 (bit_binary_op)


State 81

  129 bit_binary_op: BIN_OR .

    $default  reduce using rule 129 (bit_binary_op)


State 82

  130 bit_binary_op: BIN_XOR .

    $default  reduce using rule 130 (bit_binary_op)


State 83

  131 bit_binary_op: BIN_LEFT .

    $default  reduce using rule 131 (bit_binary_op)


State 84

  132 bit_binary_op: BIN_RIGHT .

    $default  reduce using rule 132 (bit_binary_op)


State 85

   97 expr: const_block arith_binary_op . expr

    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 129
    expr                 go to state 155
    arith_unary_op       go to state 54
    bit_unary_op         go to state 55


State 86

   98 expr: const_block bit_binary_op . expr

    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 129
    expr                 go to state 156
    arith_unary_op       go to state 54
    bit_unary_op         go to state 55


State 87

   16 general_block: if_else_block general_block .

    $default  reduce using rule 16 (general_block)


State 88

   15 general_block: loop_block general_block .

    $default  reduce using rule 15 (general_block)


State 89

   13 block: comment_block . function_def_block block
   17 general_block: comment_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 19 (general_block)
    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    comment_block           go to state 69
    const_block             go to state 34
    general_block           go to state 71
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 72
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 90

   11 block: function_def_block block .

    $default  reduce using rule 11 (block)


State 91

   14 general_block: general_stmt general_block .

    $default  reduce using rule 14 (general_block)


State 92

   99 expr: function_call_block arith_binary_op . expr

    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 129
    expr                 go to state 157
    arith_unary_op       go to state 54
    bit_unary_op         go to state 55


State 93

  100 expr: function_call_block bit_binary_op . expr

    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 129
    expr                 go to state 158
    arith_unary_op       go to state 54
    bit_unary_op         go to state 55


State 94

   55 general_stmt: declaration_block TERMINATOR .

    $default  reduce using rule 55 (general_stmt)


State 95

   63 declaration_block: data_type var_list .

    $default  reduce using rule 63 (declaration_block)


State 96

   64 var_list: var_block . COMMA var_list
   65         | var_block .
   75 array_block: var_block . OB conditional_expr CB

    OB     shift, and go to state 159
    COMMA  shift, and go to state 160

    $default  reduce using rule 65 (var_list)


State 97

   66 var_list: array_block . COMMA var_list
   67         | array_block .

    COMMA  shift, and go to state 161

    $default  reduce using rule 67 (var_list)


State 98

   78 ass_var_block: var_block OB . conditional_expr CB

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 129
    expr                    go to state 50
    conditional_expr        go to state 162
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 99

  141 bit_assgn_op: BIN_AND_ASSIGN .

    $default  reduce using rule 141 (bit_assgn_op)


State 100

  142 bit_assgn_op: BIN_IOR_ASSIGN .

    $default  reduce using rule 142 (bit_assgn_op)


State 101

  143 bit_assgn_op: BIN_XOR_ASSIGN .

    $default  reduce using rule 143 (bit_assgn_op)


State 102

  134 arith_assgn_op: ADD_ASSIGN .

    $default  reduce using rule 134 (arith_assgn_op)


State 103

  135 arith_assgn_op: SUB_ASSIGN .

    $default  reduce using rule 135 (arith_assgn_op)


State 104

  136 arith_assgn_op: MULT_ASSIGN .

    $default  reduce using rule 136 (arith_assgn_op)


State 105

  137 arith_assgn_op: DIV_ASSIGN .

    $default  reduce using rule 137 (arith_assgn_op)


State 106

  138 arith_assgn_op: MOD_ASSIGN .

    $default  reduce using rule 138 (arith_assgn_op)


State 107

  139 arith_assgn_op: LEFT_ASSIGN .

    $default  reduce using rule 139 (arith_assgn_op)


State 108

  140 arith_assgn_op: RIGHT_ASSIGN .

    $default  reduce using rule 140 (arith_assgn_op)


State 109

   79 assignment_block: ass_var_block ASSIGN . conditional_expr
   82                 | ass_var_block ASSIGN . assignment_block

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 24

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 163
    expr                    go to state 50
    conditional_expr        go to state 164
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 110

   86 expr: ass_var_block arith_binary_op . expr

    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 129
    expr                 go to state 165
    arith_unary_op       go to state 54
    bit_unary_op         go to state 55


State 111

   87 expr: ass_var_block arith_unary_op . expr

    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 129
    expr                 go to state 166
    arith_unary_op       go to state 54
    bit_unary_op         go to state 55


State 112

   88 expr: ass_var_block bit_binary_op . expr

    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 129
    expr                 go to state 167
    arith_unary_op       go to state 54
    bit_unary_op         go to state 55


State 113

   80 assignment_block: ass_var_block arith_assgn_op . conditional_expr
   83                 | ass_var_block arith_assgn_op . assignment_block

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 24

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 168
    expr                    go to state 50
    conditional_expr        go to state 169
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 114

   81 assignment_block: ass_var_block bit_assgn_op . conditional_expr
   84                 | ass_var_block bit_assgn_op . assignment_block

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 24

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 170
    expr                    go to state 50
    conditional_expr        go to state 171
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 115

   56 general_stmt: assignment_block TERMINATOR .

    $default  reduce using rule 56 (general_stmt)


State 116

  115 bit_condition_op: AND .

    $default  reduce using rule 115 (bit_condition_op)


State 117

  116 bit_condition_op: OR .

    $default  reduce using rule 116 (bit_condition_op)


State 118

  108 arith_condition_op: EQ .

    $default  reduce using rule 108 (arith_condition_op)


State 119

  109 arith_condition_op: NOTEQ .

    $default  reduce using rule 109 (arith_condition_op)


State 120

  110 arith_condition_op: GT .

    $default  reduce using rule 110 (arith_condition_op)


State 121

  111 arith_condition_op: LT .

    $default  reduce using rule 111 (arith_condition_op)


State 122

  112 arith_condition_op: GE .

    $default  reduce using rule 112 (arith_condition_op)


State 123

  113 arith_condition_op: LE .

    $default  reduce using rule 113 (arith_condition_op)


State 124

  114 arith_condition_op: LTGT .

    $default  reduce using rule 114 (arith_condition_op)


State 125

  103 conditional_expr: expr arith_condition_op . conditional_expr

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 129
    expr                    go to state 50
    conditional_expr        go to state 172
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 126

  104 conditional_expr: expr bit_condition_op . conditional_expr

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 129
    expr                    go to state 50
    conditional_expr        go to state 173
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 127

   57 general_stmt: conditional_expr TERMINATOR .

    $default  reduce using rule 57 (general_stmt)


State 128

   94 expr: OP . conditional_expr CP arith_binary_op expr
   95     | OP . conditional_expr CP bit_binary_op expr
   96     | OP . conditional_expr CP

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 129
    expr                    go to state 50
    conditional_expr        go to state 63
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 129

   86 expr: ass_var_block . arith_binary_op expr
   87     | ass_var_block . arith_unary_op expr
   88     | ass_var_block . bit_binary_op expr
   91     | ass_var_block .

    ADD        shift, and go to state 74
    SUB        shift, and go to state 75
    MULT       shift, and go to state 76
    DIV        shift, and go to state 77
    EXP        shift, and go to state 78
    MOD        shift, and go to state 79
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_AND    shift, and go to state 80
    BIN_OR     shift, and go to state 81
    BIN_XOR    shift, and go to state 82
    BIN_LEFT   shift, and go to state 83
    BIN_RIGHT  shift, and go to state 84

    $default  reduce using rule 91 (expr)

    arith_binary_op  go to state 110
    arith_unary_op   go to state 111
    bit_binary_op    go to state 112


State 130

  107 conditional_expr: bit_unary_condition_op expr .

    $default  reduce using rule 107 (conditional_expr)


State 131

   90 expr: arith_unary_op ass_var_block . expr

    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 129
    expr                 go to state 174
    arith_unary_op       go to state 54
    bit_unary_op         go to state 55


State 132

  101 expr: bit_unary_op const_block .

    $default  reduce using rule 101 (expr)


State 133

   89 expr: bit_unary_op ass_var_block .

    $default  reduce using rule 89 (expr)


State 134

   20 if_else_block: IF OP if_condition . CP OCB general_block CCB
   21              | IF OP if_condition . CP OCB general_block CCB ELSE OCB general_block CCB
   22              | IF OP if_condition . CP OCB general_block CCB ELSE if_else_block

    CP  shift, and go to state 175


State 135

   23 if_condition: conditional_expr .

    $default  reduce using rule 23 (if_condition)


State 136

   27 while_loop_block: WHILE OP while_condition . CP OCB general_block CCB

    CP  shift, and go to state 176


State 137

   28 while_condition: conditional_expr .

    $default  reduce using rule 28 (while_condition)


State 138

   29 do_while_loop_block: DO OCB general_block . CCB WHILE OP do_while_condition CP TERMINATOR

    CCB  shift, and go to state 177


State 139

   40 for_initialization: TERMINATOR .

    $default  reduce using rule 40 (for_initialization)


State 140

   85 assignment_block: OP . assignment_block CP

    VAR      shift, and go to state 19
    POINTER  shift, and go to state 20
    DREF     shift, and go to state 21
    OP       shift, and go to state 140

    var_block         go to state 47
    ass_var_block     go to state 178
    assignment_block  go to state 62


State 141

   31 for_loop_block: FOR OP for_initialization . for_condition TERMINATOR for_update CP OCB general_block CCB

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    for_condition           go to state 179
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 129
    expr                    go to state 50
    conditional_expr        go to state 180
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 142

   32 for_initialization: function_call_block . COMMA for_initialization
   39                   | function_call_block . TERMINATOR

    TERMINATOR  shift, and go to state 181
    COMMA       shift, and go to state 182


State 143

   34 for_initialization: ass_var_block . arith_unary_op COMMA for_initialization
   37                   | ass_var_block . arith_unary_op TERMINATOR
   79 assignment_block: ass_var_block . ASSIGN conditional_expr
   80                 | ass_var_block . arith_assgn_op conditional_expr
   81                 | ass_var_block . bit_assgn_op conditional_expr
   82                 | ass_var_block . ASSIGN assignment_block
   83                 | ass_var_block . arith_assgn_op assignment_block
   84                 | ass_var_block . bit_assgn_op assignment_block

    INC             shift, and go to state 14
    DEC             shift, and go to state 15
    BIN_AND_ASSIGN  shift, and go to state 99
    BIN_IOR_ASSIGN  shift, and go to state 100
    BIN_XOR_ASSIGN  shift, and go to state 101
    ADD_ASSIGN      shift, and go to state 102
    SUB_ASSIGN      shift, and go to state 103
    MULT_ASSIGN     shift, and go to state 104
    DIV_ASSIGN      shift, and go to state 105
    MOD_ASSIGN      shift, and go to state 106
    LEFT_ASSIGN     shift, and go to state 107
    RIGHT_ASSIGN    shift, and go to state 108
    ASSIGN          shift, and go to state 109

    arith_unary_op  go to state 183
    arith_assgn_op  go to state 113
    bit_assgn_op    go to state 114


State 144

   33 for_initialization: assignment_block . COMMA for_initialization
   36                   | assignment_block . TERMINATOR

    TERMINATOR  shift, and go to state 184
    COMMA       shift, and go to state 185


State 145

   35 for_initialization: arith_unary_op . ass_var_block COMMA for_initialization
   38                   | arith_unary_op . ass_var_block TERMINATOR

    VAR      shift, and go to state 19
    POINTER  shift, and go to state 20
    DREF     shift, and go to state 21

    var_block      go to state 47
    ass_var_block  go to state 186


State 146

   60 function_call_block: IDENT OP function_var_list . CP

    CP  shift, and go to state 187


State 147

   61 function_var_list: conditional_expr . COMMA function_var_list
   62                  | conditional_expr .

    COMMA  shift, and go to state 188

    $default  reduce using rule 62 (function_var_list)


State 148

   85 assignment_block: OP assignment_block CP .

    $default  reduce using rule 85 (assignment_block)


State 149

   94 expr: OP conditional_expr CP . arith_binary_op expr
   95     | OP conditional_expr CP . bit_binary_op expr
   96     | OP conditional_expr CP .

    ADD        shift, and go to state 74
    SUB        shift, and go to state 75
    MULT       shift, and go to state 76
    DIV        shift, and go to state 77
    EXP        shift, and go to state 78
    MOD        shift, and go to state 79
    BIN_AND    shift, and go to state 80
    BIN_OR     shift, and go to state 81
    BIN_XOR    shift, and go to state 82
    BIN_LEFT   shift, and go to state 83
    BIN_RIGHT  shift, and go to state 84

    $default  reduce using rule 96 (expr)

    arith_binary_op  go to state 189
    bit_binary_op    go to state 190


State 150

    7 defination_block: DEFINE IDENT const_block .

    $default  reduce using rule 7 (defination_block)


State 151

   51 function_def_block: FUNCTION IDENT OP . argument_list_block CP OCB general_block CCB

    INT     shift, and go to state 9
    LONG    shift, and go to state 10
    CHAR    shift, and go to state 11
    FLOAT   shift, and go to state 12
    DOUBLE  shift, and go to state 13

    $default  reduce using rule 54 (argument_list_block)

    argument_list_block  go to state 191
    data_type            go to state 192


State 152

   58 general_stmt: PRINT str GT . str TERMINATOR

    STRING  shift, and go to state 66

    str  go to state 193


State 153

    4 start_block: comment_block defination_block start_block .

    $default  reduce using rule 4 (start_block)


State 154

   13 block: comment_block function_def_block block .

    $default  reduce using rule 13 (block)


State 155

   97 expr: const_block arith_binary_op expr .

    $default  reduce using rule 97 (expr)


State 156

   98 expr: const_block bit_binary_op expr .

    $default  reduce using rule 98 (expr)


State 157

   99 expr: function_call_block arith_binary_op expr .

    $default  reduce using rule 99 (expr)


State 158

  100 expr: function_call_block bit_binary_op expr .

    $default  reduce using rule 100 (expr)


State 159

   75 array_block: var_block OB . conditional_expr CB

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 129
    expr                    go to state 50
    conditional_expr        go to state 194
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 160

   64 var_list: var_block COMMA . var_list

    VAR      shift, and go to state 19
    POINTER  shift, and go to state 20

    var_list     go to state 195
    var_block    go to state 96
    array_block  go to state 97


State 161

   66 var_list: array_block COMMA . var_list

    VAR      shift, and go to state 19
    POINTER  shift, and go to state 20

    var_list     go to state 196
    var_block    go to state 96
    array_block  go to state 97


State 162

   78 ass_var_block: var_block OB conditional_expr . CB

    CB  shift, and go to state 197


State 163

   82 assignment_block: ass_var_block ASSIGN assignment_block .

    $default  reduce using rule 82 (assignment_block)


State 164

   79 assignment_block: ass_var_block ASSIGN conditional_expr .

    $default  reduce using rule 79 (assignment_block)


State 165

   86 expr: ass_var_block arith_binary_op expr .

    $default  reduce using rule 86 (expr)


State 166

   87 expr: ass_var_block arith_unary_op expr .

    $default  reduce using rule 87 (expr)


State 167

   88 expr: ass_var_block bit_binary_op expr .

    $default  reduce using rule 88 (expr)


State 168

   83 assignment_block: ass_var_block arith_assgn_op assignment_block .

    $default  reduce using rule 83 (assignment_block)


State 169

   80 assignment_block: ass_var_block arith_assgn_op conditional_expr .

    $default  reduce using rule 80 (assignment_block)


State 170

   84 assignment_block: ass_var_block bit_assgn_op assignment_block .

    $default  reduce using rule 84 (assignment_block)


State 171

   81 assignment_block: ass_var_block bit_assgn_op conditional_expr .

    $default  reduce using rule 81 (assignment_block)


State 172

  103 conditional_expr: expr arith_condition_op conditional_expr .

    $default  reduce using rule 103 (conditional_expr)


State 173

  104 conditional_expr: expr bit_condition_op conditional_expr .

    $default  reduce using rule 104 (conditional_expr)


State 174

   90 expr: arith_unary_op ass_var_block expr .

    $default  reduce using rule 90 (expr)


State 175

   20 if_else_block: IF OP if_condition CP . OCB general_block CCB
   21              | IF OP if_condition CP . OCB general_block CCB ELSE OCB general_block CCB
   22              | IF OP if_condition CP . OCB general_block CCB ELSE if_else_block

    OCB  shift, and go to state 198


State 176

   27 while_loop_block: WHILE OP while_condition CP . OCB general_block CCB

    OCB  shift, and go to state 199


State 177

   29 do_while_loop_block: DO OCB general_block CCB . WHILE OP do_while_condition CP TERMINATOR

    WHILE  shift, and go to state 200


State 178

   79 assignment_block: ass_var_block . ASSIGN conditional_expr
   80                 | ass_var_block . arith_assgn_op conditional_expr
   81                 | ass_var_block . bit_assgn_op conditional_expr
   82                 | ass_var_block . ASSIGN assignment_block
   83                 | ass_var_block . arith_assgn_op assignment_block
   84                 | ass_var_block . bit_assgn_op assignment_block

    BIN_AND_ASSIGN  shift, and go to state 99
    BIN_IOR_ASSIGN  shift, and go to state 100
    BIN_XOR_ASSIGN  shift, and go to state 101
    ADD_ASSIGN      shift, and go to state 102
    SUB_ASSIGN      shift, and go to state 103
    MULT_ASSIGN     shift, and go to state 104
    DIV_ASSIGN      shift, and go to state 105
    MOD_ASSIGN      shift, and go to state 106
    LEFT_ASSIGN     shift, and go to state 107
    RIGHT_ASSIGN    shift, and go to state 108
    ASSIGN          shift, and go to state 109

    arith_assgn_op  go to state 113
    bit_assgn_op    go to state 114


State 179

   31 for_loop_block: FOR OP for_initialization for_condition . TERMINATOR for_update CP OCB general_block CCB

    TERMINATOR  shift, and go to state 201


State 180

   41 for_condition: conditional_expr .

    $default  reduce using rule 41 (for_condition)


State 181

   39 for_initialization: function_call_block TERMINATOR .

    $default  reduce using rule 39 (for_initialization)


State 182

   32 for_initialization: function_call_block COMMA . for_initialization

    INC         shift, and go to state 14
    DEC         shift, and go to state 15
    IDENT       shift, and go to state 18
    VAR         shift, and go to state 19
    POINTER     shift, and go to state 20
    DREF        shift, and go to state 21
    TERMINATOR  shift, and go to state 139
    OP          shift, and go to state 140

    for_initialization   go to state 202
    function_call_block  go to state 142
    var_block            go to state 47
    ass_var_block        go to state 143
    assignment_block     go to state 144
    arith_unary_op       go to state 145


State 183

   34 for_initialization: ass_var_block arith_unary_op . COMMA for_initialization
   37                   | ass_var_block arith_unary_op . TERMINATOR

    TERMINATOR  shift, and go to state 203
    COMMA       shift, and go to state 204


State 184

   36 for_initialization: assignment_block TERMINATOR .

    $default  reduce using rule 36 (for_initialization)


State 185

   33 for_initialization: assignment_block COMMA . for_initialization

    INC         shift, and go to state 14
    DEC         shift, and go to state 15
    IDENT       shift, and go to state 18
    VAR         shift, and go to state 19
    POINTER     shift, and go to state 20
    DREF        shift, and go to state 21
    TERMINATOR  shift, and go to state 139
    OP          shift, and go to state 140

    for_initialization   go to state 205
    function_call_block  go to state 142
    var_block            go to state 47
    ass_var_block        go to state 143
    assignment_block     go to state 144
    arith_unary_op       go to state 145


State 186

   35 for_initialization: arith_unary_op ass_var_block . COMMA for_initialization
   38                   | arith_unary_op ass_var_block . TERMINATOR

    TERMINATOR  shift, and go to state 206
    COMMA       shift, and go to state 207


State 187

   60 function_call_block: IDENT OP function_var_list CP .

    $default  reduce using rule 60 (function_call_block)


State 188

   61 function_var_list: conditional_expr COMMA . function_var_list

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    function_var_list       go to state 208
    var_block               go to state 47
    ass_var_block           go to state 129
    expr                    go to state 50
    conditional_expr        go to state 147
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 189

   94 expr: OP conditional_expr CP arith_binary_op . expr

    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 129
    expr                 go to state 209
    arith_unary_op       go to state 54
    bit_unary_op         go to state 55


State 190

   95 expr: OP conditional_expr CP bit_binary_op . expr

    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 129
    expr                 go to state 210
    arith_unary_op       go to state 54
    bit_unary_op         go to state 55


State 191

   51 function_def_block: FUNCTION IDENT OP argument_list_block . CP OCB general_block CCB

    CP  shift, and go to state 211


State 192

   52 argument_list_block: data_type . var_block COMMA argument_list_block
   53                    | data_type . var_block

    VAR      shift, and go to state 19
    POINTER  shift, and go to state 20

    var_block  go to state 212


State 193

   58 general_stmt: PRINT str GT str . TERMINATOR

    TERMINATOR  shift, and go to state 213


State 194

   75 array_block: var_block OB conditional_expr . CB

    CB  shift, and go to state 214


State 195

   64 var_list: var_block COMMA var_list .

    $default  reduce using rule 64 (var_list)


State 196

   66 var_list: array_block COMMA var_list .

    $default  reduce using rule 66 (var_list)


State 197

   78 ass_var_block: var_block OB conditional_expr CB .

    $default  reduce using rule 78 (ass_var_block)


State 198

   20 if_else_block: IF OP if_condition CP OCB . general_block CCB
   21              | IF OP if_condition CP OCB . general_block CCB ELSE OCB general_block CCB
   22              | IF OP if_condition CP OCB . general_block CCB ELSE if_else_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    PRINT          shift, and go to state 29

    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    comment_block           go to state 69
    const_block             go to state 34
    general_block           go to state 215
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 199

   27 while_loop_block: WHILE OP while_condition CP OCB . general_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    PRINT          shift, and go to state 29

    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    comment_block           go to state 69
    const_block             go to state 34
    general_block           go to state 216
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 200

   29 do_while_loop_block: DO OCB general_block CCB WHILE . OP do_while_condition CP TERMINATOR

    OP  shift, and go to state 217


State 201

   31 for_loop_block: FOR OP for_initialization for_condition TERMINATOR . for_update CP OCB general_block CCB

    INC      shift, and go to state 14
    DEC      shift, and go to state 15
    IDENT    shift, and go to state 18
    VAR      shift, and go to state 19
    POINTER  shift, and go to state 20
    DREF     shift, and go to state 21
    OP       shift, and go to state 140

    $default  reduce using rule 50 (for_update)

    for_update           go to state 218
    function_call_block  go to state 219
    var_block            go to state 47
    ass_var_block        go to state 220
    assignment_block     go to state 221
    arith_unary_op       go to state 222


State 202

   32 for_initialization: function_call_block COMMA for_initialization .

    $default  reduce using rule 32 (for_initialization)


State 203

   37 for_initialization: ass_var_block arith_unary_op TERMINATOR .

    $default  reduce using rule 37 (for_initialization)


State 204

   34 for_initialization: ass_var_block arith_unary_op COMMA . for_initialization

    INC         shift, and go to state 14
    DEC         shift, and go to state 15
    IDENT       shift, and go to state 18
    VAR         shift, and go to state 19
    POINTER     shift, and go to state 20
    DREF        shift, and go to state 21
    TERMINATOR  shift, and go to state 139
    OP          shift, and go to state 140

    for_initialization   go to state 223
    function_call_block  go to state 142
    var_block            go to state 47
    ass_var_block        go to state 143
    assignment_block     go to state 144
    arith_unary_op       go to state 145


State 205

   33 for_initialization: assignment_block COMMA for_initialization .

    $default  reduce using rule 33 (for_initialization)


State 206

   38 for_initialization: arith_unary_op ass_var_block TERMINATOR .

    $default  reduce using rule 38 (for_initialization)


State 207

   35 for_initialization: arith_unary_op ass_var_block COMMA . for_initialization

    INC         shift, and go to state 14
    DEC         shift, and go to state 15
    IDENT       shift, and go to state 18
    VAR         shift, and go to state 19
    POINTER     shift, and go to state 20
    DREF        shift, and go to state 21
    TERMINATOR  shift, and go to state 139
    OP          shift, and go to state 140

    for_initialization   go to state 224
    function_call_block  go to state 142
    var_block            go to state 47
    ass_var_block        go to state 143
    assignment_block     go to state 144
    arith_unary_op       go to state 145


State 208

   61 function_var_list: conditional_expr COMMA function_var_list .

    $default  reduce using rule 61 (function_var_list)


State 209

   94 expr: OP conditional_expr CP arith_binary_op expr .

    $default  reduce using rule 94 (expr)


State 210

   95 expr: OP conditional_expr CP bit_binary_op expr .

    $default  reduce using rule 95 (expr)


State 211

   51 function_def_block: FUNCTION IDENT OP argument_list_block CP . OCB general_block CCB

    OCB  shift, and go to state 225


State 212

   52 argument_list_block: data_type var_block . COMMA argument_list_block
   53                    | data_type var_block .

    COMMA  shift, and go to state 226

    $default  reduce using rule 53 (argument_list_block)


State 213

   58 general_stmt: PRINT str GT str TERMINATOR .

    $default  reduce using rule 58 (general_stmt)


State 214

   75 array_block: var_block OB conditional_expr CB .

    $default  reduce using rule 75 (array_block)


State 215

   20 if_else_block: IF OP if_condition CP OCB general_block . CCB
   21              | IF OP if_condition CP OCB general_block . CCB ELSE OCB general_block CCB
   22              | IF OP if_condition CP OCB general_block . CCB ELSE if_else_block

    CCB  shift, and go to state 227


State 216

   27 while_loop_block: WHILE OP while_condition CP OCB general_block . CCB

    CCB  shift, and go to state 228


State 217

   29 do_while_loop_block: DO OCB general_block CCB WHILE OP . do_while_condition CP TERMINATOR

    NOT        shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    INC        shift, and go to state 14
    DEC        shift, and go to state 15
    BIN_NOT    shift, and go to state 16
    NUM        shift, and go to state 17
    IDENT      shift, and go to state 18
    VAR        shift, and go to state 19
    POINTER    shift, and go to state 20
    DREF       shift, and go to state 21
    STRING     shift, and go to state 22
    CHARACTER  shift, and go to state 23
    OP         shift, and go to state 128

    $default  reduce using rule 102 (expr)

    const_block             go to state 34
    do_while_condition      go to state 229
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 129
    expr                    go to state 50
    conditional_expr        go to state 230
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 218

   31 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update . CP OCB general_block CCB

    CP  shift, and go to state 231


State 219

   42 for_update: function_call_block . COMMA for_update
   46           | function_call_block .

    COMMA  shift, and go to state 232

    $default  reduce using rule 46 (for_update)


State 220

   44 for_update: ass_var_block . arith_unary_op COMMA for_update
   48           | ass_var_block . arith_unary_op
   79 assignment_block: ass_var_block . ASSIGN conditional_expr
   80                 | ass_var_block . arith_assgn_op conditional_expr
   81                 | ass_var_block . bit_assgn_op conditional_expr
   82                 | ass_var_block . ASSIGN assignment_block
   83                 | ass_var_block . arith_assgn_op assignment_block
   84                 | ass_var_block . bit_assgn_op assignment_block

    INC             shift, and go to state 14
    DEC             shift, and go to state 15
    BIN_AND_ASSIGN  shift, and go to state 99
    BIN_IOR_ASSIGN  shift, and go to state 100
    BIN_XOR_ASSIGN  shift, and go to state 101
    ADD_ASSIGN      shift, and go to state 102
    SUB_ASSIGN      shift, and go to state 103
    MULT_ASSIGN     shift, and go to state 104
    DIV_ASSIGN      shift, and go to state 105
    MOD_ASSIGN      shift, and go to state 106
    LEFT_ASSIGN     shift, and go to state 107
    RIGHT_ASSIGN    shift, and go to state 108
    ASSIGN          shift, and go to state 109

    arith_unary_op  go to state 233
    arith_assgn_op  go to state 113
    bit_assgn_op    go to state 114


State 221

   43 for_update: assignment_block . COMMA for_update
   47           | assignment_block .

    COMMA  shift, and go to state 234

    $default  reduce using rule 47 (for_update)


State 222

   45 for_update: arith_unary_op . ass_var_block COMMA for_update
   49           | arith_unary_op . ass_var_block

    VAR      shift, and go to state 19
    POINTER  shift, and go to state 20
    DREF     shift, and go to state 21

    var_block      go to state 47
    ass_var_block  go to state 235


State 223

   34 for_initialization: ass_var_block arith_unary_op COMMA for_initialization .

    $default  reduce using rule 34 (for_initialization)


State 224

   35 for_initialization: arith_unary_op ass_var_block COMMA for_initialization .

    $default  reduce using rule 35 (for_initialization)


State 225

   51 function_def_block: FUNCTION IDENT OP argument_list_block CP OCB . general_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    PRINT          shift, and go to state 29

    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    comment_block           go to state 69
    const_block             go to state 34
    general_block           go to state 236
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 226

   52 argument_list_block: data_type var_block COMMA . argument_list_block

    INT     shift, and go to state 9
    LONG    shift, and go to state 10
    CHAR    shift, and go to state 11
    FLOAT   shift, and go to state 12
    DOUBLE  shift, and go to state 13

    $default  reduce using rule 54 (argument_list_block)

    argument_list_block  go to state 237
    data_type            go to state 192


State 227

   20 if_else_block: IF OP if_condition CP OCB general_block CCB .
   21              | IF OP if_condition CP OCB general_block CCB . ELSE OCB general_block CCB
   22              | IF OP if_condition CP OCB general_block CCB . ELSE if_else_block

    ELSE  shift, and go to state 238

    $default  reduce using rule 20 (if_else_block)


State 228

   27 while_loop_block: WHILE OP while_condition CP OCB general_block CCB .

    $default  reduce using rule 27 (while_loop_block)


State 229

   29 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition . CP TERMINATOR

    CP  shift, and go to state 239


State 230

   30 do_while_condition: conditional_expr .

    $default  reduce using rule 30 (do_while_condition)


State 231

   31 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP . OCB general_block CCB

    OCB  shift, and go to state 240


State 232

   42 for_update: function_call_block COMMA . for_update

    INC      shift, and go to state 14
    DEC      shift, and go to state 15
    IDENT    shift, and go to state 18
    VAR      shift, and go to state 19
    POINTER  shift, and go to state 20
    DREF     shift, and go to state 21
    OP       shift, and go to state 140

    $default  reduce using rule 50 (for_update)

    for_update           go to state 241
    function_call_block  go to state 219
    var_block            go to state 47
    ass_var_block        go to state 220
    assignment_block     go to state 221
    arith_unary_op       go to state 222


State 233

   44 for_update: ass_var_block arith_unary_op . COMMA for_update
   48           | ass_var_block arith_unary_op .

    COMMA  shift, and go to state 242

    $default  reduce using rule 48 (for_update)


State 234

   43 for_update: assignment_block COMMA . for_update

    INC      shift, and go to state 14
    DEC      shift, and go to state 15
    IDENT    shift, and go to state 18
    VAR      shift, and go to state 19
    POINTER  shift, and go to state 20
    DREF     shift, and go to state 21
    OP       shift, and go to state 140

    $default  reduce using rule 50 (for_update)

    for_update           go to state 243
    function_call_block  go to state 219
    var_block            go to state 47
    ass_var_block        go to state 220
    assignment_block     go to state 221
    arith_unary_op       go to state 222


State 235

   45 for_update: arith_unary_op ass_var_block . COMMA for_update
   49           | arith_unary_op ass_var_block .

    COMMA  shift, and go to state 244

    $default  reduce using rule 49 (for_update)


State 236

   51 function_def_block: FUNCTION IDENT OP argument_list_block CP OCB general_block . CCB

    CCB  shift, and go to state 245


State 237

   52 argument_list_block: data_type var_block COMMA argument_list_block .

    $default  reduce using rule 52 (argument_list_block)


State 238

   21 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE . OCB general_block CCB
   22              | IF OP if_condition CP OCB general_block CCB ELSE . if_else_block

    IF   shift, and go to state 2
    OCB  shift, and go to state 246

    if_else_block  go to state 247


State 239

   29 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition CP . TERMINATOR

    TERMINATOR  shift, and go to state 248


State 240

   31 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB . general_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    PRINT          shift, and go to state 29

    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    comment_block           go to state 69
    const_block             go to state 34
    general_block           go to state 249
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 241

   42 for_update: function_call_block COMMA for_update .

    $default  reduce using rule 42 (for_update)


State 242

   44 for_update: ass_var_block arith_unary_op COMMA . for_update

    INC      shift, and go to state 14
    DEC      shift, and go to state 15
    IDENT    shift, and go to state 18
    VAR      shift, and go to state 19
    POINTER  shift, and go to state 20
    DREF     shift, and go to state 21
    OP       shift, and go to state 140

    $default  reduce using rule 50 (for_update)

    for_update           go to state 250
    function_call_block  go to state 219
    var_block            go to state 47
    ass_var_block        go to state 220
    assignment_block     go to state 221
    arith_unary_op       go to state 222


State 243

   43 for_update: assignment_block COMMA for_update .

    $default  reduce using rule 43 (for_update)


State 244

   45 for_update: arith_unary_op ass_var_block COMMA . for_update

    INC      shift, and go to state 14
    DEC      shift, and go to state 15
    IDENT    shift, and go to state 18
    VAR      shift, and go to state 19
    POINTER  shift, and go to state 20
    DREF     shift, and go to state 21
    OP       shift, and go to state 140

    $default  reduce using rule 50 (for_update)

    for_update           go to state 251
    function_call_block  go to state 219
    var_block            go to state 47
    ass_var_block        go to state 220
    assignment_block     go to state 221
    arith_unary_op       go to state 222


State 245

   51 function_def_block: FUNCTION IDENT OP argument_list_block CP OCB general_block CCB .

    $default  reduce using rule 51 (function_def_block)


State 246

   21 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE OCB . general_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    TRUE           shift, and go to state 7
    FALSE          shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    INC            shift, and go to state 14
    DEC            shift, and go to state 15
    BIN_NOT        shift, and go to state 16
    NUM            shift, and go to state 17
    IDENT          shift, and go to state 18
    VAR            shift, and go to state 19
    POINTER        shift, and go to state 20
    DREF           shift, and go to state 21
    STRING         shift, and go to state 22
    CHARACTER      shift, and go to state 23
    OP             shift, and go to state 24
    COMMENT        shift, and go to state 25
    MULTI_COMMENT  shift, and go to state 26
    PRINT          shift, and go to state 29

    AND         reduce using rule 102 (expr)
    OR          reduce using rule 102 (expr)
    TERMINATOR  reduce using rule 102 (expr)
    CCB         reduce using rule 19 (general_block)
    EQ          reduce using rule 102 (expr)
    NOTEQ       reduce using rule 102 (expr)
    GT          reduce using rule 102 (expr)
    LT          reduce using rule 102 (expr)
    GE          reduce using rule 102 (expr)
    LE          reduce using rule 102 (expr)
    LTGT        reduce using rule 102 (expr)

    comment_block           go to state 69
    const_block             go to state 34
    general_block           go to state 252
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    arith_unary_op          go to state 54
    bit_unary_op            go to state 55


State 247

   22 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE if_else_block .

    $default  reduce using rule 22 (if_else_block)


State 248

   29 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition CP TERMINATOR .

    $default  reduce using rule 29 (do_while_loop_block)


State 249

   31 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB general_block . CCB

    CCB  shift, and go to state 253


State 250

   44 for_update: ass_var_block arith_unary_op COMMA for_update .

    $default  reduce using rule 44 (for_update)


State 251

   45 for_update: arith_unary_op ass_var_block COMMA for_update .

    $default  reduce using rule 45 (for_update)


State 252

   21 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE OCB general_block . CCB

    CCB  shift, and go to state 254


State 253

   31 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB .

    $default  reduce using rule 31 (for_loop_block)


State 254

   21 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE OCB general_block CCB .

    $default  reduce using rule 21 (if_else_block)
