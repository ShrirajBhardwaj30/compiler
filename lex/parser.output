Grammar

    0 $accept: super_block $end

    1 super_block: start_block

    2 start_block: defination_block start_block
    3            | block
    4            | comment_block defination_block start_block

    5 comment_block: COMMENT
    6              | MULTI_COMMENT

    7 defination_block: DEFINE IDENT const_block
    8                 | IFDEF IDENT OCB start_block CCB
    9                 | IFNDEF IDENT OCB start_block CCB

   10 const_block: STRING
   11            | NUM
   12            | CHARACTER

   13 block: function_def_block block
   14      | general_block
   15      | comment_block function_def_block block

   16 general_block: general_stmt general_block
   17              | loop_block general_block
   18              | if_else_block general_block
   19              | comment_block general_block
   20              | error start_block
   21              | %empty

   22 if_else_block: IF OP if_condition CP OCB general_block CCB
   23              | IF OP if_condition CP OCB general_block CCB ELSE OCB general_block CCB
   24              | IF OP if_condition CP OCB general_block CCB ELSE if_else_block

   25 if_condition: conditional_expr

   26 loop_block: for_loop_block
   27           | while_loop_block
   28           | do_while_loop_block

   29 while_loop_block: WHILE OP while_condition CP OCB general_block CCB

   30 while_condition: conditional_expr

   31 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition CP TERMINATOR

   32 do_while_condition: conditional_expr

   33 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB

   34 for_initialization: function_call_block COMMA for_initialization
   35                   | assignment_block COMMA for_initialization
   36                   | ass_var_block arith_unary_op COMMA for_initialization
   37                   | arith_unary_op ass_var_block COMMA for_initialization
   38                   | assignment_block TERMINATOR
   39                   | ass_var_block arith_unary_op TERMINATOR
   40                   | arith_unary_op ass_var_block TERMINATOR
   41                   | function_call_block TERMINATOR
   42                   | TERMINATOR

   43 for_condition: conditional_expr

   44 for_update: function_call_block COMMA for_update
   45           | assignment_block COMMA for_update
   46           | ass_var_block arith_unary_op COMMA for_update
   47           | arith_unary_op ass_var_block COMMA for_update
   48           | function_call_block
   49           | assignment_block
   50           | ass_var_block arith_unary_op
   51           | arith_unary_op ass_var_block
   52           | %empty

   53 function_def_block: FUNCTION ident OP argument_list_block CP OCB general_block CCB

   54 ident: IDENT

   55 argument_list_block: data_type var_block COMMA argument_list_block
   56                    | data_type var_block
   57                    | %empty

   58 general_stmt: declaration_block TERMINATOR
   59             | assignment_block TERMINATOR
   60             | conditional_expr TERMINATOR
   61             | PRINT str GT str TERMINATOR

   62 str: STRING

   63 function_call_block: IDENT OP function_var_list CP

   64 function_var_list: conditional_expr COMMA function_var_list
   65                  | conditional_expr

   66 declaration_block: data_type var_list

   67 var_list: var_block COMMA var_list
   68         | var_block
   69         | array_block COMMA var_list
   70         | array_block

   71 data_type: INT
   72          | FLOAT
   73          | DOUBLE
   74          | CHAR
   75          | LONG

   76 var_block: VAR
   77          | POINTER

   78 array_block: var_block OB num CB

   79 num: NUM

   80 ass_var_block: var_block
   81              | DREF
   82              | var_block OB conditional_expr CB

   83 assignment_block: ass_var_block ASSIGN conditional_expr
   84                 | ass_var_block arith_assgn_op conditional_expr
   85                 | ass_var_block bit_assgn_op conditional_expr
   86                 | ass_var_block ASSIGN assignment_block
   87                 | ass_var_block arith_assgn_op assignment_block
   88                 | ass_var_block bit_assgn_op assignment_block
   89                 | OP assignment_block CP

   90 expr: ass_var_block arith_binary_op expr
   91     | ass_var_block bit_binary_op expr
   92     | bit_unary_op ass_var_block
   93     | ass_var_block
   94     | const_block
   95     | function_call_block
   96     | OP conditional_expr CP arith_binary_op expr
   97     | OP conditional_expr CP bit_binary_op expr
   98     | OP conditional_expr CP
   99     | const_block arith_binary_op expr
  100     | const_block bit_binary_op expr
  101     | function_call_block arith_binary_op expr
  102     | function_call_block bit_binary_op expr
  103     | bit_unary_op const_block
  104     | %empty

  105 conditional_expr: expr arith_condition_op conditional_expr
  106                 | expr bit_condition_op conditional_expr
  107                 | expr
  108                 | fixed_condition
  109                 | bit_unary_condition_op expr

  110 arith_condition_op: EQ
  111                   | NOTEQ
  112                   | GT
  113                   | LT
  114                   | GE
  115                   | LE
  116                   | LTGT

  117 bit_condition_op: AND
  118                 | OR

  119 bit_unary_condition_op: NOT_1

  120 fixed_condition: TRUE_1
  121                | FALSE_1

  122 arith_binary_op: ADD
  123                | SUB
  124                | MULT
  125                | DIV
  126                | EXP
  127                | MOD

  128 arith_unary_op: INC
  129               | DEC

  130 bit_binary_op: BIN_AND
  131              | BIN_OR
  132              | BIN_XOR
  133              | BIN_LEFT
  134              | BIN_RIGHT

  135 bit_unary_op: BIN_NOT

  136 arith_assgn_op: ADD_ASSIGN
  137               | SUB_ASSIGN
  138               | MULT_ASSIGN
  139               | DIV_ASSIGN
  140               | MOD_ASSIGN
  141               | LEFT_ASSIGN
  142               | RIGHT_ASSIGN

  143 bit_assgn_op: BIN_AND_ASSIGN
  144             | BIN_IOR_ASSIGN
  145             | BIN_XOR_ASSIGN


Terminals, with rules where they appear

$end (0) 0
error (256) 20
IF (258) 22 23 24
ELSE (259) 23 24
WHILE (260) 29 31
DO (261) 31
FOR (262) 33
AND (263) 117
OR (264) 118
NOT_1 (265) 119
TRUE_1 (266) 120
FALSE_1 (267) 121
INT (268) 71
LONG (269) 75
CHAR (270) 74
FLOAT (271) 72
DOUBLE (272) 73
ADD (273) 122
SUB (274) 123
MULT (275) 124
DIV (276) 125
EXP (277) 126
MOD (278) 127
INC (279) 128
DEC (280) 129
BIN_NOT (281) 135
BIN_AND (282) 130
BIN_OR (283) 131
BIN_XOR (284) 132
BIN_LEFT (285) 133
BIN_RIGHT (286) 134
BIN_AND_ASSIGN (287) 143
BIN_IOR_ASSIGN (288) 144
BIN_XOR_ASSIGN (289) 145
ADD_ASSIGN (290) 136
SUB_ASSIGN (291) 137
MULT_ASSIGN (292) 138
DIV_ASSIGN (293) 139
MOD_ASSIGN (294) 140
LEFT_ASSIGN (295) 141
RIGHT_ASSIGN (296) 142
NUM (297) 11 79
IDENT (298) 7 8 9 54 63
VAR (299) 76
POINTER (300) 77
DREF (301) 81
ASSIGN (302) 83 86
TERMINATOR (303) 31 33 38 39 40 41 42 58 59 60 61
STRING (304) 10 62
CHARACTER (305) 12
OP (306) 22 23 24 29 31 33 53 63 89 96 97 98
CP (307) 22 23 24 29 31 33 53 63 89 96 97 98
CB (308) 78 82
OB (309) 78 82
OCB (310) 8 9 22 23 24 29 31 33 53
CCB (311) 8 9 22 23 24 29 31 33 53
EQ (312) 110
NOTEQ (313) 111
GT (314) 61 112
LT (315) 113
GE (316) 114
LE (317) 115
COMMENT (318) 5
MULTI_COMMENT (319) 6
DEFINE (320) 7
IFDEF (321) 8
IFNDEF (322) 9
FUNCTION (323) 53
COMMA (324) 34 35 36 37 44 45 46 47 55 64 67 69
PRINT (325) 61
LTGT (326) 116


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
super_block (73)
    on left: 1, on right: 0
start_block (74)
    on left: 2 3 4, on right: 1 2 4 8 9 20
comment_block (75)
    on left: 5 6, on right: 4 15 19
defination_block (76)
    on left: 7 8 9, on right: 2 4
const_block (77)
    on left: 10 11 12, on right: 7 94 99 100 103
block (78)
    on left: 13 14 15, on right: 3 13 15
general_block (79)
    on left: 16 17 18 19 20 21, on right: 14 16 17 18 19 22 23 24 29
    31 33 53
if_else_block (80)
    on left: 22 23 24, on right: 18 24
if_condition (81)
    on left: 25, on right: 22 23 24
loop_block (82)
    on left: 26 27 28, on right: 17
while_loop_block (83)
    on left: 29, on right: 27
while_condition (84)
    on left: 30, on right: 29
do_while_loop_block (85)
    on left: 31, on right: 28
do_while_condition (86)
    on left: 32, on right: 31
for_loop_block (87)
    on left: 33, on right: 26
for_initialization (88)
    on left: 34 35 36 37 38 39 40 41 42, on right: 33 34 35 36 37
for_condition (89)
    on left: 43, on right: 33
for_update (90)
    on left: 44 45 46 47 48 49 50 51 52, on right: 33 44 45 46 47
function_def_block (91)
    on left: 53, on right: 13 15
ident (92)
    on left: 54, on right: 53
argument_list_block (93)
    on left: 55 56 57, on right: 53 55
general_stmt (94)
    on left: 58 59 60 61, on right: 16
str (95)
    on left: 62, on right: 61
function_call_block (96)
    on left: 63, on right: 34 41 44 48 95 101 102
function_var_list (97)
    on left: 64 65, on right: 63 64
declaration_block (98)
    on left: 66, on right: 58
var_list (99)
    on left: 67 68 69 70, on right: 66 67 69
data_type (100)
    on left: 71 72 73 74 75, on right: 55 56 66
var_block (101)
    on left: 76 77, on right: 55 56 67 68 78 80 82
array_block (102)
    on left: 78, on right: 69 70
num (103)
    on left: 79, on right: 78
ass_var_block (104)
    on left: 80 81 82, on right: 36 37 39 40 46 47 50 51 83 84 85 86
    87 88 90 91 92 93
assignment_block (105)
    on left: 83 84 85 86 87 88 89, on right: 35 38 45 49 59 86 87 88
    89
expr (106)
    on left: 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104, on right:
    90 91 96 97 99 100 101 102 105 106 107 109
conditional_expr (107)
    on left: 105 106 107 108 109, on right: 25 30 32 43 60 64 65 82
    83 84 85 96 97 98 105 106
arith_condition_op (108)
    on left: 110 111 112 113 114 115 116, on right: 105
bit_condition_op (109)
    on left: 117 118, on right: 106
bit_unary_condition_op (110)
    on left: 119, on right: 109
fixed_condition (111)
    on left: 120 121, on right: 108
arith_binary_op (112)
    on left: 122 123 124 125 126 127, on right: 90 96 99 101
arith_unary_op (113)
    on left: 128 129, on right: 36 37 39 40 46 47 50 51
bit_binary_op (114)
    on left: 130 131 132 133 134, on right: 91 97 100 102
bit_unary_op (115)
    on left: 135, on right: 92 103
arith_assgn_op (116)
    on left: 136 137 138 139 140 141 142, on right: 84 87
bit_assgn_op (117)
    on left: 143 144 145, on right: 85 88


State 0

    0 $accept: . super_block $end

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    DEFINE         shift, and go to state 25
    IFDEF          shift, and go to state 26
    IFNDEF         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    super_block             go to state 30
    start_block             go to state 31
    comment_block           go to state 32
    defination_block        go to state 33
    const_block             go to state 34
    block                   go to state 35
    general_block           go to state 36
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 42
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 1

   20 general_block: error . start_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    DEFINE         shift, and go to state 25
    IFDEF          shift, and go to state 26
    IFNDEF         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    start_block             go to state 55
    comment_block           go to state 32
    defination_block        go to state 33
    const_block             go to state 34
    block                   go to state 35
    general_block           go to state 36
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 42
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 2

   22 if_else_block: IF . OP if_condition CP OCB general_block CCB
   23              | IF . OP if_condition CP OCB general_block CCB ELSE OCB general_block CCB
   24              | IF . OP if_condition CP OCB general_block CCB ELSE if_else_block

    OP  shift, and go to state 56


State 3

   29 while_loop_block: WHILE . OP while_condition CP OCB general_block CCB

    OP  shift, and go to state 57


State 4

   31 do_while_loop_block: DO . OCB general_block CCB WHILE OP do_while_condition CP TERMINATOR

    OCB  shift, and go to state 58


State 5

   33 for_loop_block: FOR . OP for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB

    OP  shift, and go to state 59


State 6

  119 bit_unary_condition_op: NOT_1 .

    $default  reduce using rule 119 (bit_unary_condition_op)


State 7

  120 fixed_condition: TRUE_1 .

    $default  reduce using rule 120 (fixed_condition)


State 8

  121 fixed_condition: FALSE_1 .

    $default  reduce using rule 121 (fixed_condition)


State 9

   71 data_type: INT .

    $default  reduce using rule 71 (data_type)


State 10

   75 data_type: LONG .

    $default  reduce using rule 75 (data_type)


State 11

   74 data_type: CHAR .

    $default  reduce using rule 74 (data_type)


State 12

   72 data_type: FLOAT .

    $default  reduce using rule 72 (data_type)


State 13

   73 data_type: DOUBLE .

    $default  reduce using rule 73 (data_type)


State 14

  135 bit_unary_op: BIN_NOT .

    $default  reduce using rule 135 (bit_unary_op)


State 15

   11 const_block: NUM .

    $default  reduce using rule 11 (const_block)


State 16

   63 function_call_block: IDENT . OP function_var_list CP

    OP  shift, and go to state 60


State 17

   76 var_block: VAR .

    $default  reduce using rule 76 (var_block)


State 18

   77 var_block: POINTER .

    $default  reduce using rule 77 (var_block)


State 19

   81 ass_var_block: DREF .

    $default  reduce using rule 81 (ass_var_block)


State 20

   10 const_block: STRING .

    $default  reduce using rule 10 (const_block)


State 21

   12 const_block: CHARACTER .

    $default  reduce using rule 12 (const_block)


State 22

   89 assignment_block: OP . assignment_block CP
   96 expr: OP . conditional_expr CP arith_binary_op expr
   97     | OP . conditional_expr CP bit_binary_op expr
   98     | OP . conditional_expr CP

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 22

    $default  reduce using rule 104 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 61
    expr                    go to state 50
    conditional_expr        go to state 62
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 23

    5 comment_block: COMMENT .

    $default  reduce using rule 5 (comment_block)


State 24

    6 comment_block: MULTI_COMMENT .

    $default  reduce using rule 6 (comment_block)


State 25

    7 defination_block: DEFINE . IDENT const_block

    IDENT  shift, and go to state 63


State 26

    8 defination_block: IFDEF . IDENT OCB start_block CCB

    IDENT  shift, and go to state 64


State 27

    9 defination_block: IFNDEF . IDENT OCB start_block CCB

    IDENT  shift, and go to state 65


State 28

   53 function_def_block: FUNCTION . ident OP argument_list_block CP OCB general_block CCB

    IDENT  shift, and go to state 66

    ident  go to state 67


State 29

   61 general_stmt: PRINT . str GT str TERMINATOR

    STRING  shift, and go to state 68

    str  go to state 69


State 30

    0 $accept: super_block . $end

    $end  shift, and go to state 70


State 31

    1 super_block: start_block .

    $default  reduce using rule 1 (super_block)


State 32

    4 start_block: comment_block . defination_block start_block
   15 block: comment_block . function_def_block block
   19 general_block: comment_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    DEFINE         shift, and go to state 25
    IFDEF          shift, and go to state 26
    IFNDEF         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    comment_block           go to state 71
    defination_block        go to state 72
    const_block             go to state 34
    general_block           go to state 73
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 74
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 33

    2 start_block: defination_block . start_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    DEFINE         shift, and go to state 25
    IFDEF          shift, and go to state 26
    IFNDEF         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    start_block             go to state 75
    comment_block           go to state 32
    defination_block        go to state 33
    const_block             go to state 34
    block                   go to state 35
    general_block           go to state 36
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 42
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 34

   94 expr: const_block .
   99     | const_block . arith_binary_op expr
  100     | const_block . bit_binary_op expr

    ADD        shift, and go to state 76
    SUB        shift, and go to state 77
    MULT       shift, and go to state 78
    DIV        shift, and go to state 79
    EXP        shift, and go to state 80
    MOD        shift, and go to state 81
    BIN_AND    shift, and go to state 82
    BIN_OR     shift, and go to state 83
    BIN_XOR    shift, and go to state 84
    BIN_LEFT   shift, and go to state 85
    BIN_RIGHT  shift, and go to state 86

    $default  reduce using rule 94 (expr)

    arith_binary_op  go to state 87
    bit_binary_op    go to state 88


State 35

    3 start_block: block .

    $default  reduce using rule 3 (start_block)


State 36

   14 block: general_block .

    $default  reduce using rule 14 (block)


State 37

   18 general_block: if_else_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    comment_block           go to state 71
    const_block             go to state 34
    general_block           go to state 89
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 38

   17 general_block: loop_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    comment_block           go to state 71
    const_block             go to state 34
    general_block           go to state 90
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 39

   27 loop_block: while_loop_block .

    $default  reduce using rule 27 (loop_block)


State 40

   28 loop_block: do_while_loop_block .

    $default  reduce using rule 28 (loop_block)


State 41

   26 loop_block: for_loop_block .

    $default  reduce using rule 26 (loop_block)


State 42

   13 block: function_def_block . block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    comment_block           go to state 91
    const_block             go to state 34
    block                   go to state 92
    general_block           go to state 36
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 42
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 43

   16 general_block: general_stmt . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    comment_block           go to state 71
    const_block             go to state 34
    general_block           go to state 93
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 44

   95 expr: function_call_block .
  101     | function_call_block . arith_binary_op expr
  102     | function_call_block . bit_binary_op expr

    ADD        shift, and go to state 76
    SUB        shift, and go to state 77
    MULT       shift, and go to state 78
    DIV        shift, and go to state 79
    EXP        shift, and go to state 80
    MOD        shift, and go to state 81
    BIN_AND    shift, and go to state 82
    BIN_OR     shift, and go to state 83
    BIN_XOR    shift, and go to state 84
    BIN_LEFT   shift, and go to state 85
    BIN_RIGHT  shift, and go to state 86

    $default  reduce using rule 95 (expr)

    arith_binary_op  go to state 94
    bit_binary_op    go to state 95


State 45

   58 general_stmt: declaration_block . TERMINATOR

    TERMINATOR  shift, and go to state 96


State 46

   66 declaration_block: data_type . var_list

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18

    var_list     go to state 97
    var_block    go to state 98
    array_block  go to state 99


State 47

   80 ass_var_block: var_block .
   82              | var_block . OB conditional_expr CB

    OB  shift, and go to state 100

    $default  reduce using rule 80 (ass_var_block)


State 48

   83 assignment_block: ass_var_block . ASSIGN conditional_expr
   84                 | ass_var_block . arith_assgn_op conditional_expr
   85                 | ass_var_block . bit_assgn_op conditional_expr
   86                 | ass_var_block . ASSIGN assignment_block
   87                 | ass_var_block . arith_assgn_op assignment_block
   88                 | ass_var_block . bit_assgn_op assignment_block
   90 expr: ass_var_block . arith_binary_op expr
   91     | ass_var_block . bit_binary_op expr
   93     | ass_var_block .

    ADD             shift, and go to state 76
    SUB             shift, and go to state 77
    MULT            shift, and go to state 78
    DIV             shift, and go to state 79
    EXP             shift, and go to state 80
    MOD             shift, and go to state 81
    BIN_AND         shift, and go to state 82
    BIN_OR          shift, and go to state 83
    BIN_XOR         shift, and go to state 84
    BIN_LEFT        shift, and go to state 85
    BIN_RIGHT       shift, and go to state 86
    BIN_AND_ASSIGN  shift, and go to state 101
    BIN_IOR_ASSIGN  shift, and go to state 102
    BIN_XOR_ASSIGN  shift, and go to state 103
    ADD_ASSIGN      shift, and go to state 104
    SUB_ASSIGN      shift, and go to state 105
    MULT_ASSIGN     shift, and go to state 106
    DIV_ASSIGN      shift, and go to state 107
    MOD_ASSIGN      shift, and go to state 108
    LEFT_ASSIGN     shift, and go to state 109
    RIGHT_ASSIGN    shift, and go to state 110
    ASSIGN          shift, and go to state 111

    $default  reduce using rule 93 (expr)

    arith_binary_op  go to state 112
    bit_binary_op    go to state 113
    arith_assgn_op   go to state 114
    bit_assgn_op     go to state 115


State 49

   59 general_stmt: assignment_block . TERMINATOR

    TERMINATOR  shift, and go to state 116


State 50

  105 conditional_expr: expr . arith_condition_op conditional_expr
  106                 | expr . bit_condition_op conditional_expr
  107                 | expr .

    AND    shift, and go to state 117
    OR     shift, and go to state 118
    EQ     shift, and go to state 119
    NOTEQ  shift, and go to state 120
    GT     shift, and go to state 121
    LT     shift, and go to state 122
    GE     shift, and go to state 123
    LE     shift, and go to state 124
    LTGT   shift, and go to state 125

    $default  reduce using rule 107 (conditional_expr)

    arith_condition_op  go to state 126
    bit_condition_op    go to state 127


State 51

   60 general_stmt: conditional_expr . TERMINATOR

    TERMINATOR  shift, and go to state 128


State 52

  109 conditional_expr: bit_unary_condition_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 130
    expr                 go to state 131
    bit_unary_op         go to state 54


State 53

  108 conditional_expr: fixed_condition .

    $default  reduce using rule 108 (conditional_expr)


State 54

   92 expr: bit_unary_op . ass_var_block
  103     | bit_unary_op . const_block

    NUM        shift, and go to state 15
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21

    const_block    go to state 132
    var_block      go to state 47
    ass_var_block  go to state 133


State 55

   20 general_block: error start_block .

    $default  reduce using rule 20 (general_block)


State 56

   22 if_else_block: IF OP . if_condition CP OCB general_block CCB
   23              | IF OP . if_condition CP OCB general_block CCB ELSE OCB general_block CCB
   24              | IF OP . if_condition CP OCB general_block CCB ELSE if_else_block

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block             go to state 34
    if_condition            go to state 134
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 130
    expr                    go to state 50
    conditional_expr        go to state 135
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 57

   29 while_loop_block: WHILE OP . while_condition CP OCB general_block CCB

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block             go to state 34
    while_condition         go to state 136
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 130
    expr                    go to state 50
    conditional_expr        go to state 137
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 58

   31 do_while_loop_block: DO OCB . general_block CCB WHILE OP do_while_condition CP TERMINATOR

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29

    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    comment_block           go to state 71
    const_block             go to state 34
    general_block           go to state 138
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 59

   33 for_loop_block: FOR OP . for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB

    INC         shift, and go to state 139
    DEC         shift, and go to state 140
    IDENT       shift, and go to state 16
    VAR         shift, and go to state 17
    POINTER     shift, and go to state 18
    DREF        shift, and go to state 19
    TERMINATOR  shift, and go to state 141
    OP          shift, and go to state 142

    for_initialization   go to state 143
    function_call_block  go to state 144
    var_block            go to state 47
    ass_var_block        go to state 145
    assignment_block     go to state 146
    arith_unary_op       go to state 147


State 60

   63 function_call_block: IDENT OP . function_var_list CP

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    function_var_list       go to state 148
    var_block               go to state 47
    ass_var_block           go to state 130
    expr                    go to state 50
    conditional_expr        go to state 149
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 61

   89 assignment_block: OP assignment_block . CP

    CP  shift, and go to state 150


State 62

   96 expr: OP conditional_expr . CP arith_binary_op expr
   97     | OP conditional_expr . CP bit_binary_op expr
   98     | OP conditional_expr . CP

    CP  shift, and go to state 151


State 63

    7 defination_block: DEFINE IDENT . const_block

    NUM        shift, and go to state 15
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21

    const_block  go to state 152


State 64

    8 defination_block: IFDEF IDENT . OCB start_block CCB

    OCB  shift, and go to state 153


State 65

    9 defination_block: IFNDEF IDENT . OCB start_block CCB

    OCB  shift, and go to state 154


State 66

   54 ident: IDENT .

    $default  reduce using rule 54 (ident)


State 67

   53 function_def_block: FUNCTION ident . OP argument_list_block CP OCB general_block CCB

    OP  shift, and go to state 155


State 68

   62 str: STRING .

    $default  reduce using rule 62 (str)


State 69

   61 general_stmt: PRINT str . GT str TERMINATOR

    GT  shift, and go to state 156


State 70

    0 $accept: super_block $end .

    $default  accept


State 71

   19 general_block: comment_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    comment_block           go to state 71
    const_block             go to state 34
    general_block           go to state 73
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 72

    4 start_block: comment_block defination_block . start_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    DEFINE         shift, and go to state 25
    IFDEF          shift, and go to state 26
    IFNDEF         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    start_block             go to state 157
    comment_block           go to state 32
    defination_block        go to state 33
    const_block             go to state 34
    block                   go to state 35
    general_block           go to state 36
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 42
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 73

   19 general_block: comment_block general_block .

    $default  reduce using rule 19 (general_block)


State 74

   15 block: comment_block function_def_block . block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    comment_block           go to state 91
    const_block             go to state 34
    block                   go to state 158
    general_block           go to state 36
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 42
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 75

    2 start_block: defination_block start_block .

    $default  reduce using rule 2 (start_block)


State 76

  122 arith_binary_op: ADD .

    $default  reduce using rule 122 (arith_binary_op)


State 77

  123 arith_binary_op: SUB .

    $default  reduce using rule 123 (arith_binary_op)


State 78

  124 arith_binary_op: MULT .

    $default  reduce using rule 124 (arith_binary_op)


State 79

  125 arith_binary_op: DIV .

    $default  reduce using rule 125 (arith_binary_op)


State 80

  126 arith_binary_op: EXP .

    $default  reduce using rule 126 (arith_binary_op)


State 81

  127 arith_binary_op: MOD .

    $default  reduce using rule 127 (arith_binary_op)


State 82

  130 bit_binary_op: BIN_AND .

    $default  reduce using rule 130 (bit_binary_op)


State 83

  131 bit_binary_op: BIN_OR .

    $default  reduce using rule 131 (bit_binary_op)


State 84

  132 bit_binary_op: BIN_XOR .

    $default  reduce using rule 132 (bit_binary_op)


State 85

  133 bit_binary_op: BIN_LEFT .

    $default  reduce using rule 133 (bit_binary_op)


State 86

  134 bit_binary_op: BIN_RIGHT .

    $default  reduce using rule 134 (bit_binary_op)


State 87

   99 expr: const_block arith_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 130
    expr                 go to state 159
    bit_unary_op         go to state 54


State 88

  100 expr: const_block bit_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 130
    expr                 go to state 160
    bit_unary_op         go to state 54


State 89

   18 general_block: if_else_block general_block .

    $default  reduce using rule 18 (general_block)


State 90

   17 general_block: loop_block general_block .

    $default  reduce using rule 17 (general_block)


State 91

   15 block: comment_block . function_def_block block
   19 general_block: comment_block . general_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    $end        reduce using rule 21 (general_block)
    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    comment_block           go to state 71
    const_block             go to state 34
    general_block           go to state 73
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 74
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 92

   13 block: function_def_block block .

    $default  reduce using rule 13 (block)


State 93

   16 general_block: general_stmt general_block .

    $default  reduce using rule 16 (general_block)


State 94

  101 expr: function_call_block arith_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 130
    expr                 go to state 161
    bit_unary_op         go to state 54


State 95

  102 expr: function_call_block bit_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 130
    expr                 go to state 162
    bit_unary_op         go to state 54


State 96

   58 general_stmt: declaration_block TERMINATOR .

    $default  reduce using rule 58 (general_stmt)


State 97

   66 declaration_block: data_type var_list .

    $default  reduce using rule 66 (declaration_block)


State 98

   67 var_list: var_block . COMMA var_list
   68         | var_block .
   78 array_block: var_block . OB num CB

    OB     shift, and go to state 163
    COMMA  shift, and go to state 164

    $default  reduce using rule 68 (var_list)


State 99

   69 var_list: array_block . COMMA var_list
   70         | array_block .

    COMMA  shift, and go to state 165

    $default  reduce using rule 70 (var_list)


State 100

   82 ass_var_block: var_block OB . conditional_expr CB

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 130
    expr                    go to state 50
    conditional_expr        go to state 166
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 101

  143 bit_assgn_op: BIN_AND_ASSIGN .

    $default  reduce using rule 143 (bit_assgn_op)


State 102

  144 bit_assgn_op: BIN_IOR_ASSIGN .

    $default  reduce using rule 144 (bit_assgn_op)


State 103

  145 bit_assgn_op: BIN_XOR_ASSIGN .

    $default  reduce using rule 145 (bit_assgn_op)


State 104

  136 arith_assgn_op: ADD_ASSIGN .

    $default  reduce using rule 136 (arith_assgn_op)


State 105

  137 arith_assgn_op: SUB_ASSIGN .

    $default  reduce using rule 137 (arith_assgn_op)


State 106

  138 arith_assgn_op: MULT_ASSIGN .

    $default  reduce using rule 138 (arith_assgn_op)


State 107

  139 arith_assgn_op: DIV_ASSIGN .

    $default  reduce using rule 139 (arith_assgn_op)


State 108

  140 arith_assgn_op: MOD_ASSIGN .

    $default  reduce using rule 140 (arith_assgn_op)


State 109

  141 arith_assgn_op: LEFT_ASSIGN .

    $default  reduce using rule 141 (arith_assgn_op)


State 110

  142 arith_assgn_op: RIGHT_ASSIGN .

    $default  reduce using rule 142 (arith_assgn_op)


State 111

   83 assignment_block: ass_var_block ASSIGN . conditional_expr
   86                 | ass_var_block ASSIGN . assignment_block

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 22

    $default  reduce using rule 104 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 167
    expr                    go to state 50
    conditional_expr        go to state 168
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 112

   90 expr: ass_var_block arith_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 130
    expr                 go to state 169
    bit_unary_op         go to state 54


State 113

   91 expr: ass_var_block bit_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 130
    expr                 go to state 170
    bit_unary_op         go to state 54


State 114

   84 assignment_block: ass_var_block arith_assgn_op . conditional_expr
   87                 | ass_var_block arith_assgn_op . assignment_block

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 22

    $default  reduce using rule 104 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 171
    expr                    go to state 50
    conditional_expr        go to state 172
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 115

   85 assignment_block: ass_var_block bit_assgn_op . conditional_expr
   88                 | ass_var_block bit_assgn_op . assignment_block

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 22

    $default  reduce using rule 104 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 173
    expr                    go to state 50
    conditional_expr        go to state 174
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 116

   59 general_stmt: assignment_block TERMINATOR .

    $default  reduce using rule 59 (general_stmt)


State 117

  117 bit_condition_op: AND .

    $default  reduce using rule 117 (bit_condition_op)


State 118

  118 bit_condition_op: OR .

    $default  reduce using rule 118 (bit_condition_op)


State 119

  110 arith_condition_op: EQ .

    $default  reduce using rule 110 (arith_condition_op)


State 120

  111 arith_condition_op: NOTEQ .

    $default  reduce using rule 111 (arith_condition_op)


State 121

  112 arith_condition_op: GT .

    $default  reduce using rule 112 (arith_condition_op)


State 122

  113 arith_condition_op: LT .

    $default  reduce using rule 113 (arith_condition_op)


State 123

  114 arith_condition_op: GE .

    $default  reduce using rule 114 (arith_condition_op)


State 124

  115 arith_condition_op: LE .

    $default  reduce using rule 115 (arith_condition_op)


State 125

  116 arith_condition_op: LTGT .

    $default  reduce using rule 116 (arith_condition_op)


State 126

  105 conditional_expr: expr arith_condition_op . conditional_expr

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 130
    expr                    go to state 50
    conditional_expr        go to state 175
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 127

  106 conditional_expr: expr bit_condition_op . conditional_expr

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 130
    expr                    go to state 50
    conditional_expr        go to state 176
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 128

   60 general_stmt: conditional_expr TERMINATOR .

    $default  reduce using rule 60 (general_stmt)


State 129

   96 expr: OP . conditional_expr CP arith_binary_op expr
   97     | OP . conditional_expr CP bit_binary_op expr
   98     | OP . conditional_expr CP

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 130
    expr                    go to state 50
    conditional_expr        go to state 62
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 130

   90 expr: ass_var_block . arith_binary_op expr
   91     | ass_var_block . bit_binary_op expr
   93     | ass_var_block .

    ADD        shift, and go to state 76
    SUB        shift, and go to state 77
    MULT       shift, and go to state 78
    DIV        shift, and go to state 79
    EXP        shift, and go to state 80
    MOD        shift, and go to state 81
    BIN_AND    shift, and go to state 82
    BIN_OR     shift, and go to state 83
    BIN_XOR    shift, and go to state 84
    BIN_LEFT   shift, and go to state 85
    BIN_RIGHT  shift, and go to state 86

    $default  reduce using rule 93 (expr)

    arith_binary_op  go to state 112
    bit_binary_op    go to state 113


State 131

  109 conditional_expr: bit_unary_condition_op expr .

    $default  reduce using rule 109 (conditional_expr)


State 132

  103 expr: bit_unary_op const_block .

    $default  reduce using rule 103 (expr)


State 133

   92 expr: bit_unary_op ass_var_block .

    $default  reduce using rule 92 (expr)


State 134

   22 if_else_block: IF OP if_condition . CP OCB general_block CCB
   23              | IF OP if_condition . CP OCB general_block CCB ELSE OCB general_block CCB
   24              | IF OP if_condition . CP OCB general_block CCB ELSE if_else_block

    CP  shift, and go to state 177


State 135

   25 if_condition: conditional_expr .

    $default  reduce using rule 25 (if_condition)


State 136

   29 while_loop_block: WHILE OP while_condition . CP OCB general_block CCB

    CP  shift, and go to state 178


State 137

   30 while_condition: conditional_expr .

    $default  reduce using rule 30 (while_condition)


State 138

   31 do_while_loop_block: DO OCB general_block . CCB WHILE OP do_while_condition CP TERMINATOR

    CCB  shift, and go to state 179


State 139

  128 arith_unary_op: INC .

    $default  reduce using rule 128 (arith_unary_op)


State 140

  129 arith_unary_op: DEC .

    $default  reduce using rule 129 (arith_unary_op)


State 141

   42 for_initialization: TERMINATOR .

    $default  reduce using rule 42 (for_initialization)


State 142

   89 assignment_block: OP . assignment_block CP

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19
    OP       shift, and go to state 142

    var_block         go to state 47
    ass_var_block     go to state 180
    assignment_block  go to state 61


State 143

   33 for_loop_block: FOR OP for_initialization . for_condition TERMINATOR for_update CP OCB general_block CCB

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block             go to state 34
    for_condition           go to state 181
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 130
    expr                    go to state 50
    conditional_expr        go to state 182
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 144

   34 for_initialization: function_call_block . COMMA for_initialization
   41                   | function_call_block . TERMINATOR

    TERMINATOR  shift, and go to state 183
    COMMA       shift, and go to state 184


State 145

   36 for_initialization: ass_var_block . arith_unary_op COMMA for_initialization
   39                   | ass_var_block . arith_unary_op TERMINATOR
   83 assignment_block: ass_var_block . ASSIGN conditional_expr
   84                 | ass_var_block . arith_assgn_op conditional_expr
   85                 | ass_var_block . bit_assgn_op conditional_expr
   86                 | ass_var_block . ASSIGN assignment_block
   87                 | ass_var_block . arith_assgn_op assignment_block
   88                 | ass_var_block . bit_assgn_op assignment_block

    INC             shift, and go to state 139
    DEC             shift, and go to state 140
    BIN_AND_ASSIGN  shift, and go to state 101
    BIN_IOR_ASSIGN  shift, and go to state 102
    BIN_XOR_ASSIGN  shift, and go to state 103
    ADD_ASSIGN      shift, and go to state 104
    SUB_ASSIGN      shift, and go to state 105
    MULT_ASSIGN     shift, and go to state 106
    DIV_ASSIGN      shift, and go to state 107
    MOD_ASSIGN      shift, and go to state 108
    LEFT_ASSIGN     shift, and go to state 109
    RIGHT_ASSIGN    shift, and go to state 110
    ASSIGN          shift, and go to state 111

    arith_unary_op  go to state 185
    arith_assgn_op  go to state 114
    bit_assgn_op    go to state 115


State 146

   35 for_initialization: assignment_block . COMMA for_initialization
   38                   | assignment_block . TERMINATOR

    TERMINATOR  shift, and go to state 186
    COMMA       shift, and go to state 187


State 147

   37 for_initialization: arith_unary_op . ass_var_block COMMA for_initialization
   40                   | arith_unary_op . ass_var_block TERMINATOR

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19

    var_block      go to state 47
    ass_var_block  go to state 188


State 148

   63 function_call_block: IDENT OP function_var_list . CP

    CP  shift, and go to state 189


State 149

   64 function_var_list: conditional_expr . COMMA function_var_list
   65                  | conditional_expr .

    COMMA  shift, and go to state 190

    $default  reduce using rule 65 (function_var_list)


State 150

   89 assignment_block: OP assignment_block CP .

    $default  reduce using rule 89 (assignment_block)


State 151

   96 expr: OP conditional_expr CP . arith_binary_op expr
   97     | OP conditional_expr CP . bit_binary_op expr
   98     | OP conditional_expr CP .

    ADD        shift, and go to state 76
    SUB        shift, and go to state 77
    MULT       shift, and go to state 78
    DIV        shift, and go to state 79
    EXP        shift, and go to state 80
    MOD        shift, and go to state 81
    BIN_AND    shift, and go to state 82
    BIN_OR     shift, and go to state 83
    BIN_XOR    shift, and go to state 84
    BIN_LEFT   shift, and go to state 85
    BIN_RIGHT  shift, and go to state 86

    $default  reduce using rule 98 (expr)

    arith_binary_op  go to state 191
    bit_binary_op    go to state 192


State 152

    7 defination_block: DEFINE IDENT const_block .

    $default  reduce using rule 7 (defination_block)


State 153

    8 defination_block: IFDEF IDENT OCB . start_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    DEFINE         shift, and go to state 25
    IFDEF          shift, and go to state 26
    IFNDEF         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    start_block             go to state 193
    comment_block           go to state 32
    defination_block        go to state 33
    const_block             go to state 34
    block                   go to state 35
    general_block           go to state 36
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 42
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 154

    9 defination_block: IFNDEF IDENT OCB . start_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    DEFINE         shift, and go to state 25
    IFDEF          shift, and go to state 26
    IFNDEF         shift, and go to state 27
    FUNCTION       shift, and go to state 28
    PRINT          shift, and go to state 29

    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    start_block             go to state 194
    comment_block           go to state 32
    defination_block        go to state 33
    const_block             go to state 34
    block                   go to state 35
    general_block           go to state 36
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    function_def_block      go to state 42
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 155

   53 function_def_block: FUNCTION ident OP . argument_list_block CP OCB general_block CCB

    INT     shift, and go to state 9
    LONG    shift, and go to state 10
    CHAR    shift, and go to state 11
    FLOAT   shift, and go to state 12
    DOUBLE  shift, and go to state 13

    $default  reduce using rule 57 (argument_list_block)

    argument_list_block  go to state 195
    data_type            go to state 196


State 156

   61 general_stmt: PRINT str GT . str TERMINATOR

    STRING  shift, and go to state 68

    str  go to state 197


State 157

    4 start_block: comment_block defination_block start_block .

    $default  reduce using rule 4 (start_block)


State 158

   15 block: comment_block function_def_block block .

    $default  reduce using rule 15 (block)


State 159

   99 expr: const_block arith_binary_op expr .

    $default  reduce using rule 99 (expr)


State 160

  100 expr: const_block bit_binary_op expr .

    $default  reduce using rule 100 (expr)


State 161

  101 expr: function_call_block arith_binary_op expr .

    $default  reduce using rule 101 (expr)


State 162

  102 expr: function_call_block bit_binary_op expr .

    $default  reduce using rule 102 (expr)


State 163

   78 array_block: var_block OB . num CB

    NUM  shift, and go to state 198

    num  go to state 199


State 164

   67 var_list: var_block COMMA . var_list

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18

    var_list     go to state 200
    var_block    go to state 98
    array_block  go to state 99


State 165

   69 var_list: array_block COMMA . var_list

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18

    var_list     go to state 201
    var_block    go to state 98
    array_block  go to state 99


State 166

   82 ass_var_block: var_block OB conditional_expr . CB

    CB  shift, and go to state 202


State 167

   86 assignment_block: ass_var_block ASSIGN assignment_block .

    $default  reduce using rule 86 (assignment_block)


State 168

   83 assignment_block: ass_var_block ASSIGN conditional_expr .

    $default  reduce using rule 83 (assignment_block)


State 169

   90 expr: ass_var_block arith_binary_op expr .

    $default  reduce using rule 90 (expr)


State 170

   91 expr: ass_var_block bit_binary_op expr .

    $default  reduce using rule 91 (expr)


State 171

   87 assignment_block: ass_var_block arith_assgn_op assignment_block .

    $default  reduce using rule 87 (assignment_block)


State 172

   84 assignment_block: ass_var_block arith_assgn_op conditional_expr .

    $default  reduce using rule 84 (assignment_block)


State 173

   88 assignment_block: ass_var_block bit_assgn_op assignment_block .

    $default  reduce using rule 88 (assignment_block)


State 174

   85 assignment_block: ass_var_block bit_assgn_op conditional_expr .

    $default  reduce using rule 85 (assignment_block)


State 175

  105 conditional_expr: expr arith_condition_op conditional_expr .

    $default  reduce using rule 105 (conditional_expr)


State 176

  106 conditional_expr: expr bit_condition_op conditional_expr .

    $default  reduce using rule 106 (conditional_expr)


State 177

   22 if_else_block: IF OP if_condition CP . OCB general_block CCB
   23              | IF OP if_condition CP . OCB general_block CCB ELSE OCB general_block CCB
   24              | IF OP if_condition CP . OCB general_block CCB ELSE if_else_block

    OCB  shift, and go to state 203


State 178

   29 while_loop_block: WHILE OP while_condition CP . OCB general_block CCB

    OCB  shift, and go to state 204


State 179

   31 do_while_loop_block: DO OCB general_block CCB . WHILE OP do_while_condition CP TERMINATOR

    WHILE  shift, and go to state 205


State 180

   83 assignment_block: ass_var_block . ASSIGN conditional_expr
   84                 | ass_var_block . arith_assgn_op conditional_expr
   85                 | ass_var_block . bit_assgn_op conditional_expr
   86                 | ass_var_block . ASSIGN assignment_block
   87                 | ass_var_block . arith_assgn_op assignment_block
   88                 | ass_var_block . bit_assgn_op assignment_block

    BIN_AND_ASSIGN  shift, and go to state 101
    BIN_IOR_ASSIGN  shift, and go to state 102
    BIN_XOR_ASSIGN  shift, and go to state 103
    ADD_ASSIGN      shift, and go to state 104
    SUB_ASSIGN      shift, and go to state 105
    MULT_ASSIGN     shift, and go to state 106
    DIV_ASSIGN      shift, and go to state 107
    MOD_ASSIGN      shift, and go to state 108
    LEFT_ASSIGN     shift, and go to state 109
    RIGHT_ASSIGN    shift, and go to state 110
    ASSIGN          shift, and go to state 111

    arith_assgn_op  go to state 114
    bit_assgn_op    go to state 115


State 181

   33 for_loop_block: FOR OP for_initialization for_condition . TERMINATOR for_update CP OCB general_block CCB

    TERMINATOR  shift, and go to state 206


State 182

   43 for_condition: conditional_expr .

    $default  reduce using rule 43 (for_condition)


State 183

   41 for_initialization: function_call_block TERMINATOR .

    $default  reduce using rule 41 (for_initialization)


State 184

   34 for_initialization: function_call_block COMMA . for_initialization

    INC         shift, and go to state 139
    DEC         shift, and go to state 140
    IDENT       shift, and go to state 16
    VAR         shift, and go to state 17
    POINTER     shift, and go to state 18
    DREF        shift, and go to state 19
    TERMINATOR  shift, and go to state 141
    OP          shift, and go to state 142

    for_initialization   go to state 207
    function_call_block  go to state 144
    var_block            go to state 47
    ass_var_block        go to state 145
    assignment_block     go to state 146
    arith_unary_op       go to state 147


State 185

   36 for_initialization: ass_var_block arith_unary_op . COMMA for_initialization
   39                   | ass_var_block arith_unary_op . TERMINATOR

    TERMINATOR  shift, and go to state 208
    COMMA       shift, and go to state 209


State 186

   38 for_initialization: assignment_block TERMINATOR .

    $default  reduce using rule 38 (for_initialization)


State 187

   35 for_initialization: assignment_block COMMA . for_initialization

    INC         shift, and go to state 139
    DEC         shift, and go to state 140
    IDENT       shift, and go to state 16
    VAR         shift, and go to state 17
    POINTER     shift, and go to state 18
    DREF        shift, and go to state 19
    TERMINATOR  shift, and go to state 141
    OP          shift, and go to state 142

    for_initialization   go to state 210
    function_call_block  go to state 144
    var_block            go to state 47
    ass_var_block        go to state 145
    assignment_block     go to state 146
    arith_unary_op       go to state 147


State 188

   37 for_initialization: arith_unary_op ass_var_block . COMMA for_initialization
   40                   | arith_unary_op ass_var_block . TERMINATOR

    TERMINATOR  shift, and go to state 211
    COMMA       shift, and go to state 212


State 189

   63 function_call_block: IDENT OP function_var_list CP .

    $default  reduce using rule 63 (function_call_block)


State 190

   64 function_var_list: conditional_expr COMMA . function_var_list

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block             go to state 34
    function_call_block     go to state 44
    function_var_list       go to state 213
    var_block               go to state 47
    ass_var_block           go to state 130
    expr                    go to state 50
    conditional_expr        go to state 149
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 191

   96 expr: OP conditional_expr CP arith_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 130
    expr                 go to state 214
    bit_unary_op         go to state 54


State 192

   97 expr: OP conditional_expr CP bit_binary_op . expr

    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block          go to state 34
    function_call_block  go to state 44
    var_block            go to state 47
    ass_var_block        go to state 130
    expr                 go to state 215
    bit_unary_op         go to state 54


State 193

    8 defination_block: IFDEF IDENT OCB start_block . CCB

    CCB  shift, and go to state 216


State 194

    9 defination_block: IFNDEF IDENT OCB start_block . CCB

    CCB  shift, and go to state 217


State 195

   53 function_def_block: FUNCTION ident OP argument_list_block . CP OCB general_block CCB

    CP  shift, and go to state 218


State 196

   55 argument_list_block: data_type . var_block COMMA argument_list_block
   56                    | data_type . var_block

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18

    var_block  go to state 219


State 197

   61 general_stmt: PRINT str GT str . TERMINATOR

    TERMINATOR  shift, and go to state 220


State 198

   79 num: NUM .

    $default  reduce using rule 79 (num)


State 199

   78 array_block: var_block OB num . CB

    CB  shift, and go to state 221


State 200

   67 var_list: var_block COMMA var_list .

    $default  reduce using rule 67 (var_list)


State 201

   69 var_list: array_block COMMA var_list .

    $default  reduce using rule 69 (var_list)


State 202

   82 ass_var_block: var_block OB conditional_expr CB .

    $default  reduce using rule 82 (ass_var_block)


State 203

   22 if_else_block: IF OP if_condition CP OCB . general_block CCB
   23              | IF OP if_condition CP OCB . general_block CCB ELSE OCB general_block CCB
   24              | IF OP if_condition CP OCB . general_block CCB ELSE if_else_block

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29

    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    comment_block           go to state 71
    const_block             go to state 34
    general_block           go to state 222
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 204

   29 while_loop_block: WHILE OP while_condition CP OCB . general_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29

    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    comment_block           go to state 71
    const_block             go to state 34
    general_block           go to state 223
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 205

   31 do_while_loop_block: DO OCB general_block CCB WHILE . OP do_while_condition CP TERMINATOR

    OP  shift, and go to state 224


State 206

   33 for_loop_block: FOR OP for_initialization for_condition TERMINATOR . for_update CP OCB general_block CCB

    INC      shift, and go to state 139
    DEC      shift, and go to state 140
    IDENT    shift, and go to state 16
    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19
    OP       shift, and go to state 142

    $default  reduce using rule 52 (for_update)

    for_update           go to state 225
    function_call_block  go to state 226
    var_block            go to state 47
    ass_var_block        go to state 227
    assignment_block     go to state 228
    arith_unary_op       go to state 229


State 207

   34 for_initialization: function_call_block COMMA for_initialization .

    $default  reduce using rule 34 (for_initialization)


State 208

   39 for_initialization: ass_var_block arith_unary_op TERMINATOR .

    $default  reduce using rule 39 (for_initialization)


State 209

   36 for_initialization: ass_var_block arith_unary_op COMMA . for_initialization

    INC         shift, and go to state 139
    DEC         shift, and go to state 140
    IDENT       shift, and go to state 16
    VAR         shift, and go to state 17
    POINTER     shift, and go to state 18
    DREF        shift, and go to state 19
    TERMINATOR  shift, and go to state 141
    OP          shift, and go to state 142

    for_initialization   go to state 230
    function_call_block  go to state 144
    var_block            go to state 47
    ass_var_block        go to state 145
    assignment_block     go to state 146
    arith_unary_op       go to state 147


State 210

   35 for_initialization: assignment_block COMMA for_initialization .

    $default  reduce using rule 35 (for_initialization)


State 211

   40 for_initialization: arith_unary_op ass_var_block TERMINATOR .

    $default  reduce using rule 40 (for_initialization)


State 212

   37 for_initialization: arith_unary_op ass_var_block COMMA . for_initialization

    INC         shift, and go to state 139
    DEC         shift, and go to state 140
    IDENT       shift, and go to state 16
    VAR         shift, and go to state 17
    POINTER     shift, and go to state 18
    DREF        shift, and go to state 19
    TERMINATOR  shift, and go to state 141
    OP          shift, and go to state 142

    for_initialization   go to state 231
    function_call_block  go to state 144
    var_block            go to state 47
    ass_var_block        go to state 145
    assignment_block     go to state 146
    arith_unary_op       go to state 147


State 213

   64 function_var_list: conditional_expr COMMA function_var_list .

    $default  reduce using rule 64 (function_var_list)


State 214

   96 expr: OP conditional_expr CP arith_binary_op expr .

    $default  reduce using rule 96 (expr)


State 215

   97 expr: OP conditional_expr CP bit_binary_op expr .

    $default  reduce using rule 97 (expr)


State 216

    8 defination_block: IFDEF IDENT OCB start_block CCB .

    $default  reduce using rule 8 (defination_block)


State 217

    9 defination_block: IFNDEF IDENT OCB start_block CCB .

    $default  reduce using rule 9 (defination_block)


State 218

   53 function_def_block: FUNCTION ident OP argument_list_block CP . OCB general_block CCB

    OCB  shift, and go to state 232


State 219

   55 argument_list_block: data_type var_block . COMMA argument_list_block
   56                    | data_type var_block .

    COMMA  shift, and go to state 233

    $default  reduce using rule 56 (argument_list_block)


State 220

   61 general_stmt: PRINT str GT str TERMINATOR .

    $default  reduce using rule 61 (general_stmt)


State 221

   78 array_block: var_block OB num CB .

    $default  reduce using rule 78 (array_block)


State 222

   22 if_else_block: IF OP if_condition CP OCB general_block . CCB
   23              | IF OP if_condition CP OCB general_block . CCB ELSE OCB general_block CCB
   24              | IF OP if_condition CP OCB general_block . CCB ELSE if_else_block

    CCB  shift, and go to state 234


State 223

   29 while_loop_block: WHILE OP while_condition CP OCB general_block . CCB

    CCB  shift, and go to state 235


State 224

   31 do_while_loop_block: DO OCB general_block CCB WHILE OP . do_while_condition CP TERMINATOR

    NOT_1      shift, and go to state 6
    TRUE_1     shift, and go to state 7
    FALSE_1    shift, and go to state 8
    BIN_NOT    shift, and go to state 14
    NUM        shift, and go to state 15
    IDENT      shift, and go to state 16
    VAR        shift, and go to state 17
    POINTER    shift, and go to state 18
    DREF       shift, and go to state 19
    STRING     shift, and go to state 20
    CHARACTER  shift, and go to state 21
    OP         shift, and go to state 129

    $default  reduce using rule 104 (expr)

    const_block             go to state 34
    do_while_condition      go to state 236
    function_call_block     go to state 44
    var_block               go to state 47
    ass_var_block           go to state 130
    expr                    go to state 50
    conditional_expr        go to state 237
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 225

   33 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update . CP OCB general_block CCB

    CP  shift, and go to state 238


State 226

   44 for_update: function_call_block . COMMA for_update
   48           | function_call_block .

    COMMA  shift, and go to state 239

    $default  reduce using rule 48 (for_update)


State 227

   46 for_update: ass_var_block . arith_unary_op COMMA for_update
   50           | ass_var_block . arith_unary_op
   83 assignment_block: ass_var_block . ASSIGN conditional_expr
   84                 | ass_var_block . arith_assgn_op conditional_expr
   85                 | ass_var_block . bit_assgn_op conditional_expr
   86                 | ass_var_block . ASSIGN assignment_block
   87                 | ass_var_block . arith_assgn_op assignment_block
   88                 | ass_var_block . bit_assgn_op assignment_block

    INC             shift, and go to state 139
    DEC             shift, and go to state 140
    BIN_AND_ASSIGN  shift, and go to state 101
    BIN_IOR_ASSIGN  shift, and go to state 102
    BIN_XOR_ASSIGN  shift, and go to state 103
    ADD_ASSIGN      shift, and go to state 104
    SUB_ASSIGN      shift, and go to state 105
    MULT_ASSIGN     shift, and go to state 106
    DIV_ASSIGN      shift, and go to state 107
    MOD_ASSIGN      shift, and go to state 108
    LEFT_ASSIGN     shift, and go to state 109
    RIGHT_ASSIGN    shift, and go to state 110
    ASSIGN          shift, and go to state 111

    arith_unary_op  go to state 240
    arith_assgn_op  go to state 114
    bit_assgn_op    go to state 115


State 228

   45 for_update: assignment_block . COMMA for_update
   49           | assignment_block .

    COMMA  shift, and go to state 241

    $default  reduce using rule 49 (for_update)


State 229

   47 for_update: arith_unary_op . ass_var_block COMMA for_update
   51           | arith_unary_op . ass_var_block

    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19

    var_block      go to state 47
    ass_var_block  go to state 242


State 230

   36 for_initialization: ass_var_block arith_unary_op COMMA for_initialization .

    $default  reduce using rule 36 (for_initialization)


State 231

   37 for_initialization: arith_unary_op ass_var_block COMMA for_initialization .

    $default  reduce using rule 37 (for_initialization)


State 232

   53 function_def_block: FUNCTION ident OP argument_list_block CP OCB . general_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29

    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    comment_block           go to state 71
    const_block             go to state 34
    general_block           go to state 243
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 233

   55 argument_list_block: data_type var_block COMMA . argument_list_block

    INT     shift, and go to state 9
    LONG    shift, and go to state 10
    CHAR    shift, and go to state 11
    FLOAT   shift, and go to state 12
    DOUBLE  shift, and go to state 13

    $default  reduce using rule 57 (argument_list_block)

    argument_list_block  go to state 244
    data_type            go to state 196


State 234

   22 if_else_block: IF OP if_condition CP OCB general_block CCB .
   23              | IF OP if_condition CP OCB general_block CCB . ELSE OCB general_block CCB
   24              | IF OP if_condition CP OCB general_block CCB . ELSE if_else_block

    ELSE  shift, and go to state 245

    $default  reduce using rule 22 (if_else_block)


State 235

   29 while_loop_block: WHILE OP while_condition CP OCB general_block CCB .

    $default  reduce using rule 29 (while_loop_block)


State 236

   31 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition . CP TERMINATOR

    CP  shift, and go to state 246


State 237

   32 do_while_condition: conditional_expr .

    $default  reduce using rule 32 (do_while_condition)


State 238

   33 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP . OCB general_block CCB

    OCB  shift, and go to state 247


State 239

   44 for_update: function_call_block COMMA . for_update

    INC      shift, and go to state 139
    DEC      shift, and go to state 140
    IDENT    shift, and go to state 16
    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19
    OP       shift, and go to state 142

    $default  reduce using rule 52 (for_update)

    for_update           go to state 248
    function_call_block  go to state 226
    var_block            go to state 47
    ass_var_block        go to state 227
    assignment_block     go to state 228
    arith_unary_op       go to state 229


State 240

   46 for_update: ass_var_block arith_unary_op . COMMA for_update
   50           | ass_var_block arith_unary_op .

    COMMA  shift, and go to state 249

    $default  reduce using rule 50 (for_update)


State 241

   45 for_update: assignment_block COMMA . for_update

    INC      shift, and go to state 139
    DEC      shift, and go to state 140
    IDENT    shift, and go to state 16
    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19
    OP       shift, and go to state 142

    $default  reduce using rule 52 (for_update)

    for_update           go to state 250
    function_call_block  go to state 226
    var_block            go to state 47
    ass_var_block        go to state 227
    assignment_block     go to state 228
    arith_unary_op       go to state 229


State 242

   47 for_update: arith_unary_op ass_var_block . COMMA for_update
   51           | arith_unary_op ass_var_block .

    COMMA  shift, and go to state 251

    $default  reduce using rule 51 (for_update)


State 243

   53 function_def_block: FUNCTION ident OP argument_list_block CP OCB general_block . CCB

    CCB  shift, and go to state 252


State 244

   55 argument_list_block: data_type var_block COMMA argument_list_block .

    $default  reduce using rule 55 (argument_list_block)


State 245

   23 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE . OCB general_block CCB
   24              | IF OP if_condition CP OCB general_block CCB ELSE . if_else_block

    IF   shift, and go to state 2
    OCB  shift, and go to state 253

    if_else_block  go to state 254


State 246

   31 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition CP . TERMINATOR

    TERMINATOR  shift, and go to state 255


State 247

   33 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB . general_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29

    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    comment_block           go to state 71
    const_block             go to state 34
    general_block           go to state 256
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 248

   44 for_update: function_call_block COMMA for_update .

    $default  reduce using rule 44 (for_update)


State 249

   46 for_update: ass_var_block arith_unary_op COMMA . for_update

    INC      shift, and go to state 139
    DEC      shift, and go to state 140
    IDENT    shift, and go to state 16
    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19
    OP       shift, and go to state 142

    $default  reduce using rule 52 (for_update)

    for_update           go to state 257
    function_call_block  go to state 226
    var_block            go to state 47
    ass_var_block        go to state 227
    assignment_block     go to state 228
    arith_unary_op       go to state 229


State 250

   45 for_update: assignment_block COMMA for_update .

    $default  reduce using rule 45 (for_update)


State 251

   47 for_update: arith_unary_op ass_var_block COMMA . for_update

    INC      shift, and go to state 139
    DEC      shift, and go to state 140
    IDENT    shift, and go to state 16
    VAR      shift, and go to state 17
    POINTER  shift, and go to state 18
    DREF     shift, and go to state 19
    OP       shift, and go to state 142

    $default  reduce using rule 52 (for_update)

    for_update           go to state 258
    function_call_block  go to state 226
    var_block            go to state 47
    ass_var_block        go to state 227
    assignment_block     go to state 228
    arith_unary_op       go to state 229


State 252

   53 function_def_block: FUNCTION ident OP argument_list_block CP OCB general_block CCB .

    $default  reduce using rule 53 (function_def_block)


State 253

   23 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE OCB . general_block CCB

    error          shift, and go to state 1
    IF             shift, and go to state 2
    WHILE          shift, and go to state 3
    DO             shift, and go to state 4
    FOR            shift, and go to state 5
    NOT_1          shift, and go to state 6
    TRUE_1         shift, and go to state 7
    FALSE_1        shift, and go to state 8
    INT            shift, and go to state 9
    LONG           shift, and go to state 10
    CHAR           shift, and go to state 11
    FLOAT          shift, and go to state 12
    DOUBLE         shift, and go to state 13
    BIN_NOT        shift, and go to state 14
    NUM            shift, and go to state 15
    IDENT          shift, and go to state 16
    VAR            shift, and go to state 17
    POINTER        shift, and go to state 18
    DREF           shift, and go to state 19
    STRING         shift, and go to state 20
    CHARACTER      shift, and go to state 21
    OP             shift, and go to state 22
    COMMENT        shift, and go to state 23
    MULTI_COMMENT  shift, and go to state 24
    PRINT          shift, and go to state 29

    AND         reduce using rule 104 (expr)
    OR          reduce using rule 104 (expr)
    TERMINATOR  reduce using rule 104 (expr)
    CCB         reduce using rule 21 (general_block)
    EQ          reduce using rule 104 (expr)
    NOTEQ       reduce using rule 104 (expr)
    GT          reduce using rule 104 (expr)
    LT          reduce using rule 104 (expr)
    GE          reduce using rule 104 (expr)
    LE          reduce using rule 104 (expr)
    LTGT        reduce using rule 104 (expr)

    comment_block           go to state 71
    const_block             go to state 34
    general_block           go to state 259
    if_else_block           go to state 37
    loop_block              go to state 38
    while_loop_block        go to state 39
    do_while_loop_block     go to state 40
    for_loop_block          go to state 41
    general_stmt            go to state 43
    function_call_block     go to state 44
    declaration_block       go to state 45
    data_type               go to state 46
    var_block               go to state 47
    ass_var_block           go to state 48
    assignment_block        go to state 49
    expr                    go to state 50
    conditional_expr        go to state 51
    bit_unary_condition_op  go to state 52
    fixed_condition         go to state 53
    bit_unary_op            go to state 54


State 254

   24 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE if_else_block .

    $default  reduce using rule 24 (if_else_block)


State 255

   31 do_while_loop_block: DO OCB general_block CCB WHILE OP do_while_condition CP TERMINATOR .

    $default  reduce using rule 31 (do_while_loop_block)


State 256

   33 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB general_block . CCB

    CCB  shift, and go to state 260


State 257

   46 for_update: ass_var_block arith_unary_op COMMA for_update .

    $default  reduce using rule 46 (for_update)


State 258

   47 for_update: arith_unary_op ass_var_block COMMA for_update .

    $default  reduce using rule 47 (for_update)


State 259

   23 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE OCB general_block . CCB

    CCB  shift, and go to state 261


State 260

   33 for_loop_block: FOR OP for_initialization for_condition TERMINATOR for_update CP OCB general_block CCB .

    $default  reduce using rule 33 (for_loop_block)


State 261

   23 if_else_block: IF OP if_condition CP OCB general_block CCB ELSE OCB general_block CCB .

    $default  reduce using rule 23 (if_else_block)
